!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^impl<'de, 'a, A> MapAccess<'de> for &'a mut A$/;"	c
A	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^impl<'de, 'a, A> SeqAccess<'de> for &'a mut A$/;"	c
Adjacent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    Adjacent { tag: String, content: String },$/;"	e	enum:TagType
All	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    All,$/;"	e	enum:Trim
AllArgsOverrideSelf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    AllArgsOverrideSelf,$/;"	e	enum:AppSettings
AllowExternalSubcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    AllowExternalSubcommands,$/;"	e	enum:AppSettings
AllowInvalidUtf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    AllowInvalidUtf8,$/;"	e	enum:AppSettings
AllowLeadingHyphen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    AllowLeadingHyphen,$/;"	e	enum:AppSettings
AllowLeadingHyphen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    AllowLeadingHyphen,$/;"	e	enum:ArgSettings
AllowMissingPositional	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    AllowMissingPositional,$/;"	e	enum:AppSettings
AllowNegativeNumbers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    AllowNegativeNumbers,$/;"	e	enum:AppSettings
Always	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    Always,$/;"	e	enum:ColorWhen
Always	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    Always,$/;"	e	enum:QuoteStyle
Any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    Any(u8),$/;"	e	enum:Terminator
AnyArg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^pub trait AnyArg<'n, 'e>: std_fmt::Display {$/;"	i
App	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^impl<'b, 'c> DispOrder for App<'b, 'c> {$/;"	c
App	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^impl<'a, 'b> App<'a, 'b> {$/;"	c
App	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^impl<'a, 'b> Clone for App<'a, 'b> {$/;"	c
App	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^impl<'a> From<&'a Yaml> for App<'a, 'a> {$/;"	c
App	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^impl<'n, 'e> AnyArg<'n, 'e> for App<'n, 'e> {$/;"	c
App	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^impl<'n, 'e> fmt::Display for App<'n, 'e> {$/;"	c
App	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^pub struct App<'a, 'b>$/;"	s
AppFlags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^impl AppFlags {$/;"	c
AppFlags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^impl BitOr for AppFlags {$/;"	c
AppFlags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^impl Default for AppFlags {$/;"	c
AppFlags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^pub struct AppFlags(Flags);$/;"	s
AppMeta	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^impl<'b> AppMeta<'b> {$/;"	c
AppMeta	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^pub struct AppMeta<'b> {$/;"	s
AppSettings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^impl FromStr for AppSettings {$/;"	c
AppSettings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^pub enum AppSettings {$/;"	g
ArcWeak	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for ArcWeak<T>$/;"	c
ArcWeak	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for ArcWeak<T>$/;"	c
Arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^impl<'a, 'b, 'z> From<&'z Arg<'a, 'b>> for Arg<'a, 'b> {$/;"	c
Arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^impl<'a, 'b> Arg<'a, 'b> {$/;"	c
Arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^impl<'n, 'e> PartialEq for Arg<'n, 'e> {$/;"	c
Arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^pub struct Arg<'a, 'b>$/;"	s
ArgEnum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^    pub trait ArgEnum {}$/;"	i	module:derive
ArgFlags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^impl ArgFlags {$/;"	c
ArgFlags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^impl Default for ArgFlags {$/;"	c
ArgFlags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^pub struct ArgFlags(Flags);$/;"	s
ArgGroup	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^impl<'a, 'z> From<&'z ArgGroup<'a>> for ArgGroup<'a> {$/;"	c
ArgGroup	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^impl<'a> ArgGroup<'a> {$/;"	c
ArgGroup	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^impl<'a> Clone for ArgGroup<'a> {$/;"	c
ArgGroup	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^impl<'a> Debug for ArgGroup<'a> {$/;"	c
ArgGroup	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^impl<'a> From<&'a BTreeMap<Yaml, Yaml>> for ArgGroup<'a> {$/;"	c
ArgGroup	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^pub struct ArgGroup<'a> {$/;"	s
ArgMatcher	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^impl<'a> ArgMatcher<'a> {$/;"	c
ArgMatcher	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^impl<'a> Default for ArgMatcher<'a> {$/;"	c
ArgMatcher	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^impl<'a> Into<ArgMatches<'a>> for ArgMatcher<'a> {$/;"	c
ArgMatcher	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^pub struct ArgMatcher<'a>(pub ArgMatches<'a>);$/;"	s
ArgMatches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> ArgMatches<'a> {$/;"	c
ArgMatches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> Default for ArgMatches<'a> {$/;"	c
ArgMatches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^pub struct ArgMatches<'a> {$/;"	s
ArgRequiredElseHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    ArgRequiredElseHelp,$/;"	e	enum:AppSettings
ArgSettings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^impl FromStr for ArgSettings {$/;"	c
ArgSettings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^pub enum ArgSettings {$/;"	g
ArgWithDisplay	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^trait ArgWithDisplay<'b, 'c>: AnyArg<'b, 'c> + Display {}$/;"	i
ArgWithOrder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^trait ArgWithOrder<'b, 'c>: ArgWithDisplay<'b, 'c> + DispOrder {$/;"	i
ArgsNegateSubcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    ArgsNegateSubcommands,$/;"	e	enum:AppSettings
ArgumentConflict	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    ArgumentConflict,$/;"	e	enum:ErrorKind
ArgumentNotFound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    ArgumentNotFound,$/;"	e	enum:ErrorKind
Arguments	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<'a> Serialize for fmt::Arguments<'a> {$/;"	c
ArrayInPlaceVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct ArrayInPlaceVisitor<'a, A: 'a>(&'a mut A);$/;"	s
ArrayVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for ArrayVisitor<[T; 0]> {$/;"	c
ArrayVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<A> ArrayVisitor<A> {$/;"	c
ArrayVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct ArrayVisitor<A> {$/;"	s
Attr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^impl<'c, T> Attr<'c, T> {$/;"	c
Attr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^struct Attr<'c, T> {$/;"	s
Auto	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    Auto,$/;"	e	enum:ColorWhen
B	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    impl<A, B> Pair for (A, B) {$/;"	c	module:private
BTreeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, K, V, E> IntoDeserializer<'de, E> for BTreeMap<K, V>$/;"	c
BTreeSet	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for BTreeSet<T>$/;"	c
Bar	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            Bar,$/;"	e	enum:tests::enum_label_simple_tagged::Label
Bar	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Bar {};$/;"	s	function:tests::with_header_empty_ok
Bar	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            Bar(f32),$/;"	e	enum:tests::enum_newtypes::Wat
Bar	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            Bar,$/;"	e	enum:tests::enum_units::Wat
Bar	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Bar {$/;"	s	function:tests::struct_headers_inside_nested_tuple_seq
Bar	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Bar {$/;"	s	function:tests::struct_headers_inside_tuple
Base	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^impl<'n, 'e, 'z> From<&'z Arg<'n, 'e>> for Base<'n, 'e> {$/;"	c
Base	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^impl<'n, 'e> Base<'n, 'e> {$/;"	c
Base	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^impl<'n, 'e> PartialEq for Base<'n, 'e> {$/;"	c
Base	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^pub struct Base<'a, 'b>$/;"	s
Bash	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^    Bash,$/;"	e	enum:Shell
BashGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^impl<'a, 'b> BashGen<'a, 'b> {$/;"	c
BashGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^pub struct BashGen<'a, 'b>$/;"	s
Baz	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            Baz,$/;"	e	enum:tests::enum_label_simple_tagged::Label
Baz	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            Baz(bool),$/;"	e	enum:tests::enum_newtypes::Wat
Baz	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            Baz,$/;"	e	enum:tests::enum_units::Wat
Baz	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Baz(bool);$/;"	s	function:tests::struct_headers_inside_nested_tuple_seq
Block	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^    Block(TokenStream),$/;"	e	enum:Fragment
Bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            Bool(bool),$/;"	e	enum:tests::enum_untagged::Boolish
Bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Bool(bool),$/;"	e	enum:Unexpected
Bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Bool(bool),$/;"	e	enum:content::Content
Bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        Bool(bool),$/;"	e	enum:content::Content
BoolAttr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^impl<'c> BoolAttr<'c> {$/;"	c
BoolAttr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^struct BoolAttr<'c>(Attr<'c, ()>);$/;"	s
BoolVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Visitor<'de> for BoolVisitor {$/;"	c
BoolVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct BoolVisitor;$/;"	s
Boolean	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    Boolean,$/;"	e	enum:Unsupported
Boolish	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        enum Boolish {$/;"	g	function:tests::enum_untagged
Borrowed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    Borrowed(BTreeSet<syn::Lifetime>),$/;"	e	enum:BorrowedLifetimes
BorrowedBytesDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> BorrowedBytesDeserializer<'de, E> {$/;"	c
BorrowedBytesDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for BorrowedBytesDeserializer<'de, E>$/;"	c
BorrowedBytesDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct BorrowedBytesDeserializer<'de, E> {$/;"	s
BorrowedLifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^enum BorrowedLifetimes {$/;"	g
BorrowedLifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^impl BorrowedLifetimes {$/;"	c
BorrowedLifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    impl Parse for BorrowedLifetimes {$/;"	c	function:parse_lit_into_lifetimes
BorrowedLifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    struct BorrowedLifetimes(Punctuated<syn::Lifetime, Token![+]>);$/;"	s	function:parse_lit_into_lifetimes
BorrowedStrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> BorrowedStrDeserializer<'de, E> {$/;"	c
BorrowedStrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
Bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Bound<T>$/;"	c
Bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for Bound<T>$/;"	c
BoundVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for BoundVisitor<T>$/;"	c	function:deserialize
BoundVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        struct BoundVisitor<T>(PhantomData<Bound<T>>);$/;"	s	function:deserialize
Bounds	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl Bounds {$/;"	c
Bounds	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl Default for Bounds {$/;"	c
Bounds	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^struct Bounds {$/;"	s
Buffer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^impl Buffer {$/;"	c
Buffer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^struct Buffer {$/;"	s
ByteArray	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    ByteArray,$/;"	e	enum:Unsupported
ByteBuf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        ByteBuf(Vec<u8>),$/;"	e	enum:content::Content
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl Default for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl From<StringRecord> for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl PartialEq for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl fmt::Debug for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl ops::Index<usize> for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<'a, T: AsRef<[u8]>> From<&'a [T]> for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<'a, T: AsRef<[u8]>> PartialEq<Vec<T>> for &'a ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<'a, T: AsRef<[u8]>> PartialEq<[T]> for &'a ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<'r> IntoIterator for &'r ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<T: AsRef<[u8]>> Extend<T> for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<T: AsRef<[u8]>> From<Vec<T>> for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<T: AsRef<[u8]>> FromIterator<T> for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<T: AsRef<[u8]>> PartialEq<Vec<T>> for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<T: AsRef<[u8]>> PartialEq<[T]> for ByteRecord {$/;"	c
ByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^pub struct ByteRecord(Box<ByteRecordInner>);$/;"	s
ByteRecordInner	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^struct ByteRecordInner {$/;"	s
ByteRecordIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<'r> DoubleEndedIterator for ByteRecordIter<'r> {$/;"	c
ByteRecordIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<'r> ExactSizeIterator for ByteRecordIter<'r> {}$/;"	c
ByteRecordIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl<'r> Iterator for ByteRecordIter<'r> {$/;"	c
ByteRecordIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^pub struct ByteRecordIter<'r> {$/;"	s
ByteRecordsIntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<R: io::Read> ByteRecordsIntoIter<R> {$/;"	c
ByteRecordsIntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<R: io::Read> Iterator for ByteRecordsIntoIter<R> {$/;"	c
ByteRecordsIntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct ByteRecordsIntoIter<R> {$/;"	s
ByteRecordsIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<'r, R: io::Read> ByteRecordsIter<'r, R> {$/;"	c
ByteRecordsIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<'r, R: io::Read> Iterator for ByteRecordsIter<'r, R> {$/;"	c
ByteRecordsIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct ByteRecordsIter<'r, R: 'r> {$/;"	s
Bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Bytes(&'a [u8]),$/;"	e	enum:Unexpected
Bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Bytes(&'de [u8]),$/;"	e	enum:content::Content
Bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        Bytes(Vec<u8>),$/;"	e	enum:content::Content
BytesDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'de, 'a, E> Deserializer<'de> for BytesDeserializer<'a, E>$/;"	c
BytesDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub struct BytesDeserializer<'a, E> {$/;"	s
BytesVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'a> Visitor<'a> for BytesVisitor {$/;"	c
BytesVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct BytesVisitor;$/;"	s
CRLF	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    CRLF,$/;"	e	enum:Terminator
CStr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for CStr {$/;"	c
CString	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for CString {$/;"	c
CString	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for CString {$/;"	c
CStringVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Visitor<'de> for CStringVisitor {$/;"	c
CStringVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct CStringVisitor;$/;"	s
CamelCase	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    CamelCase,$/;"	e	enum:RenameRule
CaseInsensitive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    CaseInsensitive,$/;"	e	enum:ArgSettings
Cell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Cell<T>$/;"	c
Cell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for Cell<T>$/;"	c
Char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Char(char),$/;"	e	enum:Unexpected
Char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    Char,$/;"	e	enum:Unsupported
CharVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Visitor<'de> for CharVisitor {$/;"	c
CharVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct CharVisitor;$/;"	s
ClapApp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^    pub trait ClapApp: IntoApp + FromArgMatches + Sized {$/;"	i	module:derive
ColorAlways	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    ColorAlways,$/;"	e	enum:AppSettings
ColorAuto	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    ColorAuto,$/;"	e	enum:AppSettings
ColorNever	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    ColorNever,$/;"	e	enum:AppSettings
ColorWhen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^pub enum ColorWhen {$/;"	g
ColoredHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    ColoredHelp,$/;"	e	enum:AppSettings
Colorizer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^impl Colorizer {$/;"	c
Colorizer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^impl Default for Colorizer {$/;"	c
Colorizer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^pub struct Colorizer {$/;"	s
ColorizerOption	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^pub struct ColorizerOption {$/;"	s
ComplGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^impl<'a, 'b> ComplGen<'a, 'b> {$/;"	c
ComplGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^pub struct ComplGen<'a, 'b>$/;"	s
Container	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^impl<'a> Container<'a> {$/;"	c
Container	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^pub struct Container<'a> {$/;"	s
Container	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^impl Container {$/;"	c
Container	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^pub struct Container {$/;"	s
ContainsLast	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    ContainsLast,$/;"	e	enum:AppSettings
Content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Content(Content<'de>),$/;"	e	enum:content::TagOrContent
Content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagContentOtherField
Content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagOrContentField
Content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> Content<'de> {$/;"	c	module:content
Content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> Deserialize<'de> for Content<'de> {$/;"	c	module:content
Content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub enum Content<'de> {$/;"	g	module:content
Content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl Serialize for Content {$/;"	c	module:content
Content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub enum Content {$/;"	g	module:content
ContentDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E> {$/;"	c	module:content
ContentDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> de::IntoDeserializer<'de, E> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct ContentDeserializer<'de, E> {$/;"	s	module:content
ContentRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E> {$/;"	c	module:content
ContentRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a, E> Deserializer<'de> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a, E> de::IntoDeserializer<'de, E> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct ContentRefDeserializer<'a, 'de: 'a, E> {$/;"	s	module:content
ContentSerializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<E> ContentSerializer<E> {$/;"	c	module:content
ContentSerializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<E> Serializer for ContentSerializer<E>$/;"	c	module:content
ContentSerializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct ContentSerializer<E> {$/;"	s	module:content
ContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> Visitor<'de> for ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct ContentVisitor<'de> {$/;"	s	module:content
CopyUntilResult	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^enum CopyUntilResult {$/;"	g
Cow	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, 'a, T: ?Sized> Deserialize<'de> for Cow<'a, T>$/;"	c
Cow	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for Cow<'a, str>$/;"	c
CowBytesVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowBytesVisitor {$/;"	c	function:borrow_cow_bytes
CowBytesVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct CowBytesVisitor;$/;"	s	function:borrow_cow_bytes
CowStrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'a, E> Clone for CowStrDeserializer<'a, E> {$/;"	c
CowStrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct CowStrDeserializer<'a, E> {$/;"	s
CowStrVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowStrVisitor {$/;"	c	function:borrow_cow_str
CowStrVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct CowStrVisitor;$/;"	s	function:borrow_cow_str
Critical	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    Critical = 1,$/;"	e	enum:PriEnum
Ctxt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ctxt.rs	/^impl Ctxt {$/;"	c
Ctxt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ctxt.rs	/^impl Drop for Ctxt {$/;"	c
Ctxt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ctxt.rs	/^pub struct Ctxt {$/;"	s
Data	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^impl<'a> Data<'a> {$/;"	c
Data	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^pub enum Data<'a> {$/;"	g
DeByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl<'r> DeRecord<'r> for DeByteRecord<'r> {$/;"	c
DeByteRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^struct DeByteRecord<'r> {$/;"	s
DeImplGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^impl<'a> DeImplGenerics<'a> {$/;"	c
DeImplGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^impl<'a> ToTokens for DeImplGenerics<'a> {$/;"	c
DeImplGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^struct DeImplGenerics<'a>(&'a Parameters);$/;"	s
DeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^trait DeRecord<'r> {$/;"	i
DeRecordWrap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl<'a, 'de: 'a, T: DeRecord<'de>> Deserializer<'de>$/;"	c
DeRecordWrap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl<'a, 'de: 'a, T: DeRecord<'de>> EnumAccess<'de>$/;"	c
DeRecordWrap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl<'a, 'de: 'a, T: DeRecord<'de>> MapAccess<'de>$/;"	c
DeRecordWrap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl<'a, 'de: 'a, T: DeRecord<'de>> SeqAccess<'de>$/;"	c
DeRecordWrap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl<'a, 'de: 'a, T: DeRecord<'de>> VariantAccess<'de>$/;"	c
DeRecordWrap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl<'r, T: DeRecord<'r>> DeRecord<'r> for DeRecordWrap<T> {$/;"	c
DeRecordWrap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^struct DeRecordWrap<T>(T);$/;"	s
DeStringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl<'r> DeRecord<'r> for DeStringRecord<'r> {$/;"	c
DeStringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^struct DeStringRecord<'r> {$/;"	s
DeTypeGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^impl<'a> DeTypeGenerics<'a> {$/;"	c
DeTypeGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^impl<'a> ToTokens for DeTypeGenerics<'a> {$/;"	c
DeTypeGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^struct DeTypeGenerics<'a>(&'a Parameters);$/;"	s
Default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    Default,$/;"	e	enum:Default
Default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^impl Default {$/;"	c
Default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^pub enum Default {$/;"	g
DelimiterFound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    DelimiterFound(usize),$/;"	e	enum:CopyUntilResult
DelimiterNotFound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    DelimiterNotFound(usize),$/;"	e	enum:CopyUntilResult
Derive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^pub enum Derive {$/;"	g
DeriveDisplayOrder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    DeriveDisplayOrder,$/;"	e	enum:AppSettings
Deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    Deserialize {$/;"	e	enum:ErrorKind
Deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for ! {$/;"	c
Deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for () {$/;"	c
Deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait Deserialize<'de>: Sized {$/;"	i
Deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^    Deserialize,$/;"	e	enum:Derive
DeserializeError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl DeserializeError {$/;"	c
DeserializeError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl SerdeError for DeserializeError {$/;"	c
DeserializeError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl StdError for DeserializeError {$/;"	c
DeserializeError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl fmt::Display for DeserializeError {$/;"	c
DeserializeError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^pub struct DeserializeError {$/;"	s
DeserializeErrorKind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl DeserializeErrorKind {$/;"	c
DeserializeErrorKind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^impl fmt::Display for DeserializeErrorKind {$/;"	c
DeserializeErrorKind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^pub enum DeserializeErrorKind {$/;"	g
DeserializeOwned	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait DeserializeOwned: for<'de> Deserialize<'de> {}$/;"	i
DeserializeRecordsIntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<R: io::Read, D: DeserializeOwned> DeserializeRecordsIntoIter<R, D> {$/;"	c
DeserializeRecordsIntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<R: io::Read, D: DeserializeOwned> Iterator$/;"	c
DeserializeRecordsIntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct DeserializeRecordsIntoIter<R, D> {$/;"	s
DeserializeRecordsIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<'r, R: io::Read, D: DeserializeOwned> DeserializeRecordsIter<'r, R, D> {$/;"	c
DeserializeRecordsIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<'r, R: io::Read, D: DeserializeOwned> Iterator$/;"	c
DeserializeRecordsIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct DeserializeRecordsIter<'r, R: 'r, D> {$/;"	s
DeserializeSeed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait DeserializeSeed<'de>: Sized {$/;"	i
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IntoDeserializer
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait Deserializer<'de>: Sized {$/;"	i
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Deserializer = CowStrDeserializer<'a, E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Deserializer = MapDeserializer<'de, <Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Deserializer = NeverDeserializer<E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Deserializer = SeqDeserializer<<Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Deserializer = StringDeserializer<E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Deserializer = U32Deserializer<E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Deserializer = UnitDeserializer<E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Deserializer = Self;$/;"	t	module:content
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    type Deserializer = <u32 as IntoDeserializer<'de, E>>::Deserializer;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IdentifierDeserializer
DidNotWrite	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    DidNotWrite,$/;"	e	enum:HeaderState
DidWrite	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    DidWrite,$/;"	e	enum:HeaderState
DisableHelpFlags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    DisableHelpFlags,$/;"	e	enum:AppSettings
DisableHelpSubcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    DisableHelpSubcommand,$/;"	e	enum:AppSettings
DisableVersion	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    DisableVersion,$/;"	e	enum:AppSettings
DispOrder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^pub trait DispOrder {$/;"	i
DontCollapseArgsInUsage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    DontCollapseArgsInUsage,$/;"	e	enum:AppSettings
DontDelimitTrailingValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    DontDelimitTrailingValues,$/;"	e	enum:AppSettings
Duration	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for Duration {$/;"	c
Duration	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for Duration {$/;"	c
DurationVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:Duration::deserialize
DurationVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:SystemTime::deserialize
DurationVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:Duration::deserialize
DurationVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:SystemTime::deserialize
EMPTY	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^        static EMPTY: [OsString; 0] = [];$/;"	v	method:OsValues::default
EMPTY	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^        static EMPTY: [OsString; 0] = [];$/;"	v	method:Values::default
EMPTY	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^        static EMPTY: [usize; 0] = [];$/;"	v	method:Indices::default
Elvish	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^    Elvish,$/;"	e	enum:Shell
ElvishGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/elvish.rs	/^impl<'a, 'b> ElvishGen<'a, 'b> {$/;"	c
ElvishGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/elvish.rs	/^pub struct ElvishGen<'a, 'b>$/;"	s
EmptyValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    EmptyValue,$/;"	e	enum:ErrorKind
EmptyValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    EmptyValues,$/;"	e	enum:ArgSettings
Encode	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/utf8.rs	/^impl Encode {$/;"	c
Encode	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/utf8.rs	/^pub struct Encode {$/;"	s
EncounteredStructField	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    EncounteredStructField,$/;"	e	enum:HeaderState
End	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        End,$/;"	e	enum:range::Field
Entry	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^    pub type Entry<'a, V> = btree_map::Entry<'a, usize, V>;$/;"	t	module:vec_map
Enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Enum,$/;"	e	enum:Unexpected
Enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    Enum,$/;"	e	enum:Unsupported
Enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    Enum(Vec<Variant<'a>>),$/;"	e	enum:Data
EnumAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait EnumAccess<'de>: Sized {$/;"	i
EnumDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> de::EnumAccess<'de> for EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct EnumDeserializer<'de, E>$/;"	s	module:content
EnumRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a, E> de::EnumAccess<'de> for EnumRefDeserializer<'a, 'de, E>$/;"	c	module:content
EnumRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct EnumRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
Err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    type Err = String;$/;"	t	implementation:AppSettings
Err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    type Err = String;$/;"	t	implementation:ArgSettings
Err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^    type Err = String;$/;"	t	implementation:Shell
Err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            Err,$/;"	e	enum:deserialize::Field
Err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    type Err = ();$/;"	t	implementation:RenameRule
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^impl Display for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^impl Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^impl From<io::Error> for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^impl From<std_fmt::Error> for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^impl StdError for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^pub struct Error {$/;"	s
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    Error(T),$/;"	e	enum:Format
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    type Error = DeserializeError;$/;"	t	implementation:DeRecordWrap
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl From<Error> for io::Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl From<io::Error> for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl StdError for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub struct Error(Box<ErrorKind>);$/;"	s
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type Error = Error;$/;"	t	implementation:SeHeader
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type Error = Error;$/;"	t	implementation:SeRecord
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl SerdeError for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Error = A::Error;$/;"	t
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:Deserializer
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:EnumAccess
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:MapAccess
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:SeqAccess
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:VariantAccess
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        type Error = A::Error;$/;"	t	module:private
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        type Error = E;$/;"	t	module:private
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Error = A::Error;$/;"	t
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Error = E;$/;"	t
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl Display for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl de::Error for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl error::Error for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct Error {$/;"	s
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Error = E;$/;"	t	function:missing_field
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    type Error = E;$/;"	t
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type Error = M::Error;$/;"	t	module:content
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type Error = M::Error;$/;"	t
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type Error = S::Error;$/;"	t
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl Display for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl error::Error for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^pub struct Error;$/;"	s
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    type Error = fmt::Error;$/;"	t	implementation:Formatter
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^impl Error for fmt::Error {$/;"	c
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    type Error = Error;$/;"	t
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeMap
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeSeq
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStruct
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStructVariant
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTuple
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleStruct
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleVariant
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:Serializer
Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/std_error.rs	/^pub trait Error: Debug + Display {$/;"	i
ErrorIfWrite	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    ErrorIfWrite(Error),$/;"	e	enum:HeaderState
ErrorImpl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^type ErrorImpl = ();$/;"	t
ErrorImpl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^type ErrorImpl = Box<str>;$/;"	t
ErrorKind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^pub enum ErrorKind {$/;"	g
ErrorKind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl ErrorKind {$/;"	c
ErrorKind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub enum ErrorKind {$/;"	g
Excluded	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            Excluded,$/;"	e	enum:deserialize::Field
Expected	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait Expected {$/;"	i
ExpectedInMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl Expected for ExpectedInMap {$/;"	c
ExpectedInMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^struct ExpectedInMap(usize);$/;"	s
ExpectedInSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl Expected for ExpectedInSeq {$/;"	c
ExpectedInSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^struct ExpectedInSeq(usize);$/;"	s
Expr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^    Expr(TokenStream),$/;"	e	enum:Fragment
Expr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^impl ToTokens for Expr {$/;"	c
Expr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^pub struct Expr(pub Fragment);$/;"	s
External	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    External,$/;"	e	enum:TagType
ExternallyTagged	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    ExternallyTagged {$/;"	e	enum:StructVariant
ExternallyTagged	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    ExternallyTagged {$/;"	e	enum:TupleVariant
F32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        F32(f32),$/;"	e	enum:content::Content
F32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        F32(f32),$/;"	e	enum:content::Content
F64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        F64(f64),$/;"	e	enum:content::Content
F64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        F64(f64),$/;"	e	enum:content::Content
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        enum Field {$/;"	g	function:deserialize
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        enum Field {$/;"	g	method:Duration::deserialize
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        enum Field {$/;"	g	method:SystemTime::deserialize
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	function:deserialize
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:Duration::deserialize
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:SystemTime::deserialize
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    enum Field {$/;"	g	module:range
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    impl<'de> Deserialize<'de> for Field {$/;"	c	module:range
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^pub struct Field<'a> {$/;"	s
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    Field,$/;"	e	enum:Identifier
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^impl Field {$/;"	c
Field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^pub struct Field {$/;"	s
FieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:deserialize::Field::deserialize
FieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:deserialize::Field::deserialize
FieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:range::Field::deserialize
FieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            struct FieldVisitor;$/;"	s	method:range::Field::deserialize
Fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    Fields,$/;"	e	enum:Trim
FindTyParams	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^    impl<'ast> Visit<'ast> for FindTyParams<'ast> {$/;"	c	function:with_bound
FindTyParams	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^    struct FindTyParams<'ast> {$/;"	s	function:with_bound
First	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        type First = A;$/;"	t	implementation:private::B
First	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        type First;$/;"	t	interface:private::Pair
First	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub type First<T> = <T as Pair>::First;$/;"	t	module:private
Fish	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^    Fish,$/;"	e	enum:Shell
FishGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/fish.rs	/^impl<'a, 'b> FishGen<'a, 'b> {$/;"	c
FishGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/fish.rs	/^pub struct FishGen<'a, 'b>$/;"	s
Flag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    Flag,$/;"	e	enum:ParseResult
FlagBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^impl<'a, 'b, 'z> From<&'z Arg<'a, 'b>> for FlagBuilder<'a, 'b> {$/;"	c
FlagBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^impl<'a, 'b> From<Arg<'a, 'b>> for FlagBuilder<'a, 'b> {$/;"	c
FlagBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^impl<'n, 'e> AnyArg<'n, 'e> for FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^impl<'n, 'e> DispOrder for FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^impl<'n, 'e> Display for FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^impl<'n, 'e> FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^impl<'n, 'e> PartialEq for FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^pub struct FlagBuilder<'n, 'e>$/;"	s
FlatInternallyTaggedAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatInternallyTaggedAccess<'a, 'de, E>$/;"	c
FlatInternallyTaggedAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub struct FlatInternallyTaggedAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, 'de, E> FlatMapAccess<'a, 'de, E> {$/;"	c
FlatMapAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatMapAccess<'a, 'de, E>$/;"	c
FlatMapAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub struct FlatMapAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, 'de, E> Deserializer<'de> for FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, 'de, E> FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub struct FlatMapDeserializer<'a, 'de: 'a, E>($/;"	s
FlatMapSerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl<'a, M> ser::SerializeMap for FlatMapSerializeMap<'a, M>$/;"	c
FlatMapSerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^pub struct FlatMapSerializeMap<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl<'a, M> ser::SerializeStruct for FlatMapSerializeStruct<'a, M>$/;"	c
FlatMapSerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^pub struct FlatMapSerializeStruct<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStructVariantAsMapValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl<'a, M> FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl<'a, M> ser::SerializeStructVariant for FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^pub struct FlatMapSerializeStructVariantAsMapValue<'a, M: 'a> {$/;"	s
FlatMapSerializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl<'a, M> FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl<'a, M> Serializer for FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^pub struct FlatMapSerializer<'a, M: 'a>(pub &'a mut M);$/;"	s
FlatStructAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, 'de, E> FlatStructAccess<'a, 'de, E> {$/;"	c
FlatStructAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatStructAccess<'a, 'de, E>$/;"	c
FlatStructAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub struct FlatStructAccess<'a, 'de: 'a, E> {$/;"	s
Float	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Float(f64),$/;"	e	enum:Unexpected
Float	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    Float,$/;"	e	enum:Unsupported
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            Foo,$/;"	e	enum:tests::enum_label_simple_tagged::Label
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::option_empty_field
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::option_invalid_field
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::seq_in_struct
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::seq_in_struct_tail
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::with_header
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::with_header_empty
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::with_header_missing
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::with_header_missing_ok
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::with_header_no_fields
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::with_header_unknown
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s	function:tests::without_header
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo(i32, bool);$/;"	s	function:tests::two_fields
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo;$/;"	s	function:tests::with_header_empty_ok
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo<'a, 'c> {$/;"	s	function:tests::borrowed
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            Foo(i32),$/;"	e	enum:tests::enum_newtypes::Wat
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            Foo,$/;"	e	enum:tests::enum_units::Wat
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        enum Foo {$/;"	g	function:tests::enum_struct_variant
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        enum Foo {$/;"	g	function:tests::tuple_variant
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s	function:tests::struct_headers
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s	function:tests::struct_headers_inside_nested_tuple_seq
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s	function:tests::struct_headers_inside_seq
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s	function:tests::struct_headers_inside_tuple
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s	function:tests::struct_headers_inside_tuple_scalar_after
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s	function:tests::struct_headers_inside_tuple_scalar_before
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s	function:tests::struct_headers_nested
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s	function:tests::struct_headers_nested_seq
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s	function:tests::struct_no_headers
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo(bool, i32, String);$/;"	s	function:tests::tuple_struct
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo(f64);$/;"	s	function:tests::struct_newtype
Foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo;$/;"	s	function:tests::struct_unit
Format	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    Format,$/;"	e	enum:ErrorKind
Format	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^impl<T: AsRef<str>> Format<T> {$/;"	c
Format	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^impl<T: AsRef<str>> fmt::Display for Format<T> {$/;"	c
Format	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^impl<T: fmt::Display> Format<T> {$/;"	c
Format	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^impl<T: fmt::Display> fmt::Display for Format<T> {$/;"	c
Format	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^pub enum Format<T> {$/;"	g
Formatter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^impl<'a, 'b> Serializer for &'a mut fmt::Formatter<'b> {$/;"	c
Fragment	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^impl AsRef<TokenStream> for Fragment {$/;"	c
Fragment	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^pub enum Fragment {$/;"	g
FromArgMatches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^    pub trait FromArgMatches: Sized {$/;"	i	module:derive
FromPrimitive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^pub trait FromPrimitive: Sized {$/;"	i
FromUtf8Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl FromUtf8Error {$/;"	c
FromUtf8Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl StdError for FromUtf8Error {$/;"	c
FromUtf8Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl fmt::Display for FromUtf8Error {$/;"	c
FromUtf8Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub struct FromUtf8Error {$/;"	s
Global	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    Global,$/;"	e	enum:ArgSettings
GlobalVersion	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    GlobalVersion,$/;"	e	enum:AppSettings
Good	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    Good(T),$/;"	e	enum:Format
HashMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, K, V, S, E> IntoDeserializer<'de, E> for HashMap<K, V, S>$/;"	c
HashSet	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, T, S, E> IntoDeserializer<'de, E> for HashSet<T, S>$/;"	c
HeaderState	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^enum HeaderState {$/;"	g
HeaderState	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^enum HeaderState {$/;"	g
Headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    Headers,$/;"	e	enum:Trim
Headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^struct Headers {$/;"	s
Help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^impl<'a> Help<'a> {$/;"	c
Help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^pub struct Help<'a> {$/;"	s
Help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    Help,$/;"	e	enum:UsageToken
HelpDisplayed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    HelpDisplayed,$/;"	e	enum:ErrorKind
Hidden	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    Hidden,$/;"	e	enum:AppSettings
Hidden	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    Hidden,$/;"	e	enum:ArgSettings
HiddenLongHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    HiddenLongHelp,$/;"	e	enum:ArgSettings
HiddenShortHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    HiddenShortHelp,$/;"	e	enum:ArgSettings
HideDefaultValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    HideDefaultValue,$/;"	e	enum:ArgSettings
HideEnvValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    HideEnvValues,$/;"	e	enum:ArgSettings
HidePossibleValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    HidePossibleValues,$/;"	e	enum:ArgSettings
HidePossibleValuesInHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    HidePossibleValuesInHelp,$/;"	e	enum:AppSettings
High	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    High = 2,$/;"	e	enum:PriEnum
I16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        I16(i16),$/;"	e	enum:content::Content
I16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        I16(i16),$/;"	e	enum:content::Content
I32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        I32(i32),$/;"	e	enum:content::Content
I32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        I32(i32),$/;"	e	enum:content::Content
I64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        I64(i64),$/;"	e	enum:content::Content
I64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        I64(i64),$/;"	e	enum:content::Content
I8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        I8(i8),$/;"	e	enum:content::Content
I8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        I8(i8),$/;"	e	enum:content::Content
Ident	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/symbol.rs	/^impl PartialEq<Symbol> for Ident {$/;"	c
Ident	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/symbol.rs	/^impl<'a> PartialEq<Symbol> for &'a Ident {$/;"	c
Identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^impl Identifier {$/;"	c
Identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^pub enum Identifier {$/;"	g
IdentifierDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub trait IdentifierDeserializer<'de, E: Error> {$/;"	i
IgnoredAny	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^impl<'de> Deserialize<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^impl<'de> Visitor<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^pub struct IgnoredAny;$/;"	s
Impossible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^impl<Ok, Error> SerializeMap for Impossible<Ok, Error>$/;"	c
Impossible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^impl<Ok, Error> SerializeSeq for Impossible<Ok, Error>$/;"	c
Impossible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStructVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTuple for Impossible<Ok, Error>$/;"	c
Impossible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^pub struct Impossible<Ok, Error> {$/;"	s
InPlaceImplGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^impl<'a> ToTokens for InPlaceImplGenerics<'a> {$/;"	c
InPlaceImplGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^struct InPlaceImplGenerics<'a>(&'a Parameters);$/;"	s
InPlaceSeed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, 'de, T> DeserializeSeed<'de> for InPlaceSeed<'a, T>$/;"	c
InPlaceSeed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub struct InPlaceSeed<'a, T: 'a>(pub &'a mut T);$/;"	s
InPlaceTypeGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^impl<'a> ToTokens for InPlaceTypeGenerics<'a> {$/;"	c
InPlaceTypeGenerics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^struct InPlaceTypeGenerics<'a>(&'a Parameters);$/;"	s
InStructField	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    InStructField,$/;"	e	enum:HeaderState
Included	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            Included,$/;"	e	enum:deserialize::Field
Indices	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> Default for Indices<'a> {$/;"	c
Indices	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> DoubleEndedIterator for Indices<'a> {$/;"	c
Indices	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> ExactSizeIterator for Indices<'a> {}$/;"	c
Indices	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> Iterator for Indices<'a> {$/;"	c
Indices	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^pub struct Indices<'a> {$/;"	s
InferSubcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    InferSubcommands,$/;"	e	enum:AppSettings
Input	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Input {$/;"	s	function:tests::flatten
Integer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    Integer,$/;"	e	enum:Unsupported
Internal	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    Internal { tag: String },$/;"	e	enum:TagType
InternallyTagged	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    InternallyTagged {$/;"	e	enum:StructVariant
InternallyTaggedUnitVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'a> InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct InternallyTaggedUnitVisitor<'a> {$/;"	s	module:content
IntoApp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^    pub trait IntoApp {$/;"	i	module:derive
IntoDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait IntoDeserializer<'de, E: Error = value::Error> {$/;"	i
IntoDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for !$/;"	c
IntoDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for ()$/;"	c
IntoInnerError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl<W: std::any::Any> StdError for IntoInnerError<W> {$/;"	c
IntoInnerError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl<W> IntoInnerError<W> {$/;"	c
IntoInnerError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl<W> fmt::Debug for IntoInnerError<W> {$/;"	c
IntoInnerError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl<W> fmt::Display for IntoInnerError<W> {$/;"	c
IntoInnerError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub struct IntoInnerError<W> {$/;"	s
IntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    type IntoIter = ByteRecordIter<'r>;$/;"	t	implementation:ByteRecord
IntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    type IntoIter = StringRecordIter<'a>;$/;"	t	implementation:StringRecord
InvalidSubcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    InvalidSubcommand,$/;"	e	enum:ErrorKind
InvalidUtf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    InvalidUtf8,$/;"	e	enum:ErrorKind
InvalidUtf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    InvalidUtf8(str::Utf8Error),$/;"	e	enum:DeserializeErrorKind
InvalidValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    InvalidValue,$/;"	e	enum:ErrorKind
Io	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    Io,$/;"	e	enum:ErrorKind
Io	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    Io(io::Error),$/;"	e	enum:ErrorKind
IpAddr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::IpAddr {$/;"	c
IpAddr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for net::IpAddr {$/;"	c
IpAddrVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            impl<'de> Visitor<'de> for IpAddrVisitor {$/;"	c	method:IpAddr::deserialize
IpAddrVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            struct IpAddrVisitor;$/;"	s	method:IpAddr::deserialize
Ipv4Addr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for net::Ipv4Addr {$/;"	c
Ipv6Addr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for net::Ipv6Addr {$/;"	c
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    type Item = &'a OsStr;$/;"	t	implementation:OsValues
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    type Item = &'a str;$/;"	t	implementation:Values
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    type Item = usize;$/;"	t	implementation:Indices
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        type Item = (usize, &'a V);$/;"	t	implementation:vec_map::Iter
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    type Item = &'a OsStr;$/;"	t	implementation:OsSplit
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    type Item = &'r [u8];$/;"	t	implementation:ByteRecord
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    type Item = &'r [u8];$/;"	t	implementation:ByteRecordIter
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    type Item = Result<ByteRecord>;$/;"	t	implementation:ByteRecordsIntoIter
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    type Item = Result<ByteRecord>;$/;"	t	implementation:ByteRecordsIter
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    type Item = Result<D>;$/;"	t	implementation:DeserializeRecordsIntoIter
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    type Item = Result<D>;$/;"	t	implementation:DeserializeRecordsIter
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    type Item = Result<StringRecord>;$/;"	t	implementation:StringRecordsIntoIter
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    type Item = Result<StringRecord>;$/;"	t	implementation:StringRecordsIter
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    type Item = &'a str;$/;"	t	implementation:StringRecord
Item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    type Item = &'r str;$/;"	t	implementation:StringRecordIter
Iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^    impl<'a, V: 'a + Debug> Debug for Iter<'a, V> {$/;"	c	module:vec_map
Iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^    impl<'a, V: 'a> DoubleEndedIterator for Iter<'a, V> {$/;"	c	module:vec_map
Iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^    impl<'a, V: 'a> Iterator for Iter<'a, V> {$/;"	c	module:vec_map
Iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^    pub struct Iter<'a, V: 'a> {$/;"	s	module:vec_map
KebabCase	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    KebabCase,$/;"	e	enum:RenameRule
Label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        enum Label {$/;"	g	function:tests::enum_label_simple_tagged
Last	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    Last,$/;"	e	enum:ArgSettings
Long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    Long,$/;"	e	enum:UsageToken
Low	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    Low = 4,$/;"	e	enum:PriEnum
LowIndexMultiplePositional	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    LowIndexMultiplePositional,$/;"	e	enum:AppSettings
LowerCase	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    LowerCase,$/;"	e	enum:RenameRule
Map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Map,$/;"	e	enum:Unexpected
Map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Map(Vec<(Content<'de>, Content<'de>)>),$/;"	e	enum:content::Content
Map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        Map(Vec<(Content, Content)>),$/;"	e	enum:content::Content
MapAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait MapAccess<'de> {$/;"	i
MapAccessDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, A> de::EnumAccess<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<A> MapAccessDeserializer<A> {$/;"	c
MapAccessDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct MapAccessDeserializer<A> {$/;"	s
MapAsEnum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    impl<'de, A> VariantAccess<'de> for MapAsEnum<A>$/;"	c	module:private
MapAsEnum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub struct MapAsEnum<A> {$/;"	s	module:private
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, I, E> Clone for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, I, E> Debug for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, I, E> MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, I, E> de::Deserializer<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, I, E> de::MapAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, I, E> de::SeqAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct MapDeserializer<'de, I, E>$/;"	s
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> de::MapAccess<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct MapDeserializer<'de, E>$/;"	s	module:content
MapRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'a, 'de, E> MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a, E> de::MapAccess<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct MapRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
MarkWriteAndFlush	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^        impl MarkWriteAndFlush {$/;"	c	function:tests::full_buffer_should_not_flush_underlying
MarkWriteAndFlush	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^        impl Write for MarkWriteAndFlush {$/;"	c	function:tests::full_buffer_should_not_flush_underlying
MarkWriteAndFlush	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^        struct MarkWriteAndFlush(Vec<u8>);$/;"	s	function:tests::full_buffer_should_not_flush_underlying
Match	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^impl ToTokens for Match {$/;"	c
Match	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^pub struct Match(pub Fragment);$/;"	s
MatchedArg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/matched_arg.rs	/^impl Default for MatchedArg {$/;"	c
MatchedArg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/matched_arg.rs	/^impl MatchedArg {$/;"	c
MatchedArg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/matched_arg.rs	/^pub struct MatchedArg {$/;"	s
MaybeHyphenValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    MaybeHyphenValue,$/;"	e	enum:ParseResult
MaybeNegNum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    MaybeNegNum,$/;"	e	enum:ParseResult
Medium	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    Medium = 3,$/;"	e	enum:PriEnum
Message	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    Message(String),$/;"	e	enum:DeserializeErrorKind
MissingArgumentOrSubcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    MissingArgumentOrSubcommand,$/;"	e	enum:ErrorKind
MissingFieldDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for MissingFieldDeserializer<E>$/;"	c	function:missing_field
MissingFieldDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct MissingFieldDeserializer<E>(&'static str, PhantomData<E>);$/;"	s	function:missing_field
MissingRequiredArgument	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    MissingRequiredArgument,$/;"	e	enum:ErrorKind
MissingSubcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    MissingSubcommand,$/;"	e	enum:ErrorKind
Multiple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    Multiple,$/;"	e	enum:ArgSettings
Multiple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    Multiple,$/;"	e	enum:UsageToken
Mutex	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for Mutex<T>$/;"	c
Name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    Name,$/;"	e	enum:UsageToken
Name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^impl Name {$/;"	c
Name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^pub struct Name {$/;"	s
Nanos	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            Nanos,$/;"	e	enum:Duration::deserialize::Field
Nanos	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            Nanos,$/;"	e	enum:SystemTime::deserialize::Field
Necessary	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    Necessary,$/;"	e	enum:QuoteStyle
NeedsLongHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    NeedsLongHelp,$/;"	e	enum:AppSettings
NeedsLongVersion	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    NeedsLongVersion,$/;"	e	enum:AppSettings
NeedsSubcommandHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    NeedsSubcommandHelp,$/;"	e	enum:AppSettings
Nested	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Nested {$/;"	s	function:tests::struct_headers_nested
Never	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    Never,$/;"	e	enum:ColorWhen
Never	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    Never,$/;"	e	enum:QuoteStyle
NeverDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for NeverDeserializer<E>$/;"	c
NeverDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct NeverDeserializer<E> {$/;"	s
Newtype	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Newtype(Box<Content<'de>>),$/;"	e	enum:content::Content
Newtype	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    Newtype,$/;"	e	enum:Style
NewtypeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    NewtypeStruct,$/;"	e	enum:Unexpected
NewtypeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        NewtypeStruct(&'static str, Box<Content>),$/;"	e	enum:content::Content
NewtypeVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    NewtypeVariant,$/;"	e	enum:Unexpected
NewtypeVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        NewtypeVariant(&'static str, u32, &'static str, Box<Content>),$/;"	e	enum:content::Content
NextLineHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    NextLineHelp,$/;"	e	enum:AppSettings
NextLineHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    NextLineHelp,$/;"	e	enum:ArgSettings
No	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    No,$/;"	e	enum:Untagged
No	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    No,$/;"	e	enum:Identifier
NoBinaryName	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    NoBinaryName,$/;"	e	enum:AppSettings
NonNumeric	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    NonNumeric,$/;"	e	enum:QuoteStyle
None	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    None(T),$/;"	e	enum:Format
None	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    None,$/;"	e	enum:Trim
None	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    None,$/;"	e	enum:HeaderState
None	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        None,$/;"	e	enum:content::Content
None	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        None,$/;"	e	enum:content::Content
None	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    None,$/;"	e	enum:Default
None	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    None,$/;"	e	enum:TagType
None	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    None,$/;"	e	enum:RenameRule
NotFound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    NotFound,$/;"	e	enum:ParseResult
Number	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            Number(i64),$/;"	e	enum:tests::enum_untagged::Boolish
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type Ok = ();$/;"	t	implementation:SeHeader
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type Ok = ();$/;"	t	implementation:SeRecord
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            Ok,$/;"	e	enum:deserialize::Field
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type Ok = Content;$/;"	t	module:content
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type Ok = M::Ok;$/;"	t	module:content
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type Ok = ();$/;"	t
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type Ok = S::Ok;$/;"	t
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    type Ok = ();$/;"	t	implementation:Formatter
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    type Ok = Ok;$/;"	t
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeMap
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeSeq
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStruct
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStructVariant
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTuple
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleStruct
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleVariant
Ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:Serializer
OneOf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^impl Display for OneOf {$/;"	c
OneOf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^struct OneOf {$/;"	s
Opt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    Opt(&'a str),$/;"	e	enum:ParseResult
OptBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^impl<'n, 'e, 'z> From<&'z Arg<'n, 'e>> for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^impl<'n, 'e> AnyArg<'n, 'e> for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^impl<'n, 'e> DispOrder for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^impl<'n, 'e> Display for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^impl<'n, 'e> From<Arg<'n, 'e>> for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^impl<'n, 'e> OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^impl<'n, 'e> PartialEq for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^pub struct OptBuilder<'n, 'e>$/;"	s
Option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Option<T>$/;"	c
Option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Option,$/;"	e	enum:Unexpected
Option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for Option<T>$/;"	c
OptionVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for OptionVisitor<T>$/;"	c
OptionVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct OptionVisitor<T> {$/;"	s
Optional	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    Optional,$/;"	e	enum:Unsupported
Optional	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    Optional = 5,$/;"	e	enum:PriEnum
OsSplit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^impl<'a> Iterator for OsSplit<'a> {$/;"	c
OsSplit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^pub struct OsSplit<'a> {$/;"	s
OsStr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^impl OsStrExt2 for OsStr {$/;"	c
OsStr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^impl OsStrExt3 for OsStr {$/;"	c
OsStr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for OsStr {$/;"	c
OsStrExt2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^pub trait OsStrExt2 {$/;"	i
OsStrExt3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^pub trait OsStrExt3 {$/;"	i
OsString	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for OsString {$/;"	c
OsString	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for OsString {$/;"	c
OsStringVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Visitor<'de> for OsStringVisitor {$/;"	c
OsStringVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct OsStringVisitor;$/;"	s
OsValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> Default for OsValues<'a> {$/;"	c
OsValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> DoubleEndedIterator for OsValues<'a> {$/;"	c
OsValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> ExactSizeIterator for OsValues<'a> {}$/;"	c
OsValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> Iterator for OsValues<'a> {$/;"	c
OsValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^pub struct OsValues<'a> {$/;"	s
Other	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Other(&'a str),$/;"	e	enum:Unexpected
Other	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Other,$/;"	e	enum:content::TagContentOtherField
Output	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    type Output = Self;$/;"	t	implementation:AppFlags
Output	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    type Output = [u8];$/;"	t	implementation:ByteRecord
Output	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    type Output = str;$/;"	t	implementation:StringRecord
Pair	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub trait Pair {$/;"	i	module:private
PairDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, A, B, E> de::Deserializer<'de> for PairDeserializer<A, B, E>$/;"	c
PairDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^struct PairDeserializer<A, B, E>(A, B, PhantomData<E>);$/;"	s
PairVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, A, B, E> de::SeqAccess<'de> for PairVisitor<A, B, E>$/;"	c
PairVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^struct PairVisitor<A, B, E>(Option<A>, Option<B>, PhantomData<E>);$/;"	s
Parameters	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^impl Parameters {$/;"	c
Parameters	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^struct Parameters {$/;"	s
Parameters	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^impl Parameters {$/;"	c
Parameters	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^struct Parameters {$/;"	s
ParseBool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    ParseBool(str::ParseBoolError),$/;"	e	enum:DeserializeErrorKind
ParseFloat	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    ParseFloat(num::ParseFloatError),$/;"	e	enum:DeserializeErrorKind
ParseInt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    ParseInt(num::ParseIntError),$/;"	e	enum:DeserializeErrorKind
ParseResult	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^pub enum ParseResult<'a> {$/;"	g
Parser	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^impl<'a, 'b> Parser<'a, 'b>$/;"	c
Parser	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^pub struct Parser<'a, 'b>$/;"	s
PascalCase	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    PascalCase,$/;"	e	enum:RenameRule
Path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a Path {$/;"	c
Path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for Path {$/;"	c
Path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    Path(syn::ExprPath),$/;"	e	enum:Default
Path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/symbol.rs	/^impl PartialEq<Symbol> for Path {$/;"	c
Path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/symbol.rs	/^impl<'a> PartialEq<Symbol> for &'a Path {$/;"	c
PathBuf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for PathBuf {$/;"	c
PathBuf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for PathBuf {$/;"	c
PathBufVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Visitor<'de> for PathBufVisitor {$/;"	c
PathBufVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct PathBufVisitor;$/;"	s
PathVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'a> Visitor<'a> for PathVisitor {$/;"	c
PathVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct PathVisitor;$/;"	s
PhantomData	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for PhantomData<T> {$/;"	c
PhantomData	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^impl<'de, T> DeserializeSeed<'de> for PhantomData<T>$/;"	c
PhantomData	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for PhantomData<T> {$/;"	c
PhantomDataVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T: ?Sized> Visitor<'de> for PhantomDataVisitor<T> {$/;"	c
PhantomDataVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct PhantomDataVisitor<T: ?Sized> {$/;"	s
Pos	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    Pos(&'a str),$/;"	e	enum:ParseResult
PosBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^impl<'n, 'e> AnyArg<'n, 'e> for PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^impl<'n, 'e> DispOrder for PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^impl<'n, 'e> Display for PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^impl<'n, 'e> PartialEq for PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^impl<'n, 'e> PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^pub struct PosBuilder<'n, 'e>$/;"	s
Position	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^impl Position {$/;"	c
Position	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^pub struct Position {$/;"	s
PowerShell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^    PowerShell,$/;"	e	enum:Shell
PowerShellGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/powershell.rs	/^impl<'a, 'b> PowerShellGen<'a, 'b> {$/;"	c
PowerShellGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/powershell.rs	/^pub struct PowerShellGen<'a, 'b>$/;"	s
PriEnum	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^impl fmt::Display for PriEnum {$/;"	c
PriEnum	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^pub enum PriEnum {$/;"	g
PropagateGlobalValuesDown	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    PropagateGlobalValuesDown,$/;"	e	enum:AppSettings
Propagated	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    Propagated,$/;"	e	enum:AppSettings
Properties	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Properties {$/;"	s	function:tests::flatten
QuoteStyle	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^impl Default for QuoteStyle {$/;"	c
QuoteStyle	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^impl QuoteStyle {$/;"	c
QuoteStyle	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub enum QuoteStyle {$/;"	g
Range	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for Range<Idx>$/;"	c
Range	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<Idx> Serialize for Range<Idx>$/;"	c
RangeInclusive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for RangeInclusive<Idx>$/;"	c
RangeInclusive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<Idx> Serialize for RangeInclusive<Idx>$/;"	c
RangeVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    impl<'de, Idx> Visitor<'de> for RangeVisitor<Idx>$/;"	c	module:range
RangeVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    pub struct RangeVisitor<Idx> {$/;"	s	module:range
RcWeak	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for RcWeak<T>$/;"	c
RcWeak	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for RcWeak<T>$/;"	c
ReadError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    ReadError(io::Error),$/;"	e	enum:CopyUntilResult
Reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl Reader<Reader<File>> {$/;"	c
Reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<R: io::Read + io::Seek> Reader<R> {$/;"	c
Reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<R: io::Read> Reader<R> {$/;"	c
Reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct Reader<R> {$/;"	s
ReaderBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl Default for ReaderBuilder {$/;"	c
ReaderBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl ReaderBuilder {$/;"	c
ReaderBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct ReaderBuilder {$/;"	s
ReaderEmpty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    ReaderEmpty,$/;"	e	enum:CopyUntilResult
ReaderState	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl ReaderState {$/;"	c
ReaderState	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^struct ReaderState {$/;"	s
RefCell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for RefCell<T>$/;"	c
RenameAllRules	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^pub struct RenameAllRules {$/;"	s
RenameRule	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^impl FromStr for RenameRule {$/;"	c
RenameRule	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^impl RenameRule {$/;"	c
RenameRule	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^pub enum RenameRule {$/;"	g
RequireDelimiter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    RequireDelimiter,$/;"	e	enum:ArgSettings
RequireEquals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    RequireEquals,$/;"	e	enum:ArgSettings
Required	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    Required,$/;"	e	enum:ArgSettings
RequiredUnlessAll	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    RequiredUnlessAll,$/;"	e	enum:ArgSettings
Result	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^pub type Result<T> = StdResult<T, Error>;$/;"	t
Result	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	t
Result	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T, E> Deserialize<'de> for Result<T, E>$/;"	c
Result	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T, E> Serialize for Result<T, E>$/;"	c
ResultVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        impl<'de, T, E> Visitor<'de> for ResultVisitor<T, E>$/;"	c	function:deserialize
ResultVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        struct ResultVisitor<T, E>(PhantomData<Result<T, E>>);$/;"	s	function:deserialize
Reverse	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for Reverse<T>$/;"	c
Row	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Row {$/;"	s	function:tests::enum_label_simple_tagged
Row	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Row {$/;"	s	function:tests::enum_untagged
Row	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Row {$/;"	s	function:tests::flatten
Row	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Row {$/;"	s	function:tests::partially_invalid_utf8
Row	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^        struct Row {$/;"	s	function:tests::serialize_no_headers
Row	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^        struct Row {$/;"	s	function:tests::serialize_with_headers
RwLock	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for RwLock<T>$/;"	c
ScreamingKebabCase	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    ScreamingKebabCase,$/;"	e	enum:RenameRule
ScreamingSnakeCase	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    ScreamingSnakeCase,$/;"	e	enum:RenameRule
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeMap for &'a mut SeHeader<'w, W> {$/;"	c
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeSeq for &'a mut SeHeader<'w, W> {$/;"	c
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeStruct for &'a mut SeHeader<'w, W> {$/;"	c
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeStructVariant for &'a mut SeHeader<'w, W> {$/;"	c
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeTuple for &'a mut SeHeader<'w, W> {$/;"	c
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeTupleStruct for &'a mut SeHeader<'w, W> {$/;"	c
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeTupleVariant for &'a mut SeHeader<'w, W> {$/;"	c
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> Serializer for &'a mut SeHeader<'w, W> {$/;"	c
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'w, W: io::Write> SeHeader<'w, W> {$/;"	c
SeHeader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^struct SeHeader<'w, W: 'w + io::Write> {$/;"	s
SeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeMap for &'a mut SeRecord<'w, W> {$/;"	c
SeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeSeq for &'a mut SeRecord<'w, W> {$/;"	c
SeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeStruct for &'a mut SeRecord<'w, W> {$/;"	c
SeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeStructVariant for &'a mut SeRecord<'w, W> {$/;"	c
SeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeTuple for &'a mut SeRecord<'w, W> {$/;"	c
SeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeTupleStruct for &'a mut SeRecord<'w, W> {$/;"	c
SeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> SerializeTupleVariant for &'a mut SeRecord<'w, W> {$/;"	c
SeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^impl<'a, 'w, W: io::Write> Serializer for &'a mut SeRecord<'w, W> {$/;"	c
SeRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^struct SeRecord<'w, W: 'w + io::Write> {$/;"	s
Second	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        type Second = B;$/;"	t	implementation:private::B
Second	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        type Second;$/;"	t	interface:private::Pair
Second	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub type Second<T> = <T as Pair>::Second;$/;"	t	module:private
Secs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            Secs,$/;"	e	enum:Duration::deserialize::Field
Secs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            Secs,$/;"	e	enum:SystemTime::deserialize::Field
SeedStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedStructVariant<V>$/;"	c	module:private
SeedStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    struct SeedStructVariant<V> {$/;"	s	module:private
SeedTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedTupleVariant<V>$/;"	c	module:private
SeedTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    struct SeedTupleVariant<V> {$/;"	s	module:private
Seek	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    Seek,$/;"	e	enum:ErrorKind
Seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Seq,$/;"	e	enum:Unexpected
Seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Seq(Vec<Content<'de>>),$/;"	e	enum:content::Content
Seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        Seq(Vec<Content>),$/;"	e	enum:content::Content
SeqAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait SeqAccess<'de> {$/;"	i
SeqAccessDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for SeqAccessDeserializer<A>$/;"	c
SeqAccessDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<A> SeqAccessDeserializer<A> {$/;"	c
SeqAccessDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct SeqAccessDeserializer<A> {$/;"	s
SeqDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, I, T, E> de::Deserializer<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, I, T, E> de::SeqAccess<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<I, E> SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct SeqDeserializer<I, E> {$/;"	s
SeqDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> de::SeqAccess<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct SeqDeserializer<'de, E>$/;"	s	module:content
SeqRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'a, 'de, E> SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a, E> de::SeqAccess<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct SeqRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
Sequence	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    Sequence,$/;"	e	enum:Unsupported
SerAndDe	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^type SerAndDe<T> = (Option<T>, Option<T>);$/;"	t
Serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    Serialize(String),$/;"	e	enum:ErrorKind
Serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for ! {$/;"	c
Serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for () {$/;"	c
Serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^pub trait Serialize {$/;"	i
Serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^    Serialize,$/;"	e	enum:Derive
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeMap = Self;$/;"	t	implementation:SeHeader
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeMap = Self;$/;"	t	implementation:SeRecord
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type SerializeMap = SerializeMap<E>;$/;"	t	module:content
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<E> ser::SerializeMap for SerializeMap<E>$/;"	c	module:content
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct SerializeMap<E> {$/;"	s	module:content
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeMap = FlatMapSerializeMap<'a, M>;$/;"	t
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeMap = S::SerializeMap;$/;"	t
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    type SerializeMap = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^pub trait SerializeMap {$/;"	i
SerializeMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    SerializeMap,$/;"	e	enum:StructTrait
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeSeq = Self;$/;"	t	implementation:SeHeader
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeSeq = Self;$/;"	t	implementation:SeRecord
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type SerializeSeq = SerializeSeq<E>;$/;"	t	module:content
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<E> ser::SerializeSeq for SerializeSeq<E>$/;"	c	module:content
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct SerializeSeq<E> {$/;"	s	module:content
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeSeq = Impossible<S::Ok, S::Error>;$/;"	t
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeSeq = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    type SerializeSeq = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeSeq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^pub trait SerializeSeq {$/;"	i
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeStruct = Self;$/;"	t	implementation:SeHeader
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeStruct = Self;$/;"	t	implementation:SeRecord
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type SerializeStruct = SerializeStruct<E>;$/;"	t	module:content
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<E> ser::SerializeStruct for SerializeStruct<E>$/;"	c	module:content
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct SerializeStruct<E> {$/;"	s	module:content
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeStruct = FlatMapSerializeStruct<'a, M>;$/;"	t
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeStruct = S::SerializeStruct;$/;"	t
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    type SerializeStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^pub trait SerializeStruct {$/;"	i
SerializeStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    SerializeStruct,$/;"	e	enum:StructTrait
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeStructVariant = Self;$/;"	t	implementation:SeHeader
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeStructVariant = Self;$/;"	t	implementation:SeRecord
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type SerializeStructVariant = SerializeStructVariant<E>;$/;"	t	module:content
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<E> ser::SerializeStructVariant for SerializeStructVariant<E>$/;"	c	module:content
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct SerializeStructVariant<E> {$/;"	s	module:content
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeStructVariant = FlatMapSerializeStructVariantAsMapValue<'a, M>;$/;"	t
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeStructVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeStructVariant = SerializeStructVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    type SerializeStructVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^pub trait SerializeStructVariant {$/;"	i
SerializeStructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    SerializeStructVariant,$/;"	e	enum:StructTrait
SerializeStructVariantAsMapValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<M> SerializeStructVariantAsMapValue<M> {$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<M> ser::SerializeStructVariant for SerializeStructVariantAsMapValue<M>$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct SerializeStructVariantAsMapValue<M> {$/;"	s	module:content
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeTuple = Self;$/;"	t	implementation:SeHeader
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeTuple = Self;$/;"	t	implementation:SeRecord
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type SerializeTuple = SerializeTuple<E>;$/;"	t	module:content
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<E> ser::SerializeTuple for SerializeTuple<E>$/;"	c	module:content
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct SerializeTuple<E> {$/;"	s	module:content
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeTuple = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeTuple = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    type SerializeTuple = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^pub trait SerializeTuple {$/;"	i
SerializeTuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    SerializeTuple,$/;"	e	enum:TupleTrait
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeTupleStruct = Self;$/;"	t	implementation:SeHeader
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeTupleStruct = Self;$/;"	t	implementation:SeRecord
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type SerializeTupleStruct = SerializeTupleStruct<E>;$/;"	t	module:content
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<E> ser::SerializeTupleStruct for SerializeTupleStruct<E>$/;"	c	module:content
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct SerializeTupleStruct<E> {$/;"	s	module:content
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    type SerializeTupleStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^pub trait SerializeTupleStruct {$/;"	i
SerializeTupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    SerializeTupleStruct,$/;"	e	enum:TupleTrait
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeTupleVariant = Self;$/;"	t	implementation:SeHeader
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeTupleVariant = Self;$/;"	t	implementation:SeRecord
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        type SerializeTupleVariant = SerializeTupleVariant<E>;$/;"	t	module:content
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<E> ser::SerializeTupleVariant for SerializeTupleVariant<E>$/;"	c	module:content
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct SerializeTupleVariant<E> {$/;"	s	module:content
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    type SerializeTupleVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^pub trait SerializeTupleVariant {$/;"	i
SerializeTupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    SerializeTupleVariant,$/;"	e	enum:TupleTrait
SerializeTupleVariantAsMapValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<M> SerializeTupleVariantAsMapValue<M> {$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    impl<M> ser::SerializeTupleVariant for SerializeTupleVariantAsMapValue<M>$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    pub struct SerializeTupleVariantAsMapValue<M> {$/;"	s	module:content
Serializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^pub trait Serializer: Sized {$/;"	i
Shell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^impl FromStr for Shell {$/;"	c
Shell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^impl Shell {$/;"	c
Shell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^impl fmt::Display for Shell {$/;"	c
Shell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^pub enum Shell {$/;"	g
Short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    Short,$/;"	e	enum:UsageToken
Signed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Signed(i64),$/;"	e	enum:Unexpected
SnakeCase	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    SnakeCase,$/;"	e	enum:RenameRule
SocketAddr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::SocketAddr {$/;"	c
SocketAddr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for net::SocketAddr {$/;"	c
SocketAddrV4	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV4 {$/;"	c
SocketAddrV6	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV6 {$/;"	c
SocketAddrVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            impl<'de> Visitor<'de> for SocketAddrVisitor {$/;"	c	method:SocketAddr::deserialize
SocketAddrVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            struct SocketAddrVisitor;$/;"	s	method:SocketAddr::deserialize
Some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Some(Box<Content<'de>>),$/;"	e	enum:content::Content
Some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        Some(Box<Content>),$/;"	e	enum:content::Content
Start	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        Start,$/;"	e	enum:range::Field
Static	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    Static,$/;"	e	enum:BorrowedLifetimes
Stmts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^impl ToTokens for Stmts {$/;"	c
Stmts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^pub struct Stmts(pub Fragment);$/;"	s
Str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Str(&'a str),$/;"	e	enum:Unexpected
Str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Str(&'de str),$/;"	e	enum:content::Content
StrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'de, 'a, E> Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'a> Visitor<'a> for StrVisitor {$/;"	c
StrVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct StrVisitor;$/;"	s
StrictUtf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    StrictUtf8,$/;"	e	enum:AppSettings
String	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            String(String),$/;"	e	enum:tests::enum_untagged::Boolish
String	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for String {$/;"	c
String	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for String$/;"	c
String	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    String,$/;"	e	enum:Unsupported
String	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for String {$/;"	c
StringDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<E> Clone for StringDeserializer<E> {$/;"	c
StringDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct StringDeserializer<E> {$/;"	s
StringInPlaceVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'a, 'de> Visitor<'de> for StringInPlaceVisitor<'a> {$/;"	c
StringInPlaceVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct StringInPlaceVisitor<'a>(&'a mut String);$/;"	s
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl Default for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl PartialEq for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl fmt::Debug for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl ops::Index<usize> for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<'a, T: AsRef<[u8]>> PartialEq<Vec<T>> for &'a StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<'a, T: AsRef<[u8]>> PartialEq<[T]> for &'a StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<'a, T: AsRef<str>> From<&'a [T]> for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<'a> IntoIterator for &'a StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<T: AsRef<[u8]>> PartialEq<Vec<T>> for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<T: AsRef<[u8]>> PartialEq<[T]> for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<T: AsRef<str>> Extend<T> for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<T: AsRef<str>> From<Vec<T>> for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<T: AsRef<str>> FromIterator<T> for StringRecord {$/;"	c
StringRecord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^pub struct StringRecord(ByteRecord);$/;"	s
StringRecordIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<'r> DoubleEndedIterator for StringRecordIter<'r> {$/;"	c
StringRecordIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^impl<'r> Iterator for StringRecordIter<'r> {$/;"	c
StringRecordIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^pub struct StringRecordIter<'r>(ByteRecordIter<'r>);$/;"	s
StringRecordsIntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<R: io::Read> Iterator for StringRecordsIntoIter<R> {$/;"	c
StringRecordsIntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<R: io::Read> StringRecordsIntoIter<R> {$/;"	c
StringRecordsIntoIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct StringRecordsIntoIter<R> {$/;"	s
StringRecordsIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<'r, R: io::Read> Iterator for StringRecordsIter<'r, R> {$/;"	c
StringRecordsIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^impl<'r, R: io::Read> StringRecordsIter<'r, R> {$/;"	c
StringRecordsIter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct StringRecordsIter<'r, R: 'r> {$/;"	s
StringVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Visitor<'de> for StringVisitor {$/;"	c
StringVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct StringVisitor;$/;"	s
Struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        Struct(&'static str, Vec<(&'static str, Content)>),$/;"	e	enum:content::Content
Struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    Struct(Style, Vec<Field<'a>>),$/;"	e	enum:Data
Struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    Struct,$/;"	e	enum:Style
StructTrait	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^enum StructTrait {$/;"	g
StructTrait	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^impl StructTrait {$/;"	c
StructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    StructVariant,$/;"	e	enum:Unexpected
StructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        StructVariant($/;"	e	enum:content::Content
StructVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^enum StructVariant<'a> {$/;"	g
Style	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^pub enum Style {$/;"	g
SubCommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/subcommand.rs	/^impl<'a> SubCommand<'a> {$/;"	c
SubCommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/subcommand.rs	/^pub struct SubCommand<'a> {$/;"	s
SubcommandRequired	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    SubcommandRequired,$/;"	e	enum:AppSettings
SubcommandRequiredElseHelp	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    SubcommandRequiredElseHelp,$/;"	e	enum:AppSettings
SubcommandsNegateReqs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    SubcommandsNegateReqs,$/;"	e	enum:AppSettings
Switched	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^impl<'e> Clone for Switched<'e> {$/;"	c
Switched	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^impl<'e> Default for Switched<'e> {$/;"	c
Switched	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^impl<'n, 'e, 'z> From<&'z Arg<'n, 'e>> for Switched<'e> {$/;"	c
Switched	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^pub struct Switched<'b> {$/;"	s
Symbol	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/symbol.rs	/^impl Display for Symbol {$/;"	c
Symbol	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/symbol.rs	/^pub struct Symbol(&'static str);$/;"	s
SystemTime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for SystemTime {$/;"	c
SystemTime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for SystemTime {$/;"	c
T	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^impl<'b, 'c, T> ArgWithDisplay<'b, 'c> for T where T: AnyArg<'b, 'c> + Display {}$/;"	c
T	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^impl<'b, 'c, T> ArgWithOrder<'b, 'c> for T$/;"	c
T	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^impl<'n, 'e, 'z, T: ?Sized> AnyArg<'n, 'e> for &'z T$/;"	c
T	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for [T; 0] {$/;"	c
T	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^impl<'de, T> Expected for T$/;"	c
T	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^impl<T> DeserializeOwned for T where T: for<'de> Deserialize<'de> {}$/;"	c
T	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for [T; 0] {$/;"	c
T	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for [T]$/;"	c
Tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagContentOtherField
Tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContent
Tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContentField
TagContentOtherField	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub enum TagContentOtherField {$/;"	g	module:content
TagContentOtherFieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct TagContentOtherFieldVisitor {$/;"	s	module:content
TagOrContent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub enum TagOrContent<'de> {$/;"	g	module:content
TagOrContentField	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub enum TagOrContentField {$/;"	g	module:content
TagOrContentFieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct TagOrContentFieldVisitor {$/;"	s	module:content
TagOrContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct TagOrContentVisitor<'de> {$/;"	s	module:content
TagType	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^pub enum TagType {$/;"	g
TaggedContent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct TaggedContent<'de, T> {$/;"	s	module:content
TaggedContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, T> DeserializeSeed<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, T> TaggedContentVisitor<'de, T> {$/;"	c	module:content
TaggedContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, T> Visitor<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct TaggedContentVisitor<'de, T> {$/;"	s	module:content
TaggedSerializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl<S> Serializer for TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl<S> TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^struct TaggedSerializer<S> {$/;"	s
TakesValue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    TakesValue,$/;"	e	enum:ArgSettings
Task	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^impl Serialize for Task {$/;"	c
Task	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^impl Task {$/;"	c
Task	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^pub struct Task {$/;"	s
TaskList	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^impl TaskList {$/;"	c
TaskList	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^pub struct TaskList {$/;"	s
Terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^impl Default for Terminator {$/;"	c
Terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^impl Terminator {$/;"	c
Terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub enum Terminator {$/;"	g
TooFewValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    TooFewValues,$/;"	e	enum:ErrorKind
TooManyValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    TooManyValues,$/;"	e	enum:ErrorKind
TrailingValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    TrailingValues,$/;"	e	enum:AppSettings
TrailingVarArg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    TrailingVarArg,$/;"	e	enum:AppSettings
Trim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^impl Default for Trim {$/;"	c
Trim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^impl Trim {$/;"	c
Trim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub enum Trim {$/;"	g
Tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        Tuple(Vec<Content>),$/;"	e	enum:content::Content
Tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    Tuple,$/;"	e	enum:Unsupported
Tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    Tuple,$/;"	e	enum:Style
TupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        TupleStruct(&'static str, Vec<Content>),$/;"	e	enum:content::Content
TupleStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    TupleStruct,$/;"	e	enum:Unsupported
TupleTrait	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^enum TupleTrait {$/;"	g
TupleTrait	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^impl TupleTrait {$/;"	c
TupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    TupleVariant,$/;"	e	enum:Unexpected
TupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        TupleVariant(&'static str, u32, &'static str, Vec<Content>),$/;"	e	enum:content::Content
TupleVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^enum TupleVariant {$/;"	g
U16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        U16(u16),$/;"	e	enum:content::Content
U16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        U16(u16),$/;"	e	enum:content::Content
U32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct U32Deserializer<E> {$/;"	s
U64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        U64(u64),$/;"	e	enum:content::Content
U64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        U64(u64),$/;"	e	enum:content::Content
U8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        U8(u8),$/;"	e	enum:content::Content
U8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        U8(u8),$/;"	e	enum:content::Content
UPPERCASE	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    UPPERCASE,$/;"	e	enum:RenameRule
Unbounded	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            Unbounded,$/;"	e	enum:deserialize::Field
UnequalLengths	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    UnequalLengths {$/;"	e	enum:ErrorKind
Unexpected	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^impl<'a> fmt::Display for Unexpected<'a> {$/;"	c
Unexpected	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub enum Unexpected<'a> {$/;"	g
UnexpectedEndOfRow	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    UnexpectedEndOfRow,$/;"	e	enum:DeserializeErrorKind
UnexpectedMultipleUsage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    UnexpectedMultipleUsage,$/;"	e	enum:ErrorKind
UnifiedHelpMessage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    UnifiedHelpMessage,$/;"	e	enum:AppSettings
Unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Unit,$/;"	e	enum:Unexpected
Unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        Unit,$/;"	e	enum:content::Content
Unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        Unit,$/;"	e	enum:content::Content
Unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    Unit,$/;"	e	enum:Unsupported
Unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    Unit,$/;"	e	enum:Style
UnitDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for UnitDeserializer<E>$/;"	c
UnitDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^pub struct UnitDeserializer<E> {$/;"	s
UnitOnly	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    impl<'de, E> de::VariantAccess<'de> for UnitOnly<E>$/;"	c	module:private
UnitOnly	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub struct UnitOnly<E> {$/;"	s	module:private
UnitStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        UnitStruct(&'static str),$/;"	e	enum:content::Content
UnitStruct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    UnitStruct,$/;"	e	enum:Unsupported
UnitVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    UnitVariant,$/;"	e	enum:Unexpected
UnitVariant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        UnitVariant(&'static str, u32, &'static str),$/;"	e	enum:content::Content
UnitVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Visitor<'de> for UnitVisitor {$/;"	c
UnitVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^struct UnitVisitor;$/;"	s
Unknown	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    Unknown,$/;"	e	enum:UsageToken
UnknownArgument	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    UnknownArgument,$/;"	e	enum:ErrorKind
UnrecognizedSubcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    UnrecognizedSubcommand,$/;"	e	enum:ErrorKind
Unsigned	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    Unsigned(u64),$/;"	e	enum:Unexpected
Unsupported	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    Unsupported(String),$/;"	e	enum:DeserializeErrorKind
Unsupported	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^enum Unsupported {$/;"	g
Unsupported	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^impl Display for Unsupported {$/;"	c
Untagged	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^enum Untagged {$/;"	g
Untagged	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    Untagged,$/;"	e	enum:StructVariant
Untagged	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    Untagged,$/;"	e	enum:TupleVariant
UntaggedUnitVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'a> UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct UntaggedUnitVisitor<'a> {$/;"	s	module:content
UsageParser	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^impl<'a> UsageParser<'a> {$/;"	c
UsageParser	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^pub struct UsageParser<'a> {$/;"	s
UsageToken	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^enum UsageToken {$/;"	g
UseValueDelimiter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    UseValueDelimiter,$/;"	e	enum:ArgSettings
Utf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    Utf8 {$/;"	e	enum:ErrorKind
Utf8Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl StdError for Utf8Error {}$/;"	c
Utf8Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl Utf8Error {$/;"	c
Utf8Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^impl fmt::Display for Utf8Error {$/;"	c
Utf8Error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub struct Utf8Error {$/;"	s
ValName	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    ValName,$/;"	e	enum:UsageToken
ValidArgFound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    ValidArgFound,$/;"	e	enum:AppSettings
ValidNegNumFound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    ValidNegNumFound,$/;"	e	enum:AppSettings
Validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^impl<'a, 'b, 'z> Validator<'a, 'b, 'z> {$/;"	c
Validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^pub struct Validator<'a, 'b, 'z>(&'z mut Parser<'a, 'b>)$/;"	s
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    type Value = IgnoredAny;$/;"	t	implementation:IgnoredAny
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:deserialize::Field::deserialize::FieldVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                type Value = Field;$/;"	t	implementation:range::Field::deserialize::FieldVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                type Value = net::IpAddr;$/;"	t	implementation:IpAddr::deserialize::IpAddrVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                type Value = net::SocketAddr;$/;"	t	implementation:SocketAddr::deserialize::SocketAddrVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            type Value = ();$/;"	t	function:deserialize_in_place
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            type Value = Bound<T>;$/;"	t	function:deserialize
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:Duration::deserialize::DurationVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:SystemTime::deserialize::DurationVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            type Value = Result<T, E>;$/;"	t	function:deserialize
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            type Value = Vec<T>;$/;"	t	function:deserialize
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        type Value = (Idx, Idx);$/;"	t	module:range
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = &'a Path;$/;"	t	implementation:PathVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = &'a [u8];$/;"	t	implementation:BytesVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = &'a str;$/;"	t	implementation:StrVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:StringInPlaceVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:UnitVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = CString;$/;"	t	implementation:CStringVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = Option<T>;$/;"	t
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = OsString;$/;"	t	implementation:OsStringVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = PathBuf;$/;"	t	implementation:PathBufVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = PhantomData<T>;$/;"	t	implementation:PhantomDataVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = String;$/;"	t	implementation:StringVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = [T; 0];$/;"	t	implementation:ArrayVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = bool;$/;"	t	implementation:BoolVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    type Value = char;$/;"	t	implementation:CharVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Value = T;$/;"	t
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Value;$/;"	t	interface:DeserializeSeed
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Value;$/;"	t	interface:Visitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        type Value = V::Value;$/;"	t	module:private
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::InternallyTaggedUnitVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::UntaggedUnitVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Value = Content<'de>;$/;"	t	implementation:content::ContentVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Value = Cow<'a, [u8]>;$/;"	t	implementation:borrow_cow_bytes::CowBytesVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Value = Cow<'a, str>;$/;"	t	implementation:borrow_cow_str::CowStrVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Value = TagContentOtherField;$/;"	t	implementation:content::TagContentOtherFieldVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Value = TagOrContent<'de>;$/;"	t	implementation:content::TagOrContentVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Value = TagOrContentField;$/;"	t	implementation:content::TagOrContentFieldVisitor
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Value = TaggedContent<'de, T>;$/;"	t	module:content
Value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    type Value = ();$/;"	t
ValueDelimiterNotSet	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    ValueDelimiterNotSet,$/;"	e	enum:ArgSettings
ValueValidation	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    ValueValidation,$/;"	e	enum:ErrorKind
Valued	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^impl<'n, 'e, 'z> From<&'z Arg<'n, 'e>> for Valued<'n, 'e> {$/;"	c
Valued	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^impl<'n, 'e> Default for Valued<'n, 'e> {$/;"	c
Valued	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^impl<'n, 'e> Valued<'n, 'e> {$/;"	c
Valued	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^pub struct Valued<'a, 'b>$/;"	s
Values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> Default for Values<'a> {$/;"	c
Values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> DoubleEndedIterator for Values<'a> {$/;"	c
Values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> ExactSizeIterator for Values<'a> {}$/;"	c
Values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^impl<'a> Iterator for Values<'a> {$/;"	c
Values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^pub struct Values<'a> {$/;"	s
Values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^    pub type Values<'a, V> = btree_map::Values<'a, usize, V>;$/;"	t	module:vec_map
ValuesDone	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    ValuesDone,$/;"	e	enum:ParseResult
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    type Variant = Self;$/;"	t	implementation:DeRecordWrap
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    type Variant: VariantAccess<'de, Error = Self::Error>;$/;"	t	interface:EnumAccess
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Variant = private::MapAsEnum<A>;$/;"	t
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    type Variant = private::UnitOnly<E>;$/;"	t
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Variant = VariantDeserializer<'de, Self::Error>;$/;"	t	module:content
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type Variant = VariantRefDeserializer<'a, 'de, Self::Error>;$/;"	t	module:content
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^pub struct Variant<'a> {$/;"	s
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    Variant,$/;"	e	enum:Identifier
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^impl Variant {$/;"	c
Variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^pub struct Variant {$/;"	s
VariantAccess	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait VariantAccess<'de>: Sized {$/;"	i
VariantDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, E> de::VariantAccess<'de> for VariantDeserializer<'de, E>$/;"	c	module:content
VariantDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub struct VariantDeserializer<'de, E>$/;"	s	module:content
VariantRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    impl<'de, 'a, E> de::VariantAccess<'de> for VariantRefDeserializer<'a, 'de, E>$/;"	c	module:content
VariantRefDeserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    struct VariantRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
Vec	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Vec<T>$/;"	c
Vec	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for Vec<T>$/;"	c
VecAttr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^impl<'c, T> VecAttr<'c, T> {$/;"	c
VecAttr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^struct VecAttr<'c, T> {$/;"	s
VecInPlaceVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        impl<'a, 'de, T> Visitor<'de> for VecInPlaceVisitor<'a, T>$/;"	c	function:deserialize_in_place
VecInPlaceVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        struct VecInPlaceVisitor<'a, T: 'a>(&'a mut Vec<T>);$/;"	s	function:deserialize_in_place
VecMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^    impl<V> VecMap<V> {$/;"	c	module:vec_map
VecMap	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^    pub struct VecMap<V> {$/;"	s	module:vec_map
VecVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for VecVisitor<T>$/;"	c	function:deserialize
VecVisitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        struct VecVisitor<T> {$/;"	s	function:deserialize
VersionDisplayed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    VersionDisplayed,$/;"	e	enum:ErrorKind
VersionlessSubcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    VersionlessSubcommands,$/;"	e	enum:AppSettings
Visitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub trait Visitor<'de>: Sized {$/;"	i
Void	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^enum Void {}$/;"	g
WaitOnError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    WaitOnError,$/;"	e	enum:AppSettings
Warning	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    Warning(T),$/;"	e	enum:Format
Wat	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        enum Wat {$/;"	g	function:tests::enum_newtypes
Wat	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        enum Wat {$/;"	g	function:tests::enum_units
Wrapping	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Wrapping<T>$/;"	c
Wrapping	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl<T> Serialize for Wrapping<T>$/;"	c
Write	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    Write,$/;"	e	enum:HeaderState
Write	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    Write,$/;"	e	enum:HeaderState
WriteError	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    WriteError(io::Error),$/;"	e	enum:CopyUntilResult
Writer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^impl Writer<File> {$/;"	c
Writer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^impl<W: io::Write> Drop for Writer<W> {$/;"	c
Writer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^impl<W: io::Write> Writer<W> {$/;"	c
Writer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^pub struct Writer<W: io::Write> {$/;"	s
WriterBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^impl Default for WriterBuilder {$/;"	c
WriterBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^impl WriterBuilder {$/;"	c
WriterBuilder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^pub struct WriterBuilder {$/;"	s
WriterState	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^struct WriterState {$/;"	s
WrongNumberOfValues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    WrongNumberOfValues,$/;"	e	enum:ErrorKind
X	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            X { a: bool, b: i32, c: String },$/;"	e	enum:tests::enum_struct_variant::Foo
X	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            X(bool, i32, String),$/;"	e	enum:tests::tuple_variant::Foo
Yes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    Yes,$/;"	e	enum:Untagged
Zsh	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^    Zsh,$/;"	e	enum:Shell
ZshGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/zsh.rs	/^impl<'a, 'b> ZshGen<'a, 'b> {$/;"	c
ZshGen	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/zsh.rs	/^pub struct ZshGen<'a, 'b>$/;"	s
_StrExt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/strext.rs	/^pub trait _StrExt {$/;"	i
__Nonexhaustive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    __Nonexhaustive,$/;"	e	enum:ErrorKind
__Nonexhaustive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    __Nonexhaustive,$/;"	e	enum:QuoteStyle
__Nonexhaustive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    __Nonexhaustive,$/;"	e	enum:Terminator
__Nonexhaustive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    __Nonexhaustive,$/;"	e	enum:Trim
__private_deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/macros.rs	/^macro_rules! __private_deserialize {$/;"	M
__private_serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/macros.rs	/^macro_rules! __private_serialize {$/;"	M
__private_visit_untagged_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn __private_visit_untagged_option<D>(self, deserializer: D) -> Result<Self::Value, ()>$/;"	f
__private_visit_untagged_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn __private_visit_untagged_option<D>(self, _: D) -> Result<Self::Value, ()>$/;"	P	interface:Visitor
__serialize_unimplemented	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/macros.rs	/^macro_rules! __serialize_unimplemented {$/;"	M
__serialize_unimplemented_helper	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_helper {$/;"	M
__serialize_unimplemented_method	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_method {$/;"	M
_clap_count_exprs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! _clap_count_exprs {$/;"	M
_find_by_long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! _find_by_long {$/;"	M
_find_by_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! _find_by_short {$/;"	M
_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn _help(&self, mut use_long: bool) -> Error {$/;"	f
_is_char_boundary	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/strext.rs	/^    fn _is_char_boundary(&self, index: usize) -> bool {$/;"	P	implementation:str
_is_char_boundary	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/strext.rs	/^    fn _is_char_boundary(&self, index: usize) -> bool;$/;"	P	interface:_StrExt
_marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatInternallyTaggedAccess
_marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatMapAccess
_marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatStructAccess
_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! _names {$/;"	M
_priv	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    _priv: PhantomData<D>,$/;"	m	struct:DeserializeRecordsIntoIter
_priv	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    _priv: PhantomData<D>,$/;"	m	struct:DeserializeRecordsIter
_shorts_longs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! _shorts_longs {$/;"	M
_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn _version(&self, use_long: bool) -> Error {$/;"	f
_write_parser_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    pub fn _write_parser_help($/;"	P	implementation:Help
a	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            a: &'a str,$/;"	m	struct:tests::borrowed::Foo
a	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            a: Option<i32>,$/;"	m	struct:tests::option_empty_field::Foo
a	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            a: Option<i32>,$/;"	m	struct:tests::option_invalid_field::Foo
a	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^impl<'a> Display for Expected + 'a {$/;"	c
about	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub about: Option<&'b str>,$/;"	m	struct:AppMeta
about	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn about<S: Into<&'b str>>(mut self, about: S) -> Self {$/;"	P	implementation:App
add	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn add(&mut self, pos: usize) {$/;"	P	implementation:Bounds
add_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn add_arg(&mut self, a: Arg<'a, 'b>) {$/;"	f
add_arg_groups	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn add_arg_groups(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_arg_ref	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn add_arg_ref(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_conditional_reqs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn add_conditional_reqs(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_defaults	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn add_defaults(&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
add_env	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn add_env(&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
add_group	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn add_group(&mut self, group: ArgGroup<'a>) {$/;"	f
add_index_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn add_index_to(&mut self, arg: &'a str, idx: usize) {$/;"	P	implementation:ArgMatcher
add_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn add_record(&mut self, record: &ByteRecord) -> Result<()> {$/;"	P	implementation:ReaderState
add_reqs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn add_reqs(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_sc	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/zsh.rs	/^    fn add_sc(sc: &App, n: &str, ret: &mut Vec<String>) {$/;"	f	function:subcommands_of
add_single_val_to_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn add_single_val_to_arg<A>($/;"	f
add_subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn add_subcommand(&mut self, mut subcmd: App<'a, 'b>) {$/;"	f
add_val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^        macro_rules! add_val {$/;"	M	function:add_defaults
add_val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^        macro_rules! add_val {$/;"	M	function:add_env
add_val_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn add_val_to(&mut self, arg: &'a str, val: &OsStr) {$/;"	P	implementation:ArgMatcher
add_val_to_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn add_val_to_arg<A>($/;"	f
adjacent_fixed_arrays	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn adjacent_fixed_arrays() {$/;"	f	module:tests
after_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn after_help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
alias	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	P	implementation:App
alias	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	P	implementation:Arg
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub aliases: Option<Vec<(&'b str, bool)>>, \/\/ (name, visible)$/;"	m	struct:AppMeta
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	P	implementation:App
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn aliases(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:App
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>>;$/;"	P	interface:AnyArg
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn aliases(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:Arg
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	P	implementation:FlagBuilder
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	P	implementation:OptBuilder
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	P	implementation:PosBuilder
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^    pub aliases: Option<Vec<(&'b str, bool)>>, \/\/ (name, visible)$/;"	m	struct:Switched
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	P	implementation:Field
aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	P	implementation:Variant
all_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub fn all_fields(&'a self) -> Box<Iterator<Item = &'a Field<'a>> + 'a> {$/;"	P	implementation:Data
all_options_for_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^    fn all_options_for_path(&self, path: &str) -> String {$/;"	P	implementation:BashGen
all_subcommand_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^pub fn all_subcommand_names(p: &Parser) -> Vec<String> {$/;"	f
all_subcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^    fn all_subcommands(&self) -> String {$/;"	P	implementation:BashGen
all_subcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^pub fn all_subcommands(p: &Parser) -> Vec<(String, String)> {$/;"	f
all_type_params	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^        all_type_params: HashSet<syn::Ident>,$/;"	m	struct:with_bound::FindTyParams
allow_hyphen_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn allow_hyphen_values(self, a: bool) -> Self {$/;"	P	implementation:Arg
allow_transparent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn allow_transparent(field: &Field, derive: Derive) -> bool {$/;"	f
any_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^pub mod any_arg;$/;"	n
app	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod app;$/;"	n
app_debug_asserts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn app_debug_asserts(&self) -> bool {$/;"	f
app_from_crate	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! app_from_crate {$/;"	M
app_settings_fromstr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    fn app_settings_fromstr() {$/;"	f	module:test
apply_to_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    pub fn apply_to_field(&self, field: &str) -> String {$/;"	P	implementation:RenameRule
apply_to_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    pub fn apply_to_variant(&self, variant: &str) -> String {$/;"	P	implementation:RenameRule
arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn arg<A: Into<Arg<'a, 'b>>>(mut self, a: A) -> Self {$/;"	P	implementation:App
arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn arg(mut self, n: &'a str) -> Self {$/;"	P	implementation:ArgGroup
arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^mod arg;$/;"	n
arg_builder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^mod arg_builder;$/;"	n
arg_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! arg_enum {$/;"	M
arg_from_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn arg_from_usage(mut self, usage: &'a str) -> Self {$/;"	P	implementation:App
arg_matcher	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^mod arg_matcher;$/;"	n
arg_matches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^mod arg_matches;$/;"	n
arg_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn arg_names(&'a self) -> Vec<&'a str> {$/;"	P	implementation:ArgMatcher
arg_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! arg_names {$/;"	M
arg_names_in_group	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn arg_names_in_group(&self, group: &str) -> Vec<&'a str> {$/;"	f
arg_settings_fromstr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    fn arg_settings_fromstr() {$/;"	f	module:test
args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn args(mut self, args: &[Arg<'a, 'b>]) -> Self {$/;"	P	implementation:App
args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub args: HashMap<&'a str, MatchedArg>,$/;"	m	struct:ArgMatches
args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub args: Vec<&'a str>,$/;"	m	struct:ArgGroup
args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn args(mut self, ns: &[&'a str]) -> Self {$/;"	P	implementation:ArgGroup
args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod args;$/;"	n
args_from_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn args_from_usage(mut self, usage: &'a str) -> Self {$/;"	P	implementation:App
args_in_group	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn args_in_group(&self, group: &str) -> Vec<String> {$/;"	f
argument_conflict	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn argument_conflict<O, U>($/;"	P	implementation:Error
argument_not_found_auto	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn argument_not_found_auto<A>(arg: A) -> Self$/;"	P	implementation:Error
array_impls	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! array_impls {$/;"	M
array_impls	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^macro_rules! array_impls {$/;"	M
as_arg_trait	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^fn as_arg_trait<'a, 'b, T: ArgWithOrder<'a, 'b>>(x: &T) -> &ArgWithOrder<'a, 'b> {$/;"	f
as_base	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn as_base(&self) -> &ArgWithDisplay<'b, 'c> {$/;"	f
as_base	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn as_base(&self) -> &ArgWithDisplay<'b, 'c>;$/;"	P	interface:ArgWithOrder
as_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn as_byte_record(&self) -> &ByteRecord {$/;"	P	implementation:StringRecord
as_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:OsStr
as_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	P	interface:OsStrExt3
as_parts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub(crate) fn as_parts(&mut self) -> (&mut Vec<u8>, &mut Vec<usize>) {$/;"	P	implementation:ByteRecord
as_ref	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^    fn as_ref(&self) -> &TokenStream {$/;"	P	implementation:Fragment
as_slice	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	P	implementation:ByteRecord
as_slice	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn as_slice(&self) -> &str {$/;"	P	implementation:StringRecord
as_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/utf8.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Encode
as_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub fn as_str(&self) -> Option<&str> {$/;"	P	implementation:content::Content
ascii	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn ascii(&mut self) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
associated_type_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^        associated_type_usage: Vec<&'ast syn::TypePath>,$/;"	m	struct:with_bound::FindTyParams
ast	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^pub mod ast;$/;"	n
at_most_one	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn at_most_one(mut self) -> Result<Option<T>, ()> {$/;"	P	implementation:VecAttr
atomic_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! atomic_impl {$/;"	M
atomic_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^macro_rules! atomic_impl {$/;"	M
attr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^pub mod attr;$/;"	n
attrs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub attrs: attr::Container,$/;"	m	struct:Container
attrs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub attrs: attr::Field,$/;"	m	struct:Field
attrs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub attrs: attr::Variant,$/;"	m	struct:Variant
author	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub author: Option<&'b str>,$/;"	m	struct:AppMeta
author	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn author<S: Into<&'b str>>(mut self, author: S) -> Self {$/;"	P	implementation:App
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub b: Base<'a, 'b>,$/;"	m	struct:Arg
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    pub b: Base<'n, 'e>,$/;"	m	struct:FlagBuilder
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    pub b: Base<'n, 'e>,$/;"	m	struct:OptBuilder
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    pub b: Base<'n, 'e>,$/;"	m	struct:PosBuilder
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn b(s: &str) -> &[u8] {$/;"	f	module:tests
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            b: Option<i32>,$/;"	m	struct:tests::option_invalid_field::Foo
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            b: String,$/;"	m	struct:tests::option_empty_field::Foo
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            b: i32,$/;"	m	struct:tests::borrowed::Foo
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn b<'a, T: AsRef<[u8]> + ?Sized>(bytes: &'a T) -> &'a [u8] {$/;"	f	module:tests
b	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn b(s: &str) -> &[u8] {$/;"	f	module:tests
bad_hex_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn bad_hex_seq() {$/;"	f	module:tests
bad_type	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> S::Error {$/;"	f
bad_type	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn bad_type(what: Unsupported) -> M::Error {$/;"	f
bar	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            bar: f64,$/;"	m	struct:tests::serialize_no_headers::Row
bar	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            bar: f64,$/;"	m	struct:tests::serialize_with_headers::Row
base	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/mod.rs	/^mod base;$/;"	n
bash	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^mod bash;$/;"	n
baz	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            baz: bool,$/;"	m	struct:tests::serialize_no_headers::Row
baz	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            baz: bool,$/;"	m	struct:tests::serialize_with_headers::Row
before_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn before_help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
bin_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub bin_name: Option<String>,$/;"	m	struct:AppMeta
bin_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn bin_name<S: Into<String>>(mut self, name: S) -> Self {$/;"	P	implementation:App
bitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    fn bitor(self, rhs: Self) -> Self {$/;"	P	implementation:AppFlags
blacklist	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	P	implementation:App
blacklist	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	f
blacklist	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn blacklist(&self) -> Option<&[&'e str]>;$/;"	P	interface:AnyArg
blacklist	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub blacklist: Option<Vec<&'a str>>,$/;"	m	struct:Base
blacklist	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	P	implementation:FlagBuilder
blacklist	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	P	implementation:OptBuilder
blacklist	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	P	implementation:PosBuilder
bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn bool() {$/;"	f	module:tests
bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for bool {$/;"	c
borrow	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    borrow: Option<syn::Meta>,$/;"	m	struct:Variant
borrow_cow_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub fn borrow_cow_bytes<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrow_cow_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub fn borrow_cow_str<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrowable_lifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn borrowable_lifetimes($/;"	f
borrowed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn borrowed() {$/;"	f	module:tests
borrowed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    borrowed: BorrowedLifetimes,$/;"	m	struct:Parameters
borrowed_lifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn borrowed_lifetimes(cont: &Container) -> BorrowedLifetimes {$/;"	f
borrowed_lifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    borrowed_lifetimes: BTreeSet<syn::Lifetime>,$/;"	m	struct:Field
borrowed_lifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn borrowed_lifetimes(&self) -> &BTreeSet<syn::Lifetime> {$/;"	P	implementation:Field
borrowed_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn borrowed_map() {$/;"	f	module:tests
borrowed_map_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn borrowed_map_bytes() {$/;"	f	module:tests
bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^mod bound;$/;"	n
bounds	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    bounds: Bounds,$/;"	m	struct:ByteRecordInner
box_forwarded_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! box_forwarded_impl {$/;"	M
buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    buf: Buffer,$/;"	m	struct:Writer
buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    buf: Vec<u8>,$/;"	m	struct:Buffer
buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/utf8.rs	/^    buf: [u8; 4],$/;"	m	struct:Encode
buffer_capacity	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn buffer_capacity(&mut self, capacity: usize) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
buffer_capacity	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn buffer_capacity(&mut self, capacity: usize) -> &mut WriterBuilder {$/;"	P	implementation:WriterBuilder
build_bin_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn build_bin_names(&mut self) {$/;"	f
build_err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn build_err(&self, name: &str, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
build_generics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn build_generics(cont: &Container, borrowed: &BorrowedLifetimes) -> syn::Generics {$/;"	f
build_generics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn build_generics(cont: &Container) -> syn::Generics {$/;"	f
builder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    builder: Box<CoreReaderBuilder>,$/;"	m	struct:ReaderBuilder
builder	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    builder: CoreWriterBuilder,$/;"	m	struct:WriterBuilder
byte	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    byte: u64,$/;"	m	struct:Position
byte	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn byte(&self) -> u64 {$/;"	P	implementation:Position
byte_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn byte_headers(&mut self) -> Result<&ByteRecord> {$/;"	P	implementation:Reader
byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^mod byte_record;$/;"	n
byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    byte_record: ByteRecord,$/;"	m	struct:Headers
byte_records	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn byte_records(&mut self) -> ByteRecordsIter<R> {$/;"	P	implementation:Reader
bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn bytes() {$/;"	f	module:tests
bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn bytes() {$/;"	f	module:tests
c	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            c: &'c str,$/;"	m	struct:tests::borrowed::Foo
c	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            c: Option<i32>,$/;"	m	struct:tests::option_empty_field::Foo
c	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            c: Option<i32>,$/;"	m	struct:tests::option_invalid_field::Foo
cache	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    cache: Option<&'a str>,$/;"	m	struct:Parser
capacity	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    capacity: usize,$/;"	m	struct:ReaderBuilder
capacity	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    capacity: usize,$/;"	m	struct:WriterBuilder
case	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^mod case;$/;"	n
case_insensitive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn case_insensitive(self, ci: bool) -> Self {$/;"	P	implementation:Arg
cautious	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub fn cautious(hint: Option<usize>) -> usize {$/;"	f	module:size_hint
change_priority	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub fn change_priority(&mut self, new_priority: &str) -> Result<String, Box<dyn Error>> {$/;"	P	implementation:Task
char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn char() {$/;"	f	module:tests
char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de> Deserialize<'de> for char {$/;"	c
check	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^        macro_rules! check {$/;"	M	method:Validator::validate_required_unless
check	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^pub fn check(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ctxt.rs	/^    pub fn check(self) -> Result<(), Vec<syn::Error>> {$/;"	P	implementation:Ctxt
check	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^mod check;$/;"	n
check_adjacent_tag_conflict	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn check_adjacent_tag_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_field_count	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn check_field_count(&mut self) -> Result<()> {$/;"	P	implementation:Writer
check_flatten	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn check_flatten(cx: &Ctxt, cont: &Container) {$/;"	f
check_flatten_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn check_flatten_field(cx: &Ctxt, style: Style, field: &Field) {$/;"	f
check_for_help_and_version_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn check_for_help_and_version_char(&self, arg: char) -> ClapResult<()> {$/;"	f
check_for_help_and_version_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn check_for_help_and_version_str(&self, arg: &OsStr) -> ClapResult<()> {$/;"	f
check_from_and_try_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn check_from_and_try_from(cx: &Ctxt, cont: &mut Container) {$/;"	f
check_getter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn check_getter(cx: &Ctxt, cont: &Container) {$/;"	f
check_identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn check_identifier(cx: &Ctxt, cont: &Container) {$/;"	f
check_internal_tag_field_name_conflict	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn check_internal_tag_field_name_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_transparent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn check_transparent(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check_variant_skip_attrs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn check_variant_skip_attrs(cx: &Ctxt, cont: &Container) {$/;"	f
cizer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    cizer: Colorizer,$/;"	m	struct:Help
clap_app	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! clap_app {$/;"	M
clear	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:ByteRecord
clear	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:StringRecord
clear	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn clear(&mut self) {$/;"	P	implementation:Buffer
cli_complete_task_alias_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_complete_task_alias_test() {$/;"	f	module:tests
cli_complete_task_failing_already_complete_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_complete_task_failing_already_complete_test() {$/;"	f	module:tests
cli_complete_task_failing_invalid_index_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_complete_task_failing_invalid_index_test() {$/;"	f	module:tests
cli_complete_task_successful_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_complete_task_successful_test() {$/;"	f	module:tests
cli_create_task_alias_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_create_task_alias_test() {$/;"	f	module:tests
cli_create_task_successful_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_create_task_successful_test() {$/;"	f	module:tests
cli_creation_about_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_creation_about_test() {$/;"	f	module:tests
cli_creation_author_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_creation_author_test() {$/;"	f	module:tests
cli_creation_version_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_creation_version_test() {$/;"	f	module:tests
cli_list_task_alias_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_list_task_alias_test() {$/;"	f	module:tests
cli_list_task_failure_empty_list_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_list_task_failure_empty_list_test() {$/;"	f	module:tests
cli_list_task_successful_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_list_task_successful_test() {$/;"	f	module:tests
cli_remove_task_alias_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_remove_task_alias_test() {$/;"	f	module:tests
cli_remove_task_failing_invalid_index_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_remove_task_failing_invalid_index_test() {$/;"	f	module:tests
cli_remove_task_successful_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_remove_task_successful_test() {$/;"	f	module:tests
cli_rename_task_alias_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_rename_task_alias_test() {$/;"	f	module:tests
cli_rename_task_failing_invalid_index_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_rename_task_failing_invalid_index_test() {$/;"	f	module:tests
cli_rename_task_successful_test	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^    fn cli_rename_task_successful_test() {$/;"	f	module:tests
clone	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:App
clone	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Switched
clone	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:ArgGroup
clone	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:CowStrDeserializer
clone	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:StringDeserializer
clone	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	f
collect_lifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn collect_lifetimes(ty: &syn::Type, out: &mut BTreeSet<syn::Lifetime>) {$/;"	f
collect_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn collect_map<K, V, I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn collect_seq<I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn collect_str<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
collect_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
color	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    color: bool,$/;"	m	struct:Help
color	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^macro_rules! color {$/;"	M
color	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn color(&self) -> ColorWhen {$/;"	f
color	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^macro_rules! color {$/;"	M
colored_output	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    fn colored_output() {$/;"	f	module:test
comment	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn comment(&mut self, comment: Option<u8>) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
completed	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub completed: bool,$/;"	m	struct:Task
completions	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod completions;$/;"	n
conflicts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub conflicts: Option<Vec<&'a str>>,$/;"	m	struct:ArgGroup
conflicts_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn conflicts_with(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
conflicts_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn conflicts_with(mut self, n: &'a str) -> Self {$/;"	P	implementation:ArgGroup
conflicts_with_all	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn conflicts_with_all(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
conflicts_with_all	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn conflicts_with_all(mut self, ns: &[&'a str]) -> Self {$/;"	P	implementation:ArgGroup
constrain	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^pub fn constrain<T: ?Sized>(t: &T) -> &T {$/;"	f
contains	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn contains(&self, arg: &str) -> bool {$/;"	P	implementation:ArgMatcher
contains_byte	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn contains_byte(&self, b: u8) -> bool;$/;"	P	interface:OsStrExt2
contains_byte	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn contains_byte(&self, byte: u8) -> bool {$/;"	P	implementation:OsStr
contains_key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        pub fn contains_key(&self, key: usize) -> bool {$/;"	P	implementation:vec_map::VecMap
contains_long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn contains_long(&self, l: &str) -> bool {$/;"	f
contains_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn contains_short(&self, s: char) -> bool {$/;"	f
content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        content: &'a Content<'de>,$/;"	m	struct:content::ContentRefDeserializer
content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        content: Content<'de>,$/;"	m	struct:content::ContentDeserializer
content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub content: Content<'de>,$/;"	m	struct:content::TaggedContent
content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^mod content {$/;"	n
content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^mod content {$/;"	n
cookbook	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub mod cookbook;$/;"	n
copy_and_capture	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^fn copy_and_capture<R: Read, W: Write>($/;"	f
copy_until	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^fn copy_until<R: Read, W: Write>(r: &mut R, w: &mut W, delimiter_byte: u8) -> CopyUntilResult {$/;"	f
core	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    core: Box<CoreReader>,$/;"	m	struct:Reader
core	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    core: CoreWriter,$/;"	m	struct:Writer
core	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/lib.rs	/^    mod core {$/;"	n	module:lib
count	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn count(self) -> usize {$/;"	P	implementation:ByteRecordIter
count	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn count(self) -> usize {$/;"	P	implementation:StringRecordIter
count	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    count: usize,$/;"	m	struct:MapDeserializer
count	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    count: usize,$/;"	m	struct:SeqDeserializer
crate_authors	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! crate_authors {$/;"	M
crate_description	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! crate_description {$/;"	M
crate_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! crate_name {$/;"	M
crate_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! crate_version {$/;"	M
create_error_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/usage.rs	/^pub fn create_error_usage<'a, 'b>($/;"	f
create_flag_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_flag_usage() {$/;"	f	module:test
create_help_and_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn create_help_and_version(&mut self) {$/;"	f
create_help_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/usage.rs	/^pub fn create_help_usage(p: &Parser, incl_reqs: bool) -> String {$/;"	f
create_option_usage0	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage0() {$/;"	f	module:test
create_option_usage1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage1() {$/;"	f	module:test
create_option_usage2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage2() {$/;"	f	module:test
create_option_usage3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage3() {$/;"	f	module:test
create_option_usage4	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage4() {$/;"	f	module:test
create_option_usage5	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage5() {$/;"	f	module:test
create_option_usage6	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage6() {$/;"	f	module:test
create_option_usage7	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage7() {$/;"	f	module:test
create_option_usage8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage8() {$/;"	f	module:test
create_option_usage9	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage9() {$/;"	f	module:test
create_option_usage_both1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both1() {$/;"	f	module:test
create_option_usage_both2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both2() {$/;"	f	module:test
create_option_usage_both3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both3() {$/;"	f	module:test
create_option_usage_both4	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both4() {$/;"	f	module:test
create_option_usage_both5	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both5() {$/;"	f	module:test
create_option_usage_both6	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both6() {$/;"	f	module:test
create_option_usage_both7	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both7() {$/;"	f	module:test
create_option_usage_both8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both8() {$/;"	f	module:test
create_option_usage_both_equals1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both_equals1() {$/;"	f	module:test
create_option_usage_both_equals2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both_equals2() {$/;"	f	module:test
create_option_usage_both_equals3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both_equals3() {$/;"	f	module:test
create_option_usage_both_equals4	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both_equals4() {$/;"	f	module:test
create_option_usage_both_equals5	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both_equals5() {$/;"	f	module:test
create_option_usage_both_equals6	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both_equals6() {$/;"	f	module:test
create_option_usage_both_equals7	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both_equals7() {$/;"	f	module:test
create_option_usage_both_equals8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_both_equals8() {$/;"	f	module:test
create_option_usage_long1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long1() {$/;"	f	module:test
create_option_usage_long10	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long10() {$/;"	f	module:test
create_option_usage_long2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long2() {$/;"	f	module:test
create_option_usage_long3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long3() {$/;"	f	module:test
create_option_usage_long4	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long4() {$/;"	f	module:test
create_option_usage_long5	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long5() {$/;"	f	module:test
create_option_usage_long6	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long6() {$/;"	f	module:test
create_option_usage_long7	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long7() {$/;"	f	module:test
create_option_usage_long8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long8() {$/;"	f	module:test
create_option_usage_long9	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long9() {$/;"	f	module:test
create_option_usage_long_equals1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals1() {$/;"	f	module:test
create_option_usage_long_equals10	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals10() {$/;"	f	module:test
create_option_usage_long_equals2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals2() {$/;"	f	module:test
create_option_usage_long_equals3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals3() {$/;"	f	module:test
create_option_usage_long_equals4	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals4() {$/;"	f	module:test
create_option_usage_long_equals5	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals5() {$/;"	f	module:test
create_option_usage_long_equals6	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals6() {$/;"	f	module:test
create_option_usage_long_equals7	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals7() {$/;"	f	module:test
create_option_usage_long_equals8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals8() {$/;"	f	module:test
create_option_usage_long_equals9	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_usage_long_equals9() {$/;"	f	module:test
create_option_with_vals1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_with_vals1() {$/;"	f	module:test
create_option_with_vals2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_with_vals2() {$/;"	f	module:test
create_option_with_vals3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_with_vals3() {$/;"	f	module:test
create_option_with_vals4	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_with_vals4() {$/;"	f	module:test
create_option_with_vals5	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_option_with_vals5() {$/;"	f	module:test
create_positional_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_positional_usage() {$/;"	f	module:test
create_positional_usage0	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn create_positional_usage0() {$/;"	f	module:test
create_smart_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/usage.rs	/^fn create_smart_usage(p: &Parser, used: &[&str]) -> String {$/;"	f
create_task	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub fn create_task(&mut self) -> Result<String, Box<dyn Error>> {$/;"	P	implementation:TaskList
create_usage_no_title	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/usage.rs	/^pub fn create_usage_no_title(p: &Parser, used: &[&str]) -> String {$/;"	f
create_usage_with_title	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/usage.rs	/^pub fn create_usage_with_title(p: &Parser, used: &[&str]) -> String {$/;"	f
ctxt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^mod ctxt;$/;"	n
cur_idx	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    cur_idx: Cell<usize>,$/;"	m	struct:Parser
cur_pos	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    cur_pos: Position,$/;"	m	struct:ReaderState
custom	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn custom<T: fmt::Display>(msg: T) -> DeserializeError {$/;"	P	implementation:DeserializeError
custom	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn custom<T: fmt::Display>(msg: T) -> Error {$/;"	P	implementation:Error
custom	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn custom<T>(msg: T) -> Self$/;"	P	implementation:Error
custom	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn custom<T>(_: T) -> Self$/;"	P	implementation:Error
custom	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn custom<T: Display>(_msg: T) -> Self {$/;"	P	implementation:Error
custom_serde_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn custom_serde_path(&self) -> Option<&syn::Path> {$/;"	P	implementation:Container
cx	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    cx: &'c Ctxt,$/;"	m	struct:Attr
cx	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    cx: &'c Ctxt,$/;"	m	struct:VecAttr
data	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub data: Data<'a>,$/;"	m	struct:Container
de	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn de<D: DeserializeOwned>(fields: &[&str]) -> Result<D, Error> {$/;"	f	module:tests
de	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/lib.rs	/^pub mod de;$/;"	n
de	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/mod.rs	/^pub mod de;$/;"	n
de	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^mod de;$/;"	n
de_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    de_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Container
de_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    de_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Field
de_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    de_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Variant
de_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Container
de_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Field
de_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Variant
de_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn de_headers<D: DeserializeOwned>($/;"	f	module:tests
de_lifetime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn de_lifetime(&self) -> syn::Lifetime {$/;"	P	implementation:BorrowedLifetimes
de_lifetime_def	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn de_lifetime_def(&self) -> Option<syn::LifetimeDef> {$/;"	P	implementation:BorrowedLifetimes
debug	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^    macro_rules! debug {$/;"	M	module:debug_macros
debug_asserts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn debug_asserts(&self, a: &Arg) -> bool {$/;"	f
debug_macros	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^mod debug_macros {$/;"	n
debugln	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^    macro_rules! debugln {$/;"	M	module:debug_macros
decide_identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn decide_identifier($/;"	f
decide_tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn decide_tag($/;"	f
declare_error_trait	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
declare_error_trait	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    fn default() -> Self {$/;"	P	implementation:AppFlags
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^    fn default() -> Self {$/;"	P	implementation:Switched
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    fn default() -> Self {$/;"	P	implementation:Valued
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    fn default() -> Self {$/;"	P	implementation:ArgMatcher
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:ArgMatches
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:Indices
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:OsValues
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:Values
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/matched_arg.rs	/^    fn default() -> Self {$/;"	P	implementation:MatchedArg
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    fn default() -> Self {$/;"	P	implementation:ArgFlags
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    fn default() -> Self {$/;"	P	implementation:Colorizer
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn default() -> Bounds {$/;"	P	implementation:Bounds
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn default() -> ByteRecord {$/;"	P	implementation:ByteRecord
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn default() -> QuoteStyle {$/;"	P	implementation:QuoteStyle
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn default() -> Terminator {$/;"	P	implementation:Terminator
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn default() -> Trim {$/;"	P	implementation:Trim
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn default() -> ReaderBuilder {$/;"	P	implementation:ReaderBuilder
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn default() -> StringRecord {$/;"	P	implementation:StringRecord
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn default() -> WriterBuilder {$/;"	P	implementation:WriterBuilder
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    default: Default,$/;"	m	struct:Container
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    default: Default,$/;"	m	struct:Field
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	P	implementation:Container
default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	P	implementation:Field
default_val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	P	implementation:App
default_val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	f
default_val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn default_val(&self) -> Option<&'e OsStr>;$/;"	P	interface:AnyArg
default_val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	P	implementation:FlagBuilder
default_val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	P	implementation:OptBuilder
default_val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	P	implementation:PosBuilder
default_val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub default_val: Option<&'b OsStr>,$/;"	m	struct:Valued
default_vals_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	P	implementation:App
default_vals_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_vals_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>>;$/;"	P	interface:AnyArg
default_vals_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	P	implementation:FlagBuilder
default_vals_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	P	implementation:OptBuilder
default_vals_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	P	implementation:PosBuilder
default_vals_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub default_vals_ifs: Option<VecMap<(&'a str, Option<&'b OsStr>, &'b OsStr)>>,$/;"	m	struct:Valued
default_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn default_value(self, val: &'a str) -> Self {$/;"	P	implementation:Arg
default_value_if	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn default_value_if(self, arg: &'a str, val: Option<&'b str>, default: &'b str) -> Self /;"	P	implementation:Arg
default_value_if_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn default_value_if_os($/;"	P	implementation:Arg
default_value_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn default_value_ifs(mut self, ifs: &[(&'a str, Option<&'b str>, &'b str)]) -> Self {$/;"	P	implementation:Arg
default_value_ifs_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn default_value_ifs_os(mut self, ifs: &[(&'a str, Option<&'b OsStr>, &'b OsStr)]) -> Se/;"	P	implementation:Arg
default_value_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn default_value_os(mut self, val: &'a OsStr) -> Self {$/;"	P	implementation:Arg
delegate	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    delegate: S,$/;"	m	struct:TaggedSerializer
delimiter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn delimiter(&mut self, delimiter: u8) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
delimiter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn delimiter(&mut self, delimiter: u8) -> &mut WriterBuilder {$/;"	P	implementation:WriterBuilder
deny_unknown_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    deny_unknown_fields: bool,$/;"	m	struct:Container
deny_unknown_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn deny_unknown_fields(&self) -> bool {$/;"	P	implementation:Container
deref_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^macro_rules! deref_impl {$/;"	M
derive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod derive {$/;"	n
derive_deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^pub fn derive_deserialize(input: TokenStream) -> TokenStream {$/;"	f
derive_display_order	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn derive_display_order(&mut self) {$/;"	f
derive_serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^pub fn derive_serialize(input: TokenStream) -> TokenStream {$/;"	f
description	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:DeserializeError
description	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:DeserializeErrorKind
description	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn deserialize<'de, D: Deserialize<'de>>($/;"	P	implementation:ByteRecord
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn deserialize<D>(&mut self) -> DeserializeRecordsIter<R, D>$/;"	P	implementation:Reader
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn deserialize<'de, D: Deserialize<'de>>($/;"	P	implementation:StringRecord
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn deserialize<D>(deserializer: D) -> Result<IgnoredAny, D::Error>$/;"	P	implementation:IgnoredAny
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration::deserialize::Field
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime::deserialize::Field
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:deserialize::Field
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:range::Field
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:CString
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:IpAddr
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:OsString
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Path
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PathBuf
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PhantomData
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SocketAddr
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:String
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:T
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:bool
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:char
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:str
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:u8
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	interface:Deserialize
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:DeserializeSeed
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<T, D::Error>$/;"	f
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:private
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:content::Content
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagContentOtherFieldVisitor
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentFieldVisitor
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:content
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    deserialize: RenameRule,$/;"	m	struct:RenameAllRules
deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    deserialize: String,$/;"	m	struct:Name
deserialize_adjacently_tagged_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_adjacently_tagged_enum($/;"	f
deserialize_aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    deserialize_aliases: Vec<String>,$/;"	m	struct:Name
deserialize_aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn deserialize_aliases(&self) -> Vec<String> {$/;"	P	implementation:Name
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_any<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_body	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_bool<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_byte_buf<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^pub fn deserialize_byte_record<'de, D: Deserialize<'de>>($/;"	f
deserialize_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_bytes<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_char<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_custom_identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_custom_identifier($/;"	f
deserialize_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_enum<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! deserialize_enum {$/;"	M
deserialize_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_enum<V>($/;"	P	interface:Deserializer
deserialize_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_enum<V>($/;"	f	module:content
deserialize_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_enum($/;"	f
deserialize_externally_tagged_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_externally_tagged_enum($/;"	f
deserialize_externally_tagged_newtype_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_externally_tagged_newtype_variant($/;"	f
deserialize_externally_tagged_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_externally_tagged_variant($/;"	f
deserialize_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_f32<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_f64<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_from(type_from: &syn::Type) -> Fragment {$/;"	f
deserialize_generated_identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_generated_identifier($/;"	f
deserialize_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_identifier<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_identifier($/;"	f
deserialize_ignored_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_ignored_any<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_ignored_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_ignored_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	implementation:String
deserialize_in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	interface:Deserialize
deserialize_in_place_body	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_in_place_body(_cont: &Container, _params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_in_place_body	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_in_place_body(cont: &Container, params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_int	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^macro_rules! deserialize_int {$/;"	M
deserialize_integer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_integer<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_internally_tagged_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_internally_tagged_enum($/;"	f
deserialize_internally_tagged_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_internally_tagged_variant($/;"	f
deserialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_map<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_map($/;"	f
deserialize_map_in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_map_in_place($/;"	f
deserialize_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn deserialize_name(&self) -> String {$/;"	P	implementation:Name
deserialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_newtype_struct<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	interface:Deserializer
deserialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_newtype_struct<V>($/;"	f	module:content
deserialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, Self::Er/;"	f
deserialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_newtype_struct($/;"	f
deserialize_newtype_struct_in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_newtype_struct_in_place(params: &Parameters, field: &Field) -> TokenStream {$/;"	f
deserialize_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_option<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_other	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn deserialize_other<V>() -> Result<V, E> {$/;"	f
deserialize_renamed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    deserialize_renamed: bool,$/;"	m	struct:Name
deserialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_seq<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn deserialize_seq<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_seq($/;"	f
deserialize_seq_in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_seq_in_place($/;"	f
deserialize_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_str<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_string<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_string_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^pub fn deserialize_string_record<'de, D: Deserialize<'de>>($/;"	f
deserialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_struct<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_struct<V>($/;"	P	interface:Deserializer
deserialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_struct<V>($/;"	f	module:content
deserialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_struct($/;"	f
deserialize_struct_as_map_visitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_struct_as_map_visitor($/;"	f
deserialize_struct_as_struct_in_place_visitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_struct_as_struct_in_place_visitor($/;"	f
deserialize_struct_as_struct_visitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_struct_as_struct_visitor($/;"	f
deserialize_struct_in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_struct_in_place($/;"	f
deserialize_transparent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_try_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_try_from(type_try_from: &syn::Type) -> Fragment {$/;"	f
deserialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_tuple<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_tuple($/;"	f
deserialize_tuple_in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_tuple_in_place($/;"	f
deserialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_tuple_struct<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	interface:Deserializer
deserialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_tuple_struct<V>($/;"	f	module:content
deserialize_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_unit<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_unit_struct<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
deserialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn deserialize_unit_struct<V>($/;"	P	interface:Deserializer
deserialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn deserialize_unit_struct<V>($/;"	f	module:content
deserialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_unit_struct(params: &Parameters, cattrs: &attr::Container) -> Fragment {$/;"	f
deserialize_untagged_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_untagged_enum($/;"	f
deserialize_untagged_newtype_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_untagged_newtype_variant($/;"	f
deserialize_untagged_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn deserialize_untagged_variant($/;"	f
deserialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    deserialize_with: Option<syn::ExprPath>,$/;"	m	struct:Field
deserialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    deserialize_with: Option<syn::ExprPath>,$/;"	m	struct:Variant
deserialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
deserialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Variant
deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^mod deserializer;$/;"	n
did_you_mean	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/suggestions.rs	/^pub fn did_you_mean<'a, T: ?Sized, I>(_: &str, _: I) -> Option<&'a str>$/;"	f
did_you_mean	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/suggestions.rs	/^pub fn did_you_mean<'a, T: ?Sized, I>(v: &str, possible_values: I) -> Option<&'a str>$/;"	f
did_you_mean_error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn did_you_mean_error($/;"	f
did_you_mean_flag_suffix	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/suggestions.rs	/^pub fn did_you_mean_flag_suffix<'z, T, I>($/;"	f
did_you_mean_value_suffix	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/suggestions.rs	/^pub fn did_you_mean_value_suffix<'z, T, I>(arg: &str, values: I) -> (String, Option<&'z str>)$/;"	f
dimensions	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    pub fn dimensions() -> Option<(usize, usize)> {$/;"	f	module:term_size
disp_ord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn disp_ord(&self) -> usize {$/;"	P	implementation:App
disp_ord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub disp_ord: usize,$/;"	m	struct:AppMeta
disp_ord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn disp_ord(&self) -> usize;$/;"	P	interface:DispOrder
disp_ord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn disp_ord(&self) -> usize {$/;"	P	implementation:FlagBuilder
disp_ord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn disp_ord(&self) -> usize {$/;"	P	implementation:OptBuilder
disp_ord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn disp_ord(&self) -> usize {$/;"	P	implementation:PosBuilder
disp_ord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^    pub disp_ord: usize,$/;"	m	struct:Switched
display_mult	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn display_mult() {$/;"	f	module:test
display_order	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	P	implementation:App
display_order	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	P	implementation:Arg
display_required	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn display_required() {$/;"	f	module:test
display_val_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn display_val_names() {$/;"	f	module:test
display_val_names_req	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn display_val_names_req() {$/;"	f	module:test
double_quote	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn double_quote(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
double_quote	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn double_quote(&mut self, yes: bool) -> &mut WriterBuilder {$/;"	P	implementation:WriterBuilder
drop	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Writer
drop	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ctxt.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Ctxt
dummy	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^mod dummy;$/;"	n
effective_style	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
effective_style	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
elements	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeSeq
elements	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeTuple
elvish	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^mod elvish;$/;"	n
empty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            empty: (),$/;"	m	struct:tests::struct_headers_inside_nested_tuple_seq::Bar
empty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            empty: (),$/;"	m	struct:tests::struct_headers_inside_tuple::Bar
empty_field_1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_field_1() {$/;"	f	module:tests
empty_field_2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_field_2() {$/;"	f	module:tests
empty_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_record() {$/;"	f	module:tests
empty_surround_1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_surround_1() {$/;"	f	module:tests
empty_surround_2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_surround_2() {$/;"	f	module:tests
empty_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn empty_value<U>(arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
empty_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn empty_values(mut self, ev: bool) -> Self {$/;"	P	implementation:Arg
encode	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/utf8.rs	/^pub fn encode(c: char) -> Encode {$/;"	f
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn end(&self) -> usize {$/;"	P	implementation:Bounds
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub fn end(self) -> Result<(), E> {$/;"	f
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn end(mut self) -> Result<M::Ok, M::Error> {$/;"	f	module:content
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn end(self) -> Result<Content, E> {$/;"	f	module:content
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn end(self) -> Result<(), Self::Error> {$/;"	f
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    fn end(self) -> Result<Ok, Error> {$/;"	f
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeMap
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeSeq
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStruct
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStructVariant
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTuple
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleStruct
end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleVariant
ends	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    ends: Vec<usize>,$/;"	m	struct:Bounds
ends	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn ends(&self) -> &[usize] {$/;"	P	implementation:Bounds
entries	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        entries: Vec<(Content, Content)>,$/;"	m	struct:content::SerializeMap
entry	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn entry(&mut self, arg: &'a str) -> Entry<&'a str, MatchedArg> {$/;"	P	implementation:ArgMatcher
entry	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        pub fn entry(&mut self, key: usize) -> Entry<V> {$/;"	P	implementation:vec_map::VecMap
enum_from_ast	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^fn enum_from_ast<'a>($/;"	f
enum_label_simple_tagged	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn enum_label_simple_tagged() {$/;"	f	module:tests
enum_newtypes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn enum_newtypes() {$/;"	f	module:tests
enum_struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn enum_struct_variant() {$/;"	f	module:tests
enum_units	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn enum_units() {$/;"	f	module:tests
enum_untagged	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn enum_untagged() {$/;"	f	module:tests
env	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	P	implementation:App
env	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	f
env	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)>;$/;"	P	interface:AnyArg
env	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn env(self, name: &'a str) -> Self {$/;"	P	implementation:Arg
env	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	P	implementation:FlagBuilder
env	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	P	implementation:OptBuilder
env	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	P	implementation:PosBuilder
env	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub env: Option<(&'a OsStr, Option<OsString>)>,$/;"	m	struct:Valued
env_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn env_os(mut self, name: &'a OsStr) -> Self {$/;"	P	implementation:Arg
eof	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    eof: bool,$/;"	m	struct:ReaderState
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    fn eq(&self, other: &Arg<'n, 'e>) -> bool {$/;"	P	implementation:Arg
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    fn eq(&self, other: &Base<'n, 'e>) -> bool {$/;"	P	implementation:Base
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn eq(&self, other: &FlagBuilder<'n, 'e>) -> bool {$/;"	P	implementation:FlagBuilder
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn eq(&self, other: &OptBuilder<'n, 'e>) -> bool {$/;"	P	implementation:OptBuilder
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn eq(&self, other: &PosBuilder<'n, 'e>) -> bool {$/;"	P	implementation:PosBuilder
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq(&self, other: &ByteRecord) -> bool {$/;"	P	implementation:ByteRecord
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq(&self, other: &Vec<T>) -> bool {$/;"	P	implementation:ByteRecord
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq(&self, other: &[T]) -> bool {$/;"	P	implementation:ByteRecord
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq(&self, other: &StringRecord) -> bool {$/;"	P	implementation:StringRecord
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq(&self, other: &Vec<T>) -> bool {$/;"	P	implementation:StringRecord
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq(&self, other: &[T]) -> bool {$/;"	P	implementation:StringRecord
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/symbol.rs	/^    fn eq(&self, word: &Symbol) -> bool {$/;"	P	implementation:Ident
eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/symbol.rs	/^    fn eq(&self, word: &Symbol) -> bool {$/;"	P	implementation:Path
eq_field_boundaries	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq_field_boundaries() {$/;"	f	module:tests
eq_field_boundaries	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq_field_boundaries() {$/;"	f	module:tests
eq_record_len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq_record_len() {$/;"	f	module:tests
eq_record_len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq_record_len() {$/;"	f	module:tests
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    err: Utf8Error,$/;"	m	struct:FromUtf8Error
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    err: io::Error,$/;"	m	struct:IntoInnerError
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    err: ErrorImpl,$/;"	m	struct:Error
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentDeserializer
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentRefDeserializer
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumDeserializer
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumRefDeserializer
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapDeserializer
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapRefDeserializer
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqDeserializer
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqRefDeserializer
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantDeserializer
err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantRefDeserializer
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    pub fn error<T>(&self, msg: T) -> Format<T>$/;"	P	implementation:Colorizer
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn error(&self, kind: DeserializeErrorKind) -> DeserializeError {$/;"	P	implementation:DeByteRecord
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn error(&self, kind: DeserializeErrorKind) -> DeserializeError {$/;"	P	implementation:DeRecordWrap
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn error(&self, kind: DeserializeErrorKind) -> DeserializeError {$/;"	P	implementation:DeStringRecord
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn error(&self, kind: DeserializeErrorKind) -> DeserializeError;$/;"	P	interface:DeRecord
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn error(&self) -> &io::Error {$/;"	P	implementation:IntoInnerError
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^mod error;$/;"	n
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    error: PhantomData<E>,$/;"	m	struct:MapDeserializer
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::ContentSerializer
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeMap
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeSeq
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStruct
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStructVariant
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTuple
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleStruct
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleVariant
error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    error: PhantomData<Error>,$/;"	m	struct:Impossible
error_container_inside_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^fn error_container_inside_struct<T: fmt::Display>(name: T) -> Error {$/;"	f
error_scalar_outside_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^fn error_scalar_outside_struct<T: fmt::Display>(name: T) -> Error {$/;"	f
error_spanned_by	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ctxt.rs	/^    pub fn error_spanned_by<A: ToTokens, T: Display>(&self, obj: A, msg: T) {$/;"	P	implementation:Ctxt
errors	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod errors;$/;"	n
errors	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ctxt.rs	/^    errors: RefCell<Option<Vec<syn::Error>>>,$/;"	m	struct:Ctxt
escape	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn escape(&mut self, escape: Option<u8>) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
escape	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn escape(&mut self, escape: u8) -> &mut WriterBuilder {$/;"	P	implementation:WriterBuilder
escape_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/elvish.rs	/^fn escape_string(string: &str) -> String {$/;"	f
escape_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/fish.rs	/^fn escape_string(string: &str) -> String {$/;"	f
escape_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/powershell.rs	/^fn escape_string(string: &str) -> String {$/;"	f
exit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn exit(&self) -> ! {$/;"	P	implementation:Error
expand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn expand(&mut self) {$/;"	P	implementation:Bounds
expand_derive_deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^pub fn expand_derive_deserialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error/;"	f
expand_derive_serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^pub fn expand_derive_serialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error>>/;"	f
expand_ends	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub(crate) fn expand_ends(&mut self) {$/;"	P	implementation:ByteRecord
expand_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub(crate) fn expand_fields(&mut self) {$/;"	P	implementation:ByteRecord
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IgnoredAny
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IpAddr::deserialize::IpAddrVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SocketAddr::deserialize::SocketAddrVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:range::Field::deserialize::FieldVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::DurationVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize_in_place
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:range
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        pub expecting: &'static str,$/;"	m	struct:range::RangeVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ArrayVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoolVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BytesVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CStringVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CharVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OsStringVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathBufVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PhantomDataVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringInPlaceVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Visitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::ContentVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:content
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_str::CowStrVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagContentOtherFieldVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentFieldVisitor
expecting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::UntaggedUnitVisitor
explicit_name_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    explicit_name_set: bool,$/;"	m	struct:UsageParser
export	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/lib.rs	/^pub mod export;$/;"	n
expr_is_missing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn expr_is_missing(field: &Field, cattrs: &attr::Container) -> Fragment {$/;"	f
extend	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {$/;"	P	implementation:ByteRecord
extend	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {$/;"	P	implementation:StringRecord
field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    field: Option<u64>,$/;"	m	struct:DeserializeError
field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    field: u64,$/;"	m	struct:DeByteRecord
field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    field: u64,$/;"	m	struct:DeStringRecord
field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    pub fn field(&self) -> Option<u64> {$/;"	P	implementation:DeserializeError
field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    field: usize,$/;"	m	struct:Utf8Error
field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn field(&self) -> usize {$/;"	P	implementation:Utf8Error
field_i	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn field_i(i: usize) -> Ident {$/;"	f
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fields: Vec<u8>,$/;"	m	struct:ByteRecordInner
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fields: &'static [&'static str],$/;"	m	struct:FlatStructAccess
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStruct
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariant
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariantAsMapValue
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleStruct
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariant
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fields: Vec<(&'static str, Content)>,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub fields: Vec<Field<'a>>,$/;"	m	struct:Variant
fields_from_ast	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^fn fields_from_ast<'a>($/;"	f
fields_written	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fields_written: u64,$/;"	m	struct:WriterState
fill_in	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub fn fill_in(&mut self) {$/;"	P	implementation:Valued
fill_in_global_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    fn fill_in_global_values($/;"	P	implementation:ArgMatcher
find_any_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn find_any_arg(&self, name: &str) -> Option<&AnyArg<'a, 'b>> {$/;"	f
find_any_by_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! find_any_by_name {$/;"	M
find_by_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! find_by_name {$/;"	M
find_flag_by_long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! find_flag_by_long {$/;"	M
find_flag_by_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! find_flag_by_short {$/;"	M
find_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! find_from {$/;"	M
find_opt_by_long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! find_opt_by_long {$/;"	M
find_opt_by_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! find_opt_by_short {$/;"	M
find_subcmd	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! find_subcmd {$/;"	M
find_subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn find_subcommand(&'b self, sc: &str) -> Option<&'b App<'a, 'b>> {$/;"	f
first	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    first: bool,$/;"	m	struct:ReaderState
first_dup_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    first_dup_tokens: TokenStream,$/;"	m	struct:VecAttr
first_field_count	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    first_field_count: Option<u64>,$/;"	m	struct:ReaderState
first_field_count	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    first_field_count: Option<u64>,$/;"	m	struct:WriterState
fish	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^mod fish;$/;"	n
flag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/mod.rs	/^mod flag;$/;"	n
flagbuilder_display	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display() {$/;"	f	module:test
flagbuilder_display_multiple_aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display_multiple_aliases() {$/;"	f	module:test
flagbuilder_display_single_alias	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display_single_alias() {$/;"	f	module:test
flags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub flags: Vec<FlagBuilder<'a, 'b>>,$/;"	m	struct:Parser
flags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn flags(&self) -> Iter<FlagBuilder<'a, 'b>> {$/;"	f
flatten	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn flatten() {$/;"	f	module:tests
flatten	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    flatten: bool,$/;"	m	struct:Field
flatten	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn flatten(&self) -> bool {$/;"	P	implementation:Field
flexible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    flexible: bool,$/;"	m	struct:ReaderBuilder
flexible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    flexible: bool,$/;"	m	struct:ReaderState
flexible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn flexible(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
flexible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    flexible: bool,$/;"	m	struct:WriterBuilder
flexible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    flexible: bool,$/;"	m	struct:WriterState
flexible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn flexible(&mut self, yes: bool) -> &mut WriterBuilder {$/;"	P	implementation:WriterBuilder
float	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn float() {$/;"	f	module:tests
float_nan	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn float_nan() {$/;"	f	module:tests
flush	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:tests::full_buffer_should_not_flush_underlying::MarkWriteAndFlush
flush	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Writer
flush_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn flush_buf(&mut self) -> io::Result<()> {$/;"	P	implementation:Writer
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:App
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:FlagBuilder
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:OptBuilder
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:PosBuilder
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:ArgGroup
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Shell
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    fn fmt(&self, f: &mut std_fmt::Formatter) -> std_fmt::Result {$/;"	P	implementation:Error
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Format
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod fmt;$/;"	n
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:vec_map::Iter
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ByteRecord
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DeserializeError
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DeserializeErrorKind
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FromUtf8Error
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IntoInnerError
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Utf8Error
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringRecord
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Unexpected
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OneOf
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:a
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:str
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Expected
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Error
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInMap
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInSeq
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Unsupported
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^mod fmt;$/;"	n
fmt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/symbol.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Symbol
fmt	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PriEnum
fmt_primitives	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^macro_rules! fmt_primitives {$/;"	M
foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            foo: i32,$/;"	m	struct:tests::serialize_no_headers::Row
foo	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            foo: i32,$/;"	m	struct:tests::serialize_with_headers::Row
force_next_line	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    force_next_line: bool,$/;"	m	struct:Help
format	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    fn format(&self) -> &T {$/;"	P	implementation:Format
format	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    fn format(&self) -> ANSIString {$/;"	P	implementation:Format
forward_to_deserialize_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/macros.rs	/^macro_rules! forward_to_deserialize_any {$/;"	M
forward_to_deserialize_any_helper	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/macros.rs	/^macro_rules! forward_to_deserialize_any_helper {$/;"	M
forward_to_deserialize_any_method	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/macros.rs	/^macro_rules! forward_to_deserialize_any_method {$/;"	M
forward_to_deserialize_other	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^macro_rules! forward_to_deserialize_other {$/;"	M
forwarded_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! forwarded_impl {$/;"	M
fragment	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^mod fragment;$/;"	n
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn from(mut yaml: &'a Yaml) -> Self {$/;"	P	implementation:App
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    fn from(a: &'z Arg<'a, 'b>) -> Self {$/;"	P	implementation:Arg
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	P	implementation:Base
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn from(a: &'z Arg<'a, 'b>) -> Self {$/;"	P	implementation:FlagBuilder
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn from(mut a: Arg<'a, 'b>) -> Self {$/;"	P	implementation:FlagBuilder
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	P	implementation:OptBuilder
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn from(mut a: Arg<'n, 'e>) -> Self {$/;"	P	implementation:OptBuilder
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	P	implementation:Switched
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	P	implementation:Valued
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    fn from(b: &'a BTreeMap<Yaml, Yaml>) -> Self {$/;"	P	implementation:ArgGroup
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    fn from(g: &'z ArgGroup<'a>) -> Self {$/;"	P	implementation:ArgGroup
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    fn from(e: io::Error) -> Self {$/;"	P	implementation:Error
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    fn from(e: std_fmt::Error) -> Self {$/;"	P	implementation:Error
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn from(record: StringRecord) -> ByteRecord {$/;"	P	implementation:ByteRecord
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn from(xs: &'a [T]) -> ByteRecord {$/;"	P	implementation:ByteRecord
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn from(xs: Vec<T>) -> ByteRecord {$/;"	P	implementation:ByteRecord
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn from(err: Error) -> io::Error {$/;"	P	implementation:Error
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn from(err: io::Error) -> Error {$/;"	P	implementation:Error
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn from(xs: &'a [T]) -> StringRecord {$/;"	P	implementation:StringRecord
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn from(xs: Vec<T>) -> StringRecord {$/;"	P	implementation:StringRecord
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn from(self) -> Self::Deserializer {$/;"	f
from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn from(self) -> Self::Deserializer;$/;"	P	interface:IdentifierDeserializer
from_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    pub fn from_arg(mut a: Arg<'n, 'e>, idx: u64) -> Self {$/;"	P	implementation:PosBuilder
from_arg_ref	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    pub fn from_arg_ref(a: &Arg<'n, 'e>, idx: u64) -> Self {$/;"	P	implementation:PosBuilder
from_argmatches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^        fn from_argmatches<'a>(matches: clap::ArgMatches<'a>) -> Self;$/;"	P	interface:derive::FromArgMatches
from_ascii	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn from_ascii(ascii: &[u8]) -> OsString {$/;"	f	function:test_windows_osstr_starts_with
from_ast	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub fn from_ast($/;"	P	implementation:Container
from_ast	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn from_ast($/;"	P	implementation:Field
from_ast	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, item: &syn::DeriveInput) -> Self {$/;"	P	implementation:Container
from_ast	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, variant: &syn::Variant) -> Self {$/;"	P	implementation:Variant
from_attrs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn from_attrs($/;"	P	implementation:Name
from_bounds	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pub fn from_bounds<I>(iter: &I) -> Option<usize>$/;"	f	module:size_hint
from_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn from_byte_record($/;"	P	implementation:StringRecord
from_byte_record_lossy	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn from_byte_record_lossy(record: ByteRecord) -> StringRecord {$/;"	P	implementation:StringRecord
from_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn from_bytes(b: &[u8]) -> &Self {$/;"	P	implementation:OsStr
from_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn from_bytes(b: &[u8]) -> &Self;$/;"	P	interface:OsStrExt3
from_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^    fn from_i16(n: i16) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^    fn from_i32(n: i32) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^    fn from_i64(n: i64) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^    fn from_i8(n: i8) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> ByteRecord {$/;"	P	implementation:ByteRecord
from_iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> StringRecord {$/;"	P	implementation:StringRecord
from_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn from_path<P: AsRef<Path>>(&self, path: P) -> Result<Reader<File>> {$/;"	P	implementation:ReaderBuilder
from_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn from_path<P: AsRef<Path>>(path: P) -> Result<Reader<File>> {$/;"	P	implementation:Reader
from_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn from_path<P: AsRef<Path>>(&self, path: P) -> Result<Writer<File>> {$/;"	P	implementation:WriterBuilder
from_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn from_path<P: AsRef<Path>>(path: P) -> Result<Writer<File>> {$/;"	P	implementation:Writer
from_primitive	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^mod from_primitive;$/;"	n
from_reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn from_reader(rdr: R) -> Reader<R> {$/;"	P	implementation:Reader
from_reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn from_reader<R: io::Read>(&self, rdr: R) -> Reader<R> {$/;"	P	implementation:ReaderBuilder
from_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	P	implementation:AppSettings
from_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	P	implementation:ArgSettings
from_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Shell
from_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^    fn from_str(rename_all_str: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:RenameRule
from_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^    fn from_u16(n: u16) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^    fn from_u32(n: u32) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^    fn from_u64(n: u64) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^    fn from_u8(n: u8) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn from_usage(u: &'a str) -> Self {$/;"	P	implementation:Arg
from_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    pub fn from_usage(usage: &'a str) -> Self {$/;"	P	implementation:UsageParser
from_utf8_lossy	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> &str {$/;"	f	module:string
from_utf8_lossy	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> Cow<str> {$/;"	f	module:string
from_writer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn from_writer(wtr: W) -> Writer<W> {$/;"	P	implementation:Writer
from_writer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn from_writer<W: io::Write>(&self, wtr: W) -> Writer<W> {$/;"	P	implementation:WriterBuilder
from_yaml	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn from_yaml(yaml: &'a Yaml) -> App<'a, 'a> {$/;"	P	implementation:App
from_yaml	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn from_yaml(y: &BTreeMap<Yaml, Yaml>) -> Arg {$/;"	P	implementation:Arg
from_yaml	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn from_yaml(y: &'a Yaml) -> ArgGroup<'a> {$/;"	P	implementation:ArgGroup
from_yaml	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/subcommand.rs	/^    pub fn from_yaml(yaml: &Yaml) -> App {$/;"	P	implementation:SubCommand
full_buffer_should_not_flush_underlying	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn full_buffer_should_not_flush_underlying() {$/;"	f	module:tests
g_settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub g_settings: AppFlags,$/;"	m	struct:Parser
gen_completions	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn gen_completions<T: Into<OsString>, S: Into<String>>($/;"	P	implementation:App
gen_completions	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn gen_completions(&mut self, for_shell: Shell, od: OsString) {$/;"	f
gen_completions_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn gen_completions_to<W: Write, S: Into<String>>($/;"	P	implementation:App
gen_completions_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn gen_completions_to<W: Write>(&mut self, for_shell: Shell, buf: &mut W) {$/;"	f
generate	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^    pub fn generate<W: Write>(&self, for_shell: Shell, buf: &mut W) {$/;"	P	implementation:ComplGen
generate_inner	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/elvish.rs	/^fn generate_inner<'a, 'b, 'p>($/;"	f
generate_inner	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/powershell.rs	/^fn generate_inner<'a, 'b, 'p>($/;"	f
generate_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:BashGen
generate_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/elvish.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:ElvishGen
generate_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/fish.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:FishGen
generate_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/powershell.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:PowerShellGen
generate_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/zsh.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:ZshGen
generics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    generics: syn::Generics,$/;"	m	struct:Parameters
generics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub generics: &'a syn::Generics,$/;"	m	struct:Container
generics	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    generics: syn::Generics,$/;"	m	struct:Parameters
get	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn get(&self, arg: &str) -> Option<&MatchedArg> {$/;"	P	implementation:ArgMatcher
get	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        pub fn get(&self, key: usize) -> Option<&V> {$/;"	P	implementation:vec_map::VecMap
get	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn get(&self, i: usize) -> Option<Range<usize>> {$/;"	P	implementation:Bounds
get	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn get(&self, i: usize) -> Option<&[u8]> {$/;"	P	implementation:ByteRecord
get	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn get(&self, i: usize) -> Option<&str> {$/;"	P	implementation:StringRecord
get	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn get(&self) -> bool {$/;"	P	implementation:BoolAttr
get	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn get(self) -> Option<T> {$/;"	P	implementation:Attr
get	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn get(self) -> Vec<T> {$/;"	P	implementation:VecAttr
get_all_subcommand_paths	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^pub fn get_all_subcommand_paths(p: &Parser, first: bool) -> Vec<String> {$/;"	f
get_args_tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/usage.rs	/^fn get_args_tag(p: &Parser, incl_reqs: bool) -> Option<String> {$/;"	f
get_bin_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn get_bin_name(&self) -> Option<&str> {$/;"	P	implementation:App
get_lit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn get_lit_str<'a>(cx: &Ctxt, attr_name: Symbol, lit: &'a syn::Lit) -> Result<&'a syn::LitStr, (/;"	f
get_lit_str2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn get_lit_str2<'a>($/;"	f
get_matches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn get_matches(self) -> ArgMatches<'a> {$/;"	P	implementation:App
get_matches_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn get_matches_from<I, T>(mut self, itr: I) -> ArgMatches<'a>$/;"	P	implementation:App
get_matches_from_safe	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn get_matches_from_safe<I, T>(mut self, itr: I) -> ClapResult<ArgMatches<'a>>$/;"	P	implementation:App
get_matches_from_safe_borrow	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn get_matches_from_safe_borrow<I, T>(&mut self, itr: I) -> ClapResult<ArgMatches<'a>>$/;"	P	implementation:App
get_matches_safe	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn get_matches_safe(self) -> ClapResult<ArgMatches<'a>> {$/;"	P	implementation:App
get_matches_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn get_matches_with<I, T>($/;"	f
get_member	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn get_member(params: &Parameters, field: &Field, member: &Member) -> TokenStream {$/;"	f
get_multiple_renames	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn get_multiple_renames<'a>($/;"	f
get_mut	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn get_mut(&mut self, arg: &str) -> Option<&mut MatchedArg> {$/;"	P	implementation:ArgMatcher
get_mut	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn get_mut(&mut self) -> &mut R {$/;"	P	implementation:Reader
get_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn get_name(&self) -> &str {$/;"	P	implementation:App
get_ref	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn get_ref(&self) -> &R {$/;"	P	implementation:Reader
get_renames	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn get_renames<'a>($/;"	f
get_required_usage_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/usage.rs	/^pub fn get_required_usage_from<'a, 'b>($/;"	f
get_requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/usage.rs	/^    macro_rules! get_requires {$/;"	M	function:get_required_usage_from
get_ser_and_de	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn get_ser_and_de<'a, 'b, T, F>($/;"	f
get_serde_meta_items	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^pub fn get_serde_meta_items(cx: &Ctxt, attr: &syn::Attribute) -> Result<Vec<syn::NestedMeta>, ()/;"	f
get_tooltip	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/elvish.rs	/^fn get_tooltip<T: ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_tooltip	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/powershell.rs	/^fn get_tooltip<T: ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_where_predicates	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn get_where_predicates($/;"	f
get_with_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn get_with_tokens(self) -> Option<(TokenStream, T)> {$/;"	P	implementation:Attr
get_zsh_arg_conflicts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/macros.rs	/^macro_rules! get_zsh_arg_conflicts {$/;"	M
getter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    getter: Option<syn::ExprPath>,$/;"	m	struct:Field
getter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn getter(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
global	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn global(self, g: bool) -> Self {$/;"	P	implementation:Arg
global_args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub global_args: Vec<Arg<'a, 'b>>,$/;"	m	struct:Parser
global_setting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn global_setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:App
global_settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn global_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	P	implementation:App
good	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    pub fn good<T>(&self, msg: T) -> Format<T>$/;"	P	implementation:Colorizer
group	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn group(mut self, group: ArgGroup<'a>) -> Self {$/;"	P	implementation:App
group	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn group(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
group	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^mod group;$/;"	n
groups	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn groups(mut self, groups: &[ArgGroup<'a>]) -> Self {$/;"	P	implementation:App
groups	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub groups: Vec<ArgGroup<'a>>,$/;"	m	struct:Parser
groups	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn groups(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
groups	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub groups: Option<Vec<&'a str>>,$/;"	m	struct:Base
groups	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    fn groups() {$/;"	f	module:test
groups_for_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn groups_for_arg(&self, name: &str) -> Option<Vec<&'a str>> {$/;"	f
h1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            h1: String,$/;"	m	struct:tests::partially_invalid_utf8::Row
h2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            h2: BString,$/;"	m	struct:tests::partially_invalid_utf8::Row
h3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            h3: String,$/;"	m	struct:tests::partially_invalid_utf8::Row
handle_container	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn handle_container<T: fmt::Display>($/;"	P	implementation:SeHeader
handle_scalar	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn handle_scalar<T: fmt::Display>($/;"	P	implementation:SeHeader
handle_self_overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn handle_self_overrides<'b>(&mut self, a: Option<&AnyArg<'a, 'b>>) {$/;"	P	implementation:ArgMatcher
has_args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn has_args(&self) -> bool {$/;"	f
has_flags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn has_flags(&self) -> bool {$/;"	f
has_flatten	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    has_flatten: bool,$/;"	m	struct:Container
has_flatten	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn has_flatten(&self) -> bool {$/;"	P	implementation:Container
has_getter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    has_getter: bool,$/;"	m	struct:Parameters
has_getter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub fn has_getter(&self) -> bool {$/;"	P	implementation:Data
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn has_headers(&self) -> bool {$/;"	P	implementation:DeByteRecord
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn has_headers(&self) -> bool {$/;"	P	implementation:DeRecordWrap
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn has_headers(&self) -> bool {$/;"	P	implementation:DeStringRecord
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn has_headers(&self) -> bool;$/;"	P	interface:DeRecord
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    has_headers: bool,$/;"	m	struct:ReaderBuilder
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    has_headers: bool,$/;"	m	struct:ReaderState
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn has_headers(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn has_headers(&self) -> bool {$/;"	P	implementation:Reader
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    has_headers: bool,$/;"	m	struct:WriterBuilder
has_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn has_headers(&mut self, yes: bool) -> &mut WriterBuilder {$/;"	P	implementation:WriterBuilder
has_opts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn has_opts(&self) -> bool {$/;"	f
has_positionals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn has_positionals(&self) -> bool {$/;"	f
has_subcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn has_subcommands(&self) -> bool {$/;"	f
has_switch	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn has_switch(&self) -> bool {$/;"	P	implementation:App
has_switch	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn has_switch(&self) -> bool {$/;"	f
has_switch	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn has_switch(&self) -> bool;$/;"	P	interface:AnyArg
has_switch	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn has_switch(&self) -> bool {$/;"	P	implementation:FlagBuilder
has_switch	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn has_switch(&self) -> bool {$/;"	P	implementation:OptBuilder
has_switch	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn has_switch(&self) -> bool {$/;"	P	implementation:PosBuilder
has_visible_flags	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn has_visible_flags(&self) -> bool {$/;"	f
has_visible_opts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn has_visible_opts(&self) -> bool {$/;"	f
has_visible_positionals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn has_visible_positionals(&self) -> bool {$/;"	f
has_visible_subcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn has_visible_subcommands(&self) -> bool {$/;"	f
header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    header: HeaderState,$/;"	m	struct:WriterState
headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    headers: Option<ByteRecordIter<'r>>,$/;"	m	struct:DeByteRecord
headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    headers: Option<StringRecordIter<'r>>,$/;"	m	struct:DeStringRecord
headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    headers: Option<Headers>,$/;"	m	struct:ReaderState
headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    headers: Option<StringRecord>,$/;"	m	struct:DeserializeRecordsIntoIter
headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    headers: Option<StringRecord>,$/;"	m	struct:DeserializeRecordsIter
headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn headers(&mut self) -> Result<&StringRecord> {$/;"	P	implementation:Reader
headers_on_empty_data	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn headers_on_empty_data() {$/;"	f	module:tests
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn help<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>, spec_vals: &str) -> io::Result<()> /;"	P	implementation:Help
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	P	implementation:App
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^mod help;$/;"	n
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	f
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn help(&self) -> Option<&'e str>;$/;"	P	interface:AnyArg
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn help(mut self, h: &'b str) -> Self {$/;"	P	implementation:Arg
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub help: Option<&'b str>,$/;"	m	struct:Base
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	P	implementation:FlagBuilder
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	P	implementation:OptBuilder
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	P	implementation:PosBuilder
help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn help(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
help_message	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn help_message<S: Into<&'a str>>(mut self, s: S) -> Self {$/;"	P	implementation:App
help_message	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub help_message: Option<&'a str>,$/;"	m	struct:Parser
help_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn help_short<S: AsRef<str> + 'b>(mut self, s: S) -> Self {$/;"	P	implementation:App
help_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    help_short: Option<char>,$/;"	m	struct:Parser
help_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn help_short(&mut self, s: &str) {$/;"	f
help_start	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^fn help_start(b: u8) -> bool {$/;"	f
help_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub help_str: Option<&'b str>,$/;"	m	struct:AppMeta
helper	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn helper(bounds: (usize, Option<usize>)) -> Option<usize> {$/;"	f	module:size_hint
hidden	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn hidden(self, h: bool) -> Self {$/;"	P	implementation:Arg
hidden_long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn hidden_long_help(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hidden_short_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn hidden_short_help(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hide_default_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn hide_default_value(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hide_env_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn hide_env_values(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hide_possible_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn hide_possible_values(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hide_pv	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    hide_pv: bool,$/;"	m	struct:Help
i_forward	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    i_forward: usize,$/;"	m	struct:ByteRecordIter
i_reverse	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    i_reverse: usize,$/;"	m	struct:ByteRecordIter
ident	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub ident: syn::Ident,$/;"	m	struct:Container
ident	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub ident: syn::Ident,$/;"	m	struct:Variant
identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    identifier: Identifier,$/;"	m	struct:Container
identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn identifier(&self) -> Identifier {$/;"	P	implementation:Container
ignored_any	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^mod ignored_any;$/;"	n
impl_copy_clone	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^macro_rules! impl_copy_clone {$/;"	M
impl_deserialize_num	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! impl_deserialize_num {$/;"	M
impl_from_primitive_for_float	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_float {$/;"	M
impl_from_primitive_for_int	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_int {$/;"	M
impl_from_primitive_for_uint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_uint {$/;"	M
impl_settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! impl_settings {$/;"	M
implied_settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn implied_settings(&mut self, a: &Arg<'a, 'b>) {$/;"	f
impls	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^mod impls;$/;"	n
impls	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^mod impls;$/;"	n
impossible	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^mod impossible;$/;"	n
in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn in_place(self) -> InPlaceImplGenerics<'a> {$/;"	P	implementation:DeImplGenerics
in_place	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn in_place(self) -> InPlaceTypeGenerics<'a> {$/;"	P	implementation:DeTypeGenerics
inc_occurrence_of	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn inc_occurrence_of(&mut self, arg: &'a str) {$/;"	P	implementation:ArgMatcher
inc_occurrences_of	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn inc_occurrences_of(&mut self, args: &[&'a str]) {$/;"	P	implementation:ArgMatcher
index	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn index(mut self, idx: u64) -> Self {$/;"	P	implementation:Arg
index	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub index: Option<u64>,$/;"	m	struct:Arg
index	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    pub index: u64,$/;"	m	struct:PosBuilder
index	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn index(&self, i: usize) -> &[u8] {$/;"	P	implementation:ByteRecord
index	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn index(&self, i: usize) -> &str {$/;"	P	implementation:StringRecord
index_of	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn index_of<S: AsRef<str>>(&self, name: S) -> Option<usize> {$/;"	P	implementation:ArgMatches
indices	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/matched_arg.rs	/^    pub indices: Vec<usize>,$/;"	m	struct:MatchedArg
indices_of	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn indices_of<S: AsRef<str>>(&'a self, name: S) -> Option<Indices<'a>> {$/;"	P	implementation:ArgMatches
infer_deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn infer_deserialize<'de, V: Visitor<'de>>($/;"	P	implementation:DeByteRecord
infer_deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn infer_deserialize<'de, V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
infer_deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn infer_deserialize<'de, V: Visitor<'de>>($/;"	P	implementation:DeStringRecord
infer_deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn infer_deserialize<'de, V: Visitor<'de>>($/;"	P	interface:DeRecord
info	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub info: Option<Vec<String>>,$/;"	m	struct:Error
inner	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        inner: BTreeMap<usize, V>,$/;"	m	struct:vec_map::VecMap
inner	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        inner: btree_map::Iter<'a, usize, V>,$/;"	m	struct:vec_map::Iter
input	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            input: Input,$/;"	m	struct:tests::flatten::Row
insert	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn insert(&mut self, name: &'a str) {$/;"	P	implementation:ArgMatcher
insert	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        pub fn insert(&mut self, key: usize, value: V) -> Option<V> {$/;"	P	implementation:vec_map::VecMap
insert	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn insert<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	P	implementation:VecAttr
int_to_int	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^macro_rules! int_to_int {$/;"	M
int_to_uint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^macro_rules! int_to_uint {$/;"	M
integer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn integer() {$/;"	f	module:tests
integer128	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/lib.rs	/^mod integer128;$/;"	n
internals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^mod internals;$/;"	n
into	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    fn into(self) -> ArgMatches<'a> {$/;"	P	implementation:ArgMatcher
into_app	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^        fn into_app<'a, 'b>() -> clap::App<'a, 'b>;$/;"	P	interface:derive::IntoApp
into_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn into_byte_record(self) -> ByteRecord {$/;"	P	implementation:FromUtf8Error
into_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn into_byte_record(self) -> ByteRecord {$/;"	P	implementation:StringRecord
into_byte_records	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_byte_records(self) -> ByteRecordsIntoIter<R> {$/;"	P	implementation:Reader
into_deserialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_deserialize<D>(self) -> DeserializeRecordsIntoIter<R, D>$/;"	P	implementation:Reader
into_deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn into_deserializer(self) -> Self::Deserializer;$/;"	P	interface:IntoDeserializer
into_deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn into_deserializer(self) -> CowStrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn into_deserializer(self) -> StrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn into_deserializer(self) -> StringDeserializer<E> {$/;"	f
into_deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn into_deserializer(self) -> U32Deserializer<E> {$/;"	f
into_deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn into_deserializer(self) -> UnitDeserializer<E> {$/;"	f
into_deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn into_deserializer(self) -> Self {$/;"	f	module:content
into_inner	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn into_inner(self) -> W {$/;"	P	implementation:IntoInnerError
into_inner	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_inner(self) -> R {$/;"	P	implementation:Reader
into_inner	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn into_inner($/;"	P	implementation:Writer
into_iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn into_iter(self) -> ByteRecordIter<'r> {$/;"	P	implementation:ByteRecord
into_iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn into_iter(self) -> StringRecordIter<'a> {$/;"	P	implementation:StringRecord
into_kind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn into_kind(self) -> ErrorKind {$/;"	P	implementation:Error
into_reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_reader(self) -> Reader<R> {$/;"	P	implementation:ByteRecordsIntoIter
into_reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_reader(self) -> Reader<R> {$/;"	P	implementation:DeserializeRecordsIntoIter
into_reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_reader(self) -> Reader<R> {$/;"	P	implementation:StringRecordsIntoIter
into_records	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_records(self) -> StringRecordsIntoIter<R> {$/;"	P	implementation:Reader
invalid_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub fn invalid_option<'de, D, T>(de: D) -> result::Result<Option<T>, D::Error>$/;"	f
invalid_subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn invalid_subcommand<S, D, N, U>($/;"	P	implementation:Error
invalid_type	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn invalid_type(self, exp: &Expected) -> E {$/;"	f	module:content
invalid_utf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn invalid_utf8<U>(usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
invalid_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn invalid_value<B, G, U>($/;"	P	implementation:Error
io_error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn io_error(e: &Error, color: ColorWhen) -> Self {$/;"	P	implementation:Error
is_a_tty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^pub fn is_a_tty(_: bool) -> bool {$/;"	f
is_a_tty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^pub fn is_a_tty(stderr: bool) -> bool {$/;"	f
is_alias	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn is_alias(&self, value: &str) -> bool {$/;"	f
is_bin_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn is_bin_name(&self, value: &str) -> bool {$/;"	f
is_cow	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn is_cow(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_done	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn is_done(&self) -> bool {$/;"	P	implementation:Reader
is_empty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:ArgMatcher
is_empty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        pub fn is_empty(&self) -> bool {$/;"	P	implementation:vec_map::VecMap
is_empty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:ByteRecord
is_empty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:StringRecord
is_human_readable	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Deserializer
is_human_readable	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Serializer
is_implicitly_borrowed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn is_implicitly_borrowed(ty: &syn::Type) -> bool {$/;"	f
is_implicitly_borrowed_reference	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn is_implicitly_borrowed_reference(ty: &syn::Type) -> bool {$/;"	f
is_io_error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn is_io_error(&self) -> bool {$/;"	P	implementation:Error
is_missing_required_ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn is_missing_required_ok(&self, a: &AnyArg, matcher: &ArgMatcher) -> bool {$/;"	P	implementation:Validator
is_new_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn is_new_arg(&mut self, arg_os: &OsStr, needs_val_of: ParseResult) -> bool {$/;"	f
is_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn is_none(&self) -> bool {$/;"	P	implementation:Default
is_option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn is_option(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_packed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    is_packed: bool,$/;"	m	struct:Container
is_packed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn is_packed(&self) -> bool {$/;"	P	implementation:Container
is_packed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    is_packed: bool,$/;"	m	struct:Parameters
is_present	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn is_present(&self, name: &str) -> bool {$/;"	P	implementation:ArgMatcher
is_present	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn is_present<S: AsRef<str>>(&self, name: S) -> bool {$/;"	P	implementation:ArgMatches
is_primitive_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn is_primitive_path(path: &syn::Path, primitive: &str) -> bool {$/;"	f
is_primitive_type	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn is_primitive_type(ty: &syn::Type, primitive: &str) -> bool {$/;"	f
is_reference	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn is_reference(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_remote	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    is_remote: bool,$/;"	m	struct:Parameters
is_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn is_set(&self, _: ArgSettings) -> bool {$/;"	P	implementation:App
is_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn is_set(&self, s: AS) -> bool {$/;"	f
is_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn is_set(&self, ArgSettings) -> bool;$/;"	P	interface:AnyArg
is_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn is_set(&self, a: ArgSettings) -> bool {$/;"	f
is_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:Arg
is_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:Base
is_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:FlagBuilder
is_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:OptBuilder
is_set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:PosBuilder
is_slice_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn is_slice_u8(ty: &syn::Type) -> bool {$/;"	f
is_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn is_some(self) -> bool {$/;"	P	implementation:Identifier
is_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn is_str(ty: &syn::Type) -> bool {$/;"	f
is_term_dumb	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^pub fn is_term_dumb() -> bool {$/;"	f
it	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    it: iter::Peekable<ByteRecordIter<'r>>,$/;"	m	struct:DeByteRecord
it	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    it: iter::Peekable<StringRecordIter<'r>>,$/;"	m	struct:DeStringRecord
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn iter(&self) -> Iter<&str, MatchedArg> {$/;"	P	implementation:ArgMatcher
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    iter: Map<Iter<'a, OsString>, fn(&'a OsString) -> &'a OsStr>,$/;"	m	struct:OsValues
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    iter: Map<Iter<'a, OsString>, fn(&'a OsString) -> &'a str>,$/;"	m	struct:Values
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    iter: Map<Iter<'a, usize>, fn(&'a usize) -> usize>,$/;"	m	struct:Indices
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        pub fn iter(&self) -> Iter<V> {$/;"	P	implementation:vec_map::VecMap
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn iter() {$/;"	f	module:tests
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn iter(&self) -> ByteRecordIter {$/;"	P	implementation:ByteRecord
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn iter(&self) -> StringRecordIter {$/;"	P	implementation:StringRecord
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:MapDeserializer
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:SeqDeserializer
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        iter: <&'a [(Content<'de>, Content<'de>)] as IntoIterator>::IntoIter,$/;"	m	struct:content::MapRefDeserializer
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        iter: <&'a [Content<'de>] as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqRefDeserializer
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        iter: <Vec<(Content<'de>, Content<'de>)> as IntoIterator>::IntoIter,$/;"	m	struct:content::MapDeserializer
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        iter: <Vec<Content<'de>> as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqDeserializer
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    iter: slice::Iter<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatMapAccess
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatInternallyTaggedAccess
iter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatStructAccess
iter_eq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub(crate) fn iter_eq<I, T>(&self, other: I) -> bool$/;"	P	implementation:ByteRecord
iter_forward_and_reverse	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn iter_forward_and_reverse() {$/;"	f	module:tests
iter_reverse	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn iter_reverse() {$/;"	f	module:tests
iterator_len_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^fn iterator_len_hint<I>(iter: &I) -> Option<usize>$/;"	f
key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        key: Option<Content>,$/;"	m	struct:content::SerializeMap
kind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub kind: ErrorKind,$/;"	m	struct:Error
kind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    kind: DeserializeErrorKind,$/;"	m	struct:DeserializeError
kind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    pub fn kind(&self) -> &DeserializeErrorKind {$/;"	P	implementation:DeserializeError
kind	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn kind(&self) -> &ErrorKind {$/;"	P	implementation:Error
label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            label: Label,$/;"	m	struct:tests::enum_label_simple_tagged::Row
label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            label: String,$/;"	m	struct:tests::seq_in_struct_tail::Foo
label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label: String,$/;"	m	struct:tests::struct_headers_inside_nested_tuple_seq::Foo
label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label: String,$/;"	m	struct:tests::struct_headers_inside_seq::Foo
label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label: String,$/;"	m	struct:tests::struct_headers_inside_tuple::Foo
label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label: String,$/;"	m	struct:tests::struct_headers_inside_tuple_scalar_after::Foo
label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label: String,$/;"	m	struct:tests::struct_headers_inside_tuple_scalar_before::Foo
label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label: String,$/;"	m	struct:tests::struct_headers_nested::Foo
label	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label: String,$/;"	m	struct:tests::struct_headers_nested_seq::Foo
label2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label2: Baz,$/;"	m	struct:tests::struct_headers_inside_nested_tuple_seq::Bar
label2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label2: String,$/;"	m	struct:tests::struct_headers_nested::Nested
label2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            label2: bool,$/;"	m	struct:tests::struct_headers_inside_tuple::Bar
last	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn last(self, l: bool) -> Self {$/;"	P	implementation:Arg
last_end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    last_end: usize,$/;"	m	struct:ByteRecordIter
last_start	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    last_start: usize,$/;"	m	struct:ByteRecordIter
len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        pub fn len(&self) -> usize {$/;"	P	implementation:vec_map::VecMap
len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Bounds
len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    len: usize,$/;"	m	struct:Bounds
len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:ByteRecord
len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:StringRecord
len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    len: usize,$/;"	m	struct:Buffer
len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        len: usize,$/;"	m	struct:private::SeedTupleVariant
lib	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/lib.rs	/^mod lib {$/;"	n
lifetime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    lifetime: PhantomData<&'de ()>,$/;"	m	struct:MapDeserializer
line	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    line: u64,$/;"	m	struct:Position
line	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn line(&self) -> u64 {$/;"	P	implementation:Position
load_csv	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub fn load_csv(&mut self, file_name: &str) -> Result<String, Box<dyn Error>> {$/;"	P	implementation:TaskList
load_from_csv_bad_completion_status_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn load_from_csv_bad_completion_status_test() {$/;"	f	module:tests::task_list_tests
load_from_csv_bad_file_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn load_from_csv_bad_file_test() {$/;"	f	module:tests::task_list_tests
load_from_csv_bad_priority_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn load_from_csv_bad_priority_test() {$/;"	f	module:tests::task_list_tests
load_from_csv_sucessful_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn load_from_csv_sucessful_test() {$/;"	f	module:tests::task_list_tests
load_tasks	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub fn load_tasks(&mut self, file_name: &str) -> Result<String, Box<dyn Error>> {$/;"	P	implementation:TaskList
load_to_csv_successful_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn load_to_csv_successful_test() -> Result<(), Box<dyn Error>> {$/;"	f	module:tests::task_list_tests
load_yaml	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! load_yaml {$/;"	M
local	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    local: syn::Ident,$/;"	m	struct:Parameters
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn long<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	P	implementation:Help
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	P	implementation:App
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	f
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn long(&self) -> Option<&'e str>;$/;"	P	interface:AnyArg
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn long(mut self, l: &'b str) -> Self {$/;"	P	implementation:Arg
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	P	implementation:FlagBuilder
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	P	implementation:OptBuilder
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	P	implementation:PosBuilder
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^    pub long: Option<&'b str>,$/;"	m	struct:Switched
long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn long(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
long_about	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub long_about: Option<&'b str>,$/;"	m	struct:AppMeta
long_about	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn long_about<S: Into<&'b str>>(mut self, about: S) -> Self {$/;"	P	implementation:App
long_end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^fn long_end(b: u8) -> bool {$/;"	f
long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	P	implementation:App
long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	f
long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn long_help(&self) -> Option<&'e str>;$/;"	P	interface:AnyArg
long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn long_help(mut self, h: &'b str) -> Self {$/;"	P	implementation:Arg
long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub long_help: Option<&'b str>,$/;"	m	struct:Base
long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	P	implementation:FlagBuilder
long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	P	implementation:OptBuilder
long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	P	implementation:PosBuilder
long_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub long_version: Option<&'b str>,$/;"	m	struct:AppMeta
long_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn long_version<S: Into<&'b str>>(mut self, ver: S) -> Self {$/;"	P	implementation:App
longest	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    longest: usize,$/;"	m	struct:Help
longest_filter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn longest_filter(&self) -> bool {$/;"	P	implementation:App
longest_filter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn longest_filter(&self) -> bool {$/;"	f
longest_filter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn longest_filter(&self) -> bool;$/;"	P	interface:AnyArg
longest_filter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn longest_filter(&self) -> bool {$/;"	P	implementation:FlagBuilder
longest_filter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn longest_filter(&self) -> bool {$/;"	P	implementation:OptBuilder
longest_filter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn longest_filter(&self) -> bool {$/;"	P	implementation:PosBuilder
longs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! longs {$/;"	M
macros	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^mod macros;$/;"	n
macros	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^mod macros;$/;"	n
macros	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod macros;$/;"	n
macros	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/lib.rs	/^mod macros;$/;"	n
macros	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/mod.rs	/^mod macros;$/;"	n
main	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^fn main() {$/;"	f
map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod map;$/;"	n
map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        map: A,$/;"	m	struct:private::MapAsEnum
map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    map: A,$/;"	m	struct:MapAccessDeserializer
map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeStructVariantAsMapValue
map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    map: &'a mut M,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
map_as_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub fn map_as_enum<A>(map: A) -> MapAsEnum<A> {$/;"	f	module:private
map_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn map_headers() {$/;"	f	module:tests
map_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! map_impl {$/;"	M
map_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^macro_rules! map_impl {$/;"	M
map_no_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn map_no_headers() {$/;"	f	module:tests
mark_complete	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub fn mark_complete(&mut self) -> Result<String, Box<dyn Error>> {$/;"	P	implementation:Task
mark_has_flatten	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn mark_has_flatten(&mut self) {$/;"	P	implementation:Container
mark_transparent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn mark_transparent(&mut self) {$/;"	P	implementation:Field
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            marker: PhantomData<T>,$/;"	m	struct:deserialize::VecVisitor
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    marker: PhantomData<A>,$/;"	m	struct:ArrayVisitor
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:OptionVisitor
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:PhantomDataVisitor
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        marker: PhantomData<E>,$/;"	m	struct:private::UnitOnly
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedBytesDeserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedStrDeserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:CowStrDeserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:NeverDeserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:SeqDeserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StringDeserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:U32Deserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:UnitDeserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BytesDeserializer
marker	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
matched_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^mod matched_arg;$/;"	n
matches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/subcommand.rs	/^    pub matches: ArgMatches<'a>,$/;"	m	struct:SubCommand
max_term_width	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn max_term_width(mut self, w: usize) -> Self {$/;"	P	implementation:App
max_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	P	implementation:App
max_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	f
max_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn max_vals(&self) -> Option<u64>;$/;"	P	interface:AnyArg
max_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	P	implementation:FlagBuilder
max_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	P	implementation:OptBuilder
max_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	P	implementation:PosBuilder
max_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub max_vals: Option<u64>,$/;"	m	struct:Valued
max_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn max_values(mut self, qty: u64) -> Self {$/;"	P	implementation:Arg
max_w	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub max_w: Option<usize>,$/;"	m	struct:AppMeta
member	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub member: syn::Member,$/;"	m	struct:Field
member_message	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/check.rs	/^fn member_message(member: &Member) -> String {$/;"	f
message	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub message: String,$/;"	m	struct:Error
meta	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^mod meta;$/;"	n
meta	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub meta: AppMeta<'b>,$/;"	m	struct:Parser
min_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	P	implementation:App
min_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	f
min_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn min_vals(&self) -> Option<u64>;$/;"	P	interface:AnyArg
min_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	P	implementation:FlagBuilder
min_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	P	implementation:OptBuilder
min_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	P	implementation:PosBuilder
min_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub min_vals: Option<u64>,$/;"	m	struct:Valued
min_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn min_values(mut self, qty: u64) -> Self {$/;"	P	implementation:Arg
missing_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>$/;"	f
missing_required_argument	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn missing_required_argument<R, U>(required: R, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
missing_required_error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn missing_required_error(&self, matcher: &ArgMatcher, extra: Option<&str>) -> ClapResult<()/;"	P	implementation:Validator
missing_subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn missing_subcommand<N, U>(name: N, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
mixed_hex_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn mixed_hex_seq() {$/;"	f	module:tests
more_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub more_help: Option<&'b str>,$/;"	m	struct:AppMeta
multiple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn multiple(self, multi: bool) -> Self {$/;"	P	implementation:Arg
multiple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn multiple(mut self, m: bool) -> Self {$/;"	P	implementation:ArgGroup
multiple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub multiple: bool,$/;"	m	struct:ArgGroup
multiple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn multiple(&mut self, arg: &mut Arg) {$/;"	P	implementation:UsageParser
multiple_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    pub fn multiple_str(&self) -> &str {$/;"	P	implementation:PosBuilder
mut_if	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn mut_if(is_mut: bool) -> Option<TokenStream> {$/;"	f
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub name: String,$/;"	m	struct:AppMeta
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn name(&self) -> &'n str {$/;"	P	implementation:App
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn name<S: Into<String>>(mut self, name: S) -> Self {$/;"	P	implementation:App
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn name(&self) -> &'n str {$/;"	f
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn name(&self) -> &'n str;$/;"	P	interface:AnyArg
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub name: &'a str,$/;"	m	struct:Base
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn name(&self) -> &'n str {$/;"	P	implementation:FlagBuilder
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn name(&self) -> &'n str {$/;"	P	implementation:OptBuilder
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn name(&self) -> &'n str {$/;"	P	implementation:PosBuilder
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub name: &'a str,$/;"	m	struct:ArgGroup
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/subcommand.rs	/^    pub name: String,$/;"	m	struct:SubCommand
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn name(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        name: &'static str,$/;"	m	struct:content::TagOrContentVisitor
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStruct
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariant
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariantAsMapValue
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleStruct
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariant
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    name: &'static str,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    name: Name,$/;"	m	struct:Container
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    name: Name,$/;"	m	struct:Field
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    name: Name,$/;"	m	struct:Variant
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    name: Symbol,$/;"	m	struct:Attr
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    name: Symbol,$/;"	m	struct:VecAttr
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	P	implementation:Container
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	P	implementation:Field
name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	P	implementation:Variant
name	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub name: String,$/;"	m	struct:Task
name_end	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^fn name_end(b: u8) -> bool {$/;"	f
name_no_brackets	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    pub fn name_no_brackets(&self) -> Cow<str> {$/;"	P	implementation:PosBuilder
names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    names: &'static [&'static str],$/;"	m	struct:OneOf
needs_deserialize_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn needs_deserialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
needs_flags_tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/usage.rs	/^fn needs_flags_tag(p: &Parser) -> bool {$/;"	f
needs_more_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn needs_more_vals<'b, A>(&self, o: &A) -> bool$/;"	P	implementation:ArgMatcher
needs_serialize_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn needs_serialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
nest	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            nest: Nested,$/;"	m	struct:tests::struct_headers_nested::Foo
never	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    never: !,$/;"	m	struct:NeverDeserializer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    pub fn new($/;"	P	implementation:Help
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub fn new() -> Self {$/;"	P	implementation:AppMeta
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn new<S: Into<String>>(n: S) -> Self {$/;"	P	implementation:App
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    pub fn new() -> Self {$/;"	P	implementation:AppFlags
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    pub fn new(p: &'z mut Parser<'a, 'b>) -> Self {$/;"	P	implementation:Validator
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	P	implementation:Base
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	P	implementation:FlagBuilder
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	P	implementation:OptBuilder
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    pub fn new(name: &'n str, idx: u64) -> Self {$/;"	P	implementation:PosBuilder
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ArgMatcher
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ArgMatches
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/matched_arg.rs	/^    pub fn new() -> Self {$/;"	P	implementation:MatchedArg
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ArgFlags
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:BashGen
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/elvish.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:ElvishGen
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/fish.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:FishGen
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:ComplGen
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/powershell.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:PowerShellGen
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/zsh.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:ZshGen
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    pub fn new(option: ColorizerOption) -> Colorizer {$/;"	P	implementation:Colorizer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        pub fn new() -> Self {$/;"	P	implementation:vec_map::VecMap
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn new(usage: &'a str) -> Self {$/;"	P	implementation:UsageParser
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn new() -> ByteRecord {$/;"	P	implementation:ByteRecord
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn new() -> Position {$/;"	P	implementation:Position
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub(crate) fn new(kind: ErrorKind) -> Error {$/;"	P	implementation:Error
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub(crate) fn new(rec: ByteRecord, err: Utf8Error) -> FromUtf8Error {$/;"	P	implementation:FromUtf8Error
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub(crate) fn new(wtr: W, err: io::Error) -> IntoInnerError<W> {$/;"	P	implementation:IntoInnerError
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(builder: &ReaderBuilder, rdr: R) -> Reader<R> {$/;"	P	implementation:Reader
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(mut rdr: Reader<R>) -> DeserializeRecordsIntoIter<R, D> {$/;"	P	implementation:DeserializeRecordsIntoIter
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: &'r mut Reader<R>) -> ByteRecordsIter<'r, R> {$/;"	P	implementation:ByteRecordsIter
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: &'r mut Reader<R>) -> DeserializeRecordsIter<'r, R, D> {$/;"	P	implementation:DeserializeRecordsIter
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: &'r mut Reader<R>) -> StringRecordsIter<'r, R> {$/;"	P	implementation:StringRecordsIter
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: Reader<R>) -> ByteRecordsIntoIter<R> {$/;"	P	implementation:ByteRecordsIntoIter
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: Reader<R>) -> StringRecordsIntoIter<R> {$/;"	P	implementation:StringRecordsIntoIter
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn new() -> ReaderBuilder {$/;"	P	implementation:ReaderBuilder
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn new(wtr: &'w mut Writer<W>) -> Self {$/;"	P	implementation:SeHeader
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn new() -> StringRecord {$/;"	P	implementation:StringRecord
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn new(builder: &WriterBuilder, wtr: W) -> Writer<W> {$/;"	P	implementation:Writer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn new() -> WriterBuilder {$/;"	P	implementation:WriterBuilder
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn new() -> Self {$/;"	P	implementation:ArrayVisitor
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub fn new(iter: I) -> Self {$/;"	f
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub fn new(map: A) -> Self {$/;"	P	implementation:MapAccessDeserializer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub fn new(seq: A) -> Self {$/;"	P	implementation:SeqAccessDeserializer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub fn new(value: &'de [u8]) -> BorrowedBytesDeserializer<'de, E> {$/;"	P	implementation:BorrowedBytesDeserializer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub fn new(value: &'de str) -> BorrowedStrDeserializer<'de, E> {$/;"	P	implementation:BorrowedStrDeserializer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn new() -> Self {$/;"	P	implementation:content::ContentVisitor
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn new(map: &'a [(Content<'de>, Content<'de>)]) -> Self {$/;"	f	module:content
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn new(map: Vec<(Content<'de>, Content<'de>)>) -> Self {$/;"	f	module:content
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn new(name: &'static str) -> Self {$/;"	P	implementation:content::TagOrContentVisitor
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn new(slice: &'a [Content<'de>]) -> Self {$/;"	f	module:content
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn new(vec: Vec<Content<'de>>) -> Self {$/;"	f	module:content
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub fn new(content: &'a Content<'de>) -> Self {$/;"	P	implementation:content::ContentRefDeserializer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub fn new(content: Content<'de>) -> Self {$/;"	P	implementation:content::ContentDeserializer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub fn new(name: &'static str) -> Self {$/;"	P	implementation:content::TaggedContentVisitor
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::UntaggedUnitVisitor
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub fn new(variant: Content<'de>, value: Option<Content<'de>>) -> EnumDeserializer<'de, /;"	f	module:content
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatMapAccess
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatStructAccess
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        pub fn new() -> Self {$/;"	P	implementation:content::ContentSerializer
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeStructVariantAsMapValue
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeTupleVariantAsMapValue
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn new(map: &'a mut M, name: &'static str) -> FlatMapSerializeStructVariantAsMapValue<'a, M>/;"	f
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn new(cont: &Container) -> Self {$/;"	P	implementation:Parameters
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ctxt.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Ctxt
new	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    fn new(cont: &Container) -> Self {$/;"	P	implementation:Parameters
new_utf8_error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub fn new_utf8_error(field: usize, valid_up_to: usize) -> Utf8Error {$/;"	f
newpos	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn newpos(byte: u64, line: u64, record: u64) -> Position {$/;"	f	module:tests
newtype_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn newtype_variant<T>(self) -> Result<T, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn newtype_variant_seed<U: DeserializeSeed<'de>>($/;"	P	implementation:DeRecordWrap
newtype_variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn newtype_variant_seed<T>(mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>$/;"	f	module:content
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:OsValues
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	P	implementation:Values
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:Indices
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:vec_map::Iter
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:OsSplit
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn next(&mut self) -> Option<&'r [u8]> {$/;"	P	implementation:ByteRecordIter
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn next(&mut self) -> Option<Result<ByteRecord>> {$/;"	P	implementation:ByteRecordsIntoIter
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn next(&mut self) -> Option<Result<ByteRecord>> {$/;"	P	implementation:ByteRecordsIter
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn next(&mut self) -> Option<Result<D>> {$/;"	P	implementation:DeserializeRecordsIntoIter
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn next(&mut self) -> Option<Result<D>> {$/;"	P	implementation:DeserializeRecordsIter
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn next(&mut self) -> Option<Result<StringRecord>> {$/;"	P	implementation:StringRecordsIntoIter
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn next(&mut self) -> Option<Result<StringRecord>> {$/;"	P	implementation:StringRecordsIter
next	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn next(&mut self) -> Option<&'r str> {$/;"	P	implementation:StringRecordIter
next_back	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:OsValues
next_back	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a str> {$/;"	P	implementation:Values
next_back	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<usize> {$/;"	P	implementation:Indices
next_back	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:vec_map::Iter
next_back	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn next_back(&mut self) -> Option<&'r [u8]> {$/;"	P	implementation:ByteRecordIter
next_back	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn next_back(&mut self) -> Option<&'r str> {$/;"	P	implementation:StringRecordIter
next_element	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	P	interface:SeqAccess
next_element	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	f
next_element_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_element_seed<U: DeserializeSeed<'de>>($/;"	P	implementation:DeRecordWrap
next_element_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	P	interface:SeqAccess
next_element_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn next_element_seed<V>(&mut self, seed: V) -> Result<Option<V::Value>, Self::Error>$/;"	f
next_element_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_entry	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	P	interface:MapAccess
next_entry	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	f
next_entry_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	P	interface:MapAccess
next_entry_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	f
next_entry_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn next_entry_seed<TK, TV>($/;"	f
next_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field(&mut self) -> Result<&'r str, DeserializeError> {$/;"	P	implementation:DeByteRecord
next_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field(&mut self) -> Result<&'r str, DeserializeError> {$/;"	P	implementation:DeRecordWrap
next_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field(&mut self) -> Result<&'r str, DeserializeError> {$/;"	P	implementation:DeStringRecord
next_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field(&mut self) -> Result<&'r str, DeserializeError>;$/;"	P	interface:DeRecord
next_field_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field_bytes(&mut self) -> Result<&'r [u8], DeserializeError> {$/;"	P	implementation:DeByteRecord
next_field_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field_bytes(&mut self) -> Result<&'r [u8], DeserializeError> {$/;"	P	implementation:DeRecordWrap
next_field_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field_bytes(&mut self) -> Result<&'r [u8], DeserializeError> {$/;"	P	implementation:DeStringRecord
next_field_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field_bytes(&mut self) -> Result<&'r [u8], DeserializeError>;$/;"	P	interface:DeRecord
next_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header(&mut self) -> Result<Option<&'r str>, DeserializeError> {$/;"	P	implementation:DeByteRecord
next_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header(&mut self) -> Result<Option<&'r str>, DeserializeError> {$/;"	P	implementation:DeRecordWrap
next_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header(&mut self) -> Result<Option<&'r str>, DeserializeError> {$/;"	P	implementation:DeStringRecord
next_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header(&mut self) -> Result<Option<&'r str>, DeserializeError>;$/;"	P	interface:DeRecord
next_header_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header_bytes($/;"	P	implementation:DeByteRecord
next_header_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header_bytes($/;"	P	implementation:DeRecordWrap
next_header_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header_bytes($/;"	P	implementation:DeStringRecord
next_header_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header_bytes($/;"	P	interface:DeRecord
next_key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	P	interface:MapAccess
next_key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	f
next_key_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_key_seed<K: DeserializeSeed<'de>>($/;"	P	implementation:DeRecordWrap
next_key_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	P	interface:MapAccess
next_key_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	f
next_key_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_key_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_line_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    next_line_help: bool,$/;"	m	struct:Help
next_line_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn next_line_help(mut self, nlh: bool) -> Self {$/;"	P	implementation:Arg
next_pair	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn next_pair(&mut self) -> Option<(First<I::Item>, Second<I::Item>)> {$/;"	f
next_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	P	interface:MapAccess
next_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	f
next_value_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_value_seed<K: DeserializeSeed<'de>>($/;"	P	implementation:DeRecordWrap
next_value_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	P	interface:MapAccess
next_value_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	f
next_value_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:content
next_value_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
nfa	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn nfa(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
no_chars	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn no_chars() {$/;"	f	module:tests
no_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn no_fields() {$/;"	f	module:tests
no_headers_on_empty_data	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn no_headers_on_empty_data() {$/;"	f	module:tests
no_headers_on_empty_data_after_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn no_headers_on_empty_data_after_headers() {$/;"	f	module:tests
nonascii	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn nonascii() {$/;"	f	module:test
none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    pub fn none<T>(&self, msg: T) -> Format<T>$/;"	P	implementation:Colorizer
none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	P	implementation:Attr
none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	P	implementation:BoolAttr
none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	P	implementation:VecAttr
nonzero_integers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! nonzero_integers {$/;"	M
nonzero_integers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^macro_rules! nonzero_integers {$/;"	M
nop_reserve	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^fn nop_reserve<T>(_seq: T, _n: usize) {}$/;"	f
num	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            num: f64,$/;"	m	struct:tests::struct_headers_inside_nested_tuple_seq::Foo
num	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            num: f64,$/;"	m	struct:tests::struct_headers_inside_seq::Foo
num	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            num: f64,$/;"	m	struct:tests::struct_headers_inside_tuple::Foo
num	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            num: f64,$/;"	m	struct:tests::struct_headers_inside_tuple_scalar_after::Foo
num	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            num: f64,$/;"	m	struct:tests::struct_headers_inside_tuple_scalar_before::Foo
num_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	P	implementation:App
num_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	f
num_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn num_vals(&self) -> Option<u64>;$/;"	P	interface:AnyArg
num_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	P	implementation:FlagBuilder
num_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	P	implementation:OptBuilder
num_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	P	implementation:PosBuilder
num_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub num_vals: Option<u64>,$/;"	m	struct:Valued
number_of_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn number_of_values(mut self, qty: u64) -> Self {$/;"	P	implementation:Arg
occurrences_of	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn occurrences_of<S: AsRef<str>>(&self, name: S) -> u64 {$/;"	P	implementation:ArgMatches
occurs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/matched_arg.rs	/^    pub occurs: u64,$/;"	m	struct:MatchedArg
ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    ok: PhantomData<Ok>,$/;"	m	struct:Impossible
one_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn one_byte_record() {$/;"	f	module:tests
one_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn one_char() {$/;"	f	module:tests
one_empty_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn one_empty_record() {$/;"	f	module:tests
one_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn one_field() {$/;"	f	module:tests
one_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn one_record() {$/;"	f	module:tests
one_string_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn one_string_record() {$/;"	f	module:tests
optbuilder_display1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn optbuilder_display1() {$/;"	f	module:test
optbuilder_display2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn optbuilder_display2() {$/;"	f	module:test
optbuilder_display3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn optbuilder_display3() {$/;"	f	module:test
optbuilder_display_multiple_aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn optbuilder_display_multiple_aliases() {$/;"	f	module:test
optbuilder_display_single_alias	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn optbuilder_display_single_alias() {$/;"	f	module:test
option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/mod.rs	/^mod option;$/;"	n
option	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn option() {$/;"	f	module:tests
option_details_for_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^    fn option_details_for_path(&self, path: &str) -> String {$/;"	P	implementation:BashGen
option_empty_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn option_empty_field() {$/;"	f	module:tests
option_invalid_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn option_invalid_field() {$/;"	f	module:tests
opts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn opts(&self) -> Iter<OptBuilder<'a, 'b>> {$/;"	f
opts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub opts: Vec<OptBuilder<'a, 'b>>,$/;"	m	struct:Parser
original	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub original: &'a syn::DeriveInput,$/;"	m	struct:Container
original	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub original: &'a syn::Field,$/;"	m	struct:Field
original	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub original: &'a syn::Variant,$/;"	m	struct:Variant
osstringext	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod osstringext;$/;"	n
other	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    other: bool,$/;"	m	struct:Variant
other	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn other(&self) -> bool {$/;"	P	implementation:Variant
overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	P	implementation:App
overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub overrides: Vec<(&'b str, &'a str)>,$/;"	m	struct:Parser
overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	f
overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn overrides(&self) -> Option<&[&'e str]>;$/;"	P	interface:AnyArg
overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub overrides: Option<Vec<&'a str>>,$/;"	m	struct:Base
overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	P	implementation:FlagBuilder
overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	P	implementation:OptBuilder
overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	P	implementation:PosBuilder
overrides_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn overrides_with(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
overrides_with_all	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn overrides_with_all(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
p	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub p: Parser<'a, 'b>,$/;"	m	struct:App
p	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:BashGen
p	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/elvish.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:ElvishGen
p	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/fish.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:FishGen
p	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:ComplGen
p	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/powershell.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:PowerShellGen
p	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/zsh.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:ZshGen
panicked	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    panicked: bool,$/;"	m	struct:WriterState
parse	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^        fn parse() -> Self {$/;"	P	interface:derive::ClapApp
parse	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    pub fn parse(mut self) -> Arg<'a, 'a> {$/;"	P	implementation:UsageParser
parse	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^        fn parse(input: ParseStream) -> parse::Result<Self> {$/;"	P	implementation:parse_lit_into_lifetimes::BorrowedLifetimes
parse_flag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn parse_flag($/;"	f
parse_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^        fn parse_from<I, T>(argv: I) -> Self$/;"	P	interface:derive::ClapApp
parse_help_subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn parse_help_subcommand<I, T>(&self, it: &mut I) -> ClapResult<ParseResult<'a>>$/;"	f
parse_ip_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! parse_ip_impl {$/;"	M
parse_lit_into_expr_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn parse_lit_into_expr_path($/;"	f
parse_lit_into_lifetimes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn parse_lit_into_lifetimes($/;"	f
parse_lit_into_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn parse_lit_into_path(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Path, ()> {$/;"	f
parse_lit_into_ty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn parse_lit_into_ty(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Type, ()> {$/;"	f
parse_lit_into_where	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn parse_lit_into_where($/;"	f
parse_lit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn parse_lit_str<T>(s: &syn::LitStr) -> parse::Result<T>$/;"	f
parse_long_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn parse_long_arg<I, T>($/;"	f
parse_opt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn parse_opt($/;"	f
parse_priority	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^pub fn parse_priority(expr: &str) -> Result<PriEnum, Box<dyn Error>> {$/;"	f
parse_short_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn parse_short_arg($/;"	f
parse_socket_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! parse_socket_impl {$/;"	M
parse_subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn parse_subcommand<I, T>($/;"	f
parser	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^pub mod parser;$/;"	n
partially_invalid_utf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn partially_invalid_utf8() {$/;"	f	module:tests
peek_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn peek_field(&mut self) -> Option<&'r [u8]> {$/;"	P	implementation:DeByteRecord
peek_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn peek_field(&mut self) -> Option<&'r [u8]> {$/;"	P	implementation:DeRecordWrap
peek_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn peek_field(&mut self) -> Option<&'r [u8]> {$/;"	P	implementation:DeStringRecord
peek_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn peek_field(&mut self) -> Option<&'r [u8]>;$/;"	P	interface:DeRecord
pending	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pending: Option<&'a Content<'de>>,$/;"	m	struct:FlatInternallyTaggedAccess
pending_content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pending_content: Option<&'a Content<'de>>,$/;"	m	struct:FlatMapAccess
pending_content	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    pending_content: Option<Content<'de>>,$/;"	m	struct:FlatStructAccess
phantom	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        pub phantom: PhantomData<Idx>,$/;"	m	struct:range::RangeVisitor
place_lifetime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn place_lifetime() -> syn::LifetimeDef {$/;"	f
pos	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    pos: usize,$/;"	m	struct:OsSplit
pos	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    pos: usize,$/;"	m	struct:UsageParser
pos	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pos: Option<Position>,$/;"	m	struct:ByteRecordInner
pos	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/utf8.rs	/^    pos: usize,$/;"	m	struct:Encode
pos_help_double_lit_single_quote	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn pos_help_double_lit_single_quote() {$/;"	f	module:test
pos_help_lit_single_quote	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn pos_help_lit_single_quote() {$/;"	f	module:test
pos_help_newline	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn pos_help_newline() {$/;"	f	module:test
pos_help_newline_lit_sq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn pos_help_newline_lit_sq() {$/;"	f	module:test
pos_mult	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn pos_mult() {$/;"	f	module:test
pos_mult_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn pos_mult_help() {$/;"	f	module:test
pos_req	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn pos_req() {$/;"	f	module:test
pos_req_mult_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn pos_req_mult_help() {$/;"	f	module:test
position	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn position(&self) -> Option<&Position> {$/;"	P	implementation:ByteRecord
position	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn position(&self) -> Option<&Position> {$/;"	P	implementation:Error
position	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn position(&self) -> Option<&Position> {$/;"	P	implementation:ErrorKind
position	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn position(&self) -> &Position {$/;"	P	implementation:Reader
position	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn position(&self) -> Option<&Position> {$/;"	P	implementation:StringRecord
positional	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/mod.rs	/^mod positional;$/;"	n
positionals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn positionals(&self) -> map::Values<PosBuilder<'a, 'b>> {$/;"	f
positionals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub positionals: VecMap<PosBuilder<'a, 'b>>,$/;"	m	struct:Parser
positions_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn positions_headers() {$/;"	f	module:tests
positions_no_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn positions_no_headers() {$/;"	f	module:tests
possible_subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn possible_subcommand(&self, arg_os: &OsStr) -> (bool, Option<&str>) {$/;"	f
possible_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	P	implementation:App
possible_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	f
possible_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]>;$/;"	P	interface:AnyArg
possible_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	P	implementation:FlagBuilder
possible_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	P	implementation:OptBuilder
possible_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	P	implementation:PosBuilder
possible_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub possible_vals: Option<Vec<&'b str>>,$/;"	m	struct:Valued
possible_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn possible_value(mut self, name: &'b str) -> Self {$/;"	P	implementation:Arg
possible_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn possible_values(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:Arg
possible_values_match	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/suggestions.rs	/^    fn possible_values_match() {$/;"	f	module:test
possible_values_nomatch	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/suggestions.rs	/^    fn possible_values_nomatch() {$/;"	f	module:test
powershell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^mod powershell;$/;"	n
pre_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub pre_help: Option<&'b str>,$/;"	m	struct:AppMeta
precondition	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_no_de_lifetime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn precondition_no_de_lifetime(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_sized	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn precondition_sized(cx: &Ctxt, cont: &Container) {$/;"	f
prepare_enum_variant_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn prepare_enum_variant_enum($/;"	f
pretend	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^mod pretend;$/;"	n
pretend_fields_used	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/pretend.rs	/^fn pretend_fields_used(cont: &Container) -> TokenStream {$/;"	f
pretend_used	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/pretend.rs	/^pub fn pretend_used(cont: &Container) -> TokenStream {$/;"	f
pretend_variants_used	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/pretend.rs	/^fn pretend_variants_used(cont: &Container) -> TokenStream {$/;"	f
prev	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    prev: UsageToken,$/;"	m	struct:UsageParser
primitive_deserializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^macro_rules! primitive_deserializer {$/;"	M
primitive_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^macro_rules! primitive_impl {$/;"	M
print_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn print_help(&mut self) -> ClapResult<()> {$/;"	P	implementation:App
print_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn print_help(&self) -> ClapResult<()> {$/;"	f
print_long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn print_long_help(&mut self) -> ClapResult<()> {$/;"	P	implementation:App
print_task_list	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub fn print_task_list($/;"	P	implementation:TaskList
print_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn print_version<W: Write>(&self, w: &mut W, use_long: bool) -> ClapResult<()> {$/;"	f
priority	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub priority: PriEnum,$/;"	m	struct:Task
private	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^mod private {$/;"	n
private	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/lib.rs	/^pub mod private;$/;"	n
process_arg_overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn process_arg_overrides<'b>($/;"	P	implementation:ArgMatcher
prop1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            prop1: f64,$/;"	m	struct:tests::flatten::Properties
prop2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            prop2: f64,$/;"	m	struct:tests::flatten::Properties
propagate_globals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn propagate_globals(&mut self) {$/;"	f
propagate_globals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn propagate_globals(&mut self, global_arg_vec: &[&'a str]) {$/;"	P	implementation:ArgMatcher
propagate_help_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn propagate_help_version(&mut self) {$/;"	f
propagate_settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn propagate_settings(&mut self) {$/;"	f
properties	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            properties: Properties,$/;"	m	struct:tests::flatten::Row
push_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn push_field(&mut self, field: &[u8]) {$/;"	P	implementation:ByteRecord
push_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn push_field(&mut self, field: &str) {$/;"	P	implementation:StringRecord
quote	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn quote(&mut self, quote: u8) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
quote	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn quote(&mut self, quote: u8) -> &mut WriterBuilder {$/;"	P	implementation:WriterBuilder
quote_block	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^macro_rules! quote_block {$/;"	M
quote_expr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^macro_rules! quote_expr {$/;"	M
quote_style	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn quote_style(&mut self, style: QuoteStyle) -> &mut WriterBuilder {$/;"	P	implementation:WriterBuilder
quoting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn quoting(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
r	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    r: &'r ByteRecord,$/;"	m	struct:ByteRecordIter
r_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub r_ifs: Vec<(&'a str, &'b str, &'a str)>,$/;"	m	struct:Parser
r_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub r_ifs: Option<Vec<(&'a str, &'b str)>>,$/;"	m	struct:Arg
r_unless	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub r_unless: Option<Vec<&'a str>>,$/;"	m	struct:Base
range	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn range(&self, i: usize) -> Option<Range<usize>> {$/;"	P	implementation:ByteRecord
range	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn range(&self, i: usize) -> Option<Range<usize>> {$/;"	P	implementation:StringRecord
range	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^mod range {$/;"	n
raw	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn raw(self, raw: bool) -> Self {$/;"	P	implementation:Arg
raw_one_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_one_byte_record() {$/;"	f	module:tests
raw_one_empty_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_one_empty_record() {$/;"	f	module:tests
raw_two_empty_records	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_two_empty_records() {$/;"	f	module:tests
raw_unequal_records_bad	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_unequal_records_bad() {$/;"	f	module:tests
raw_unequal_records_ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_unequal_records_ok() {$/;"	f	module:tests
rdr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rdr: &'r mut Reader<R>,$/;"	m	struct:ByteRecordsIter
rdr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rdr: &'r mut Reader<R>,$/;"	m	struct:DeserializeRecordsIter
rdr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rdr: &'r mut Reader<R>,$/;"	m	struct:StringRecordsIter
rdr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rdr: Reader<R>,$/;"	m	struct:ByteRecordsIntoIter
rdr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rdr: Reader<R>,$/;"	m	struct:DeserializeRecordsIntoIter
rdr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rdr: Reader<R>,$/;"	m	struct:StringRecordsIntoIter
rdr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rdr: io::BufReader<R>,$/;"	m	struct:Reader
read	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub(crate) fn read<R: io::Read>($/;"	P	implementation:StringRecord
read_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_byte_record() {$/;"	f	module:tests
read_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn read_byte_record($/;"	P	implementation:Reader
read_byte_record_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_byte_record_impl($/;"	P	implementation:Reader
read_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn read_record(&mut self, record: &mut StringRecord) -> Result<bool> {$/;"	P	implementation:Reader
read_record_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_headers() {$/;"	f	module:tests
read_record_headers_invalid_utf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_headers_invalid_utf8() {$/;"	f	module:tests
read_record_no_headers_after	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_no_headers_after() {$/;"	f	module:tests
read_record_no_headers_before	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_no_headers_before() {$/;"	f	module:tests
read_record_unequal_continue	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_unequal_continue() {$/;"	f	module:tests
read_record_unequal_fails	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_unequal_fails() {$/;"	f	module:tests
read_record_unequal_ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_unequal_ok() {$/;"	f	module:tests
read_trimed_header_invalid_utf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_trimed_header_invalid_utf8() {$/;"	f	module:tests
read_trimmed_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_trimmed_header() {$/;"	f	module:tests
read_trimmed_records	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_trimmed_records() {$/;"	f	module:tests
read_trimmed_records_and_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_trimmed_records_and_headers() {$/;"	f	module:tests
readable	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn readable(&self) -> &[u8] {$/;"	P	implementation:Buffer
reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^mod reader;$/;"	n
reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader(&self) -> &Reader<R> {$/;"	P	implementation:ByteRecordsIntoIter
reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader(&self) -> &Reader<R> {$/;"	P	implementation:ByteRecordsIter
reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader(&self) -> &Reader<R> {$/;"	P	implementation:DeserializeRecordsIntoIter
reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader(&self) -> &Reader<R> {$/;"	P	implementation:DeserializeRecordsIter
reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader(&self) -> &Reader<R> {$/;"	P	implementation:StringRecordsIntoIter
reader	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader(&self) -> &Reader<R> {$/;"	P	implementation:StringRecordsIter
reader_mut	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader_mut(&mut self) -> &mut Reader<R> {$/;"	P	implementation:ByteRecordsIntoIter
reader_mut	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader_mut(&mut self) -> &mut Reader<R> {$/;"	P	implementation:ByteRecordsIter
reader_mut	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader_mut(&mut self) -> &mut Reader<R> {$/;"	P	implementation:DeserializeRecordsIntoIter
reader_mut	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader_mut(&mut self) -> &mut Reader<R> {$/;"	P	implementation:DeserializeRecordsIter
reader_mut	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader_mut(&mut self) -> &mut Reader<R> {$/;"	P	implementation:StringRecordsIntoIter
reader_mut	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader_mut(&mut self) -> &mut Reader<R> {$/;"	P	implementation:StringRecordsIter
rec	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rec: ByteRecord,$/;"	m	struct:ByteRecordsIntoIter
rec	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rec: ByteRecord,$/;"	m	struct:ByteRecordsIter
rec	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rec: StringRecord,$/;"	m	struct:DeserializeRecordsIntoIter
rec	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rec: StringRecord,$/;"	m	struct:DeserializeRecordsIter
rec	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rec: StringRecord,$/;"	m	struct:StringRecordsIntoIter
rec	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    rec: StringRecord,$/;"	m	struct:StringRecordsIter
record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn record(&self) -> u64 {$/;"	P	implementation:Position
record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    record: u64,$/;"	m	struct:Position
record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    record: ByteRecord,$/;"	m	struct:FromUtf8Error
record_1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn record_1() {$/;"	f	module:tests
record_2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn record_2() {$/;"	f	module:tests
records	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn records(&mut self) -> StringRecordsIter<R> {$/;"	P	implementation:Reader
relevant_type_params	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^        relevant_type_params: HashSet<syn::Ident>,$/;"	m	struct:with_bound::FindTyParams
remote	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn remote(&self) -> Option<&syn::Path> {$/;"	P	implementation:Container
remote	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    remote: Option<syn::Path>,$/;"	m	struct:Container
remove	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn remove(&mut self, arg: &str) {$/;"	P	implementation:ArgMatcher
remove_all	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn remove_all(&mut self, args: &[&str]) {$/;"	P	implementation:ArgMatcher
remove_overrides	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn remove_overrides(&mut self, matcher: &mut ArgMatcher) {$/;"	f
remove_task	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub fn remove_task(&mut self, index: usize) -> Result<String, Box<dyn Error>> {$/;"	P	implementation:TaskList
rename_all_rules	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	P	implementation:Container
rename_all_rules	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	P	implementation:Variant
rename_all_rules	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    rename_all_rules: RenameAllRules,$/;"	m	struct:Container
rename_all_rules	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    rename_all_rules: RenameAllRules,$/;"	m	struct:Variant
rename_by_rules	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	P	implementation:Field
rename_by_rules	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	P	implementation:Variant
rename_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^fn rename_fields() {$/;"	f
rename_task	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub fn rename_task(&mut self, new_task_name: &String) -> Result<String, Box<dyn Error>> {$/;"	P	implementation:Task
rename_variants	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/case.rs	/^fn rename_variants() {$/;"	f
replacement	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/try.rs	/^pub fn replacement() -> TokenStream {$/;"	f
require_delimiter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn require_delimiter(mut self, d: bool) -> Self {$/;"	P	implementation:Arg
require_equals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn require_equals(mut self, r: bool) -> Self {$/;"	P	implementation:Arg
required	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn required(&self) -> Iter<&str> {$/;"	f
required	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub required: Vec<&'a str>,$/;"	m	struct:Parser
required	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn required(self, r: bool) -> Self {$/;"	P	implementation:Arg
required	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn required(mut self, r: bool) -> Self {$/;"	P	implementation:ArgGroup
required	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub required: bool,$/;"	m	struct:ArgGroup
required_if	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn required_if(mut self, arg: &'a str, val: &'b str) -> Self {$/;"	P	implementation:Arg
required_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn required_ifs(mut self, ifs: &[(&'a str, &'b str)]) -> Self {$/;"	P	implementation:Arg
required_unless	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	P	implementation:App
required_unless	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	f
required_unless	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn required_unless(&self) -> Option<&[&'e str]>;$/;"	P	interface:AnyArg
required_unless	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn required_unless(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
required_unless	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	P	implementation:FlagBuilder
required_unless	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	P	implementation:OptBuilder
required_unless	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	P	implementation:PosBuilder
required_unless_all	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn required_unless_all(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
required_unless_one	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn required_unless_one(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	P	implementation:App
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]>;$/;"	P	interface:AnyArg
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn requires(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub requires: Option<Vec<(Option<&'b str>, &'a str)>>,$/;"	m	struct:Base
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	P	implementation:FlagBuilder
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	P	implementation:OptBuilder
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	P	implementation:PosBuilder
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn requires(mut self, n: &'a str) -> Self {$/;"	P	implementation:ArgGroup
requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub requires: Option<Vec<&'a str>>,$/;"	m	struct:ArgGroup
requires_all	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn requires_all(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
requires_all	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn requires_all(mut self, ns: &[&'a str]) -> Self {$/;"	P	implementation:ArgGroup
requires_default	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn requires_default(field: &attr::Field, _variant: Option<&attr::Variant>) -> bool {$/;"	f
requires_if	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn requires_if(mut self, val: &'b str, arg: &'a str) -> Self {$/;"	P	implementation:Arg
requires_ifs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn requires_ifs(mut self, ifs: &[(&'b str, &'a str)]) -> Self {$/;"	P	implementation:Arg
respan_token_stream	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn respan_token_stream(stream: TokenStream, span: Span) -> TokenStream {$/;"	f
respan_token_tree	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn respan_token_tree(mut token: TokenTree, span: Span) -> TokenTree {$/;"	f
run	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^fn run(matches: ArgMatches,task_list: &mut TaskList)->Result<String, Box<dyn Error>>{$/;"	f
s	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub s: Switched<'b>,$/;"	m	struct:Arg
s	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    pub s: Switched<'e>,$/;"	m	struct:FlagBuilder
s	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    pub s: Switched<'e>,$/;"	m	struct:OptBuilder
s	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn s(b: &[u8]) -> &str {$/;"	f	module:tests
sc_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! sc_names {$/;"	M
sdebug	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^    macro_rules! sdebug {$/;"	M	module:debug_macros
sdebugln	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^    macro_rules! sdebugln {$/;"	M	module:debug_macros
seek	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn seek() {$/;"	f	module:tests
seek	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn seek(&mut self, pos: Position) -> Result<()> {$/;"	P	implementation:Reader
seek_headers_after	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn seek_headers_after() {$/;"	f	module:tests
seek_headers_before_after	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn seek_headers_before_after() {$/;"	f	module:tests
seek_headers_no_actual_seek	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn seek_headers_no_actual_seek() {$/;"	f	module:tests
seek_raw	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn seek_raw($/;"	P	implementation:Reader
seeked	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    seeked: bool,$/;"	m	struct:ReaderState
self_var	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    self_var: Ident,$/;"	m	struct:Parameters
sep	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    sep: u8,$/;"	m	struct:OsSplit
seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn seq() {$/;"	f	module:tests
seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    seq: A,$/;"	m	struct:SeqAccessDeserializer
seq_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! seq_impl {$/;"	M
seq_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^macro_rules! seq_impl {$/;"	M
seq_in_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn seq_in_struct() {$/;"	f	module:tests
seq_in_struct_tail	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn seq_in_struct_tail() {$/;"	f	module:tests
ser	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/lib.rs	/^pub mod ser;$/;"	n
ser	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/mod.rs	/^pub mod ser;$/;"	n
ser	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^mod ser;$/;"	n
ser_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Container
ser_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Field
ser_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Variant
ser_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    ser_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Container
ser_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    ser_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Field
ser_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    ser_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Variant
serde_if_integer128	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/integer128.rs	/^macro_rules! serde_if_integer128 {$/;"	M
serde_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn serde_path(&self) -> Cow<syn::Path> {$/;"	P	implementation:Container
serde_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    serde_path: Option<syn::Path>,$/;"	m	struct:Container
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize<S: Serialize>(s: S) -> String {$/;"	f	module:tests
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^pub fn serialize<S: Serialize, W: io::Write>($/;"	f
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn serialize<S: Serialize>(&mut self, record: S) -> Result<()> {$/;"	P	implementation:Writer
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:content::Content
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Arguments
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CStr
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CString
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Duration
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:IpAddr
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv4Addr
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv6Addr
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsStr
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsString
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Path
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PathBuf
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PhantomData
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddr
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV4
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV6
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:String
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SystemTime
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:T
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:str
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	interface:Serialize
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    serialize: RenameRule,$/;"	m	struct:RenameAllRules
serialize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    serialize: String,$/;"	m	struct:Name
serialize	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Task
serialize_adjacently_tagged_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_adjacently_tagged_variant($/;"	f
serialize_body	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_bool(self, v: bool) -> Result<Content, E> {$/;"	f	module:content
serialize_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_bytes(self, value: &[u8]) -> Result<Content, E> {$/;"	f	module:content
serialize_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_bytes(self, _v: &[u8]) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_char(self, v: char) -> Result<Content, E> {$/;"	f	module:content
serialize_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_display_bounded_length	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^macro_rules! serialize_display_bounded_length {$/;"	M
serialize_element	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_element<T: ?Sized + Serialize>($/;"	P	implementation:SeHeader
serialize_element	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_element<T: ?Sized + Serialize>($/;"	P	implementation:SeRecord
serialize_element	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_element	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_element	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeSeq
serialize_element	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTuple
serialize_element	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    fn serialize_element(&self, span: Span) -> TokenStream {$/;"	P	implementation:TupleTrait
serialize_entry	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_entry<K: ?Sized, V: ?Sized>(&mut self, key: &K, value: &V) -> Result<(), E>$/;"	f	module:content
serialize_entry	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_entry	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	P	interface:SerializeMap
serialize_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_enum(params: &Parameters, variants: &[Variant], cattrs: &attr::Container) -> Fragme/;"	f
serialize_err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_err<S: Serialize>(s: S) -> Error {$/;"	f	module:tests
serialize_externally_tagged_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_externally_tagged_variant($/;"	f
serialize_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_f32(self, v: f32) -> Result<Content, E> {$/;"	f	module:content
serialize_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_f64(self, v: f64) -> Result<Content, E> {$/;"	f	module:content
serialize_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_field<T: ?Sized + Serialize>($/;"	P	implementation:SeHeader
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_field<T: ?Sized + Serialize>($/;"	P	implementation:SeRecord
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>($/;"	f	module:content
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), M::Error>$/;"	f	module:content
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStruct
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStructVariant
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleStruct
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleVariant
serialize_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    fn serialize_field(&self, span: Span) -> TokenStream {$/;"	P	implementation:StructTrait
serialize_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_header<S: Serialize>(s: S) -> (bool, String) {$/;"	f	module:tests
serialize_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^pub fn serialize_header<S: Serialize, W: io::Write>($/;"	f
serialize_header_err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_header_err<S: Serialize>(s: S) -> Error {$/;"	f	module:tests
serialize_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_i16(self, v: i16) -> Result<Content, E> {$/;"	f	module:content
serialize_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_i32(self, v: i32) -> Result<Content, E> {$/;"	f	module:content
serialize_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_i64(self, v: i64) -> Result<Content, E> {$/;"	f	module:content
serialize_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_i8(self, v: i8) -> Result<Content, E> {$/;"	f	module:content
serialize_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_internally_tagged_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_internally_tagged_variant($/;"	f
serialize_into	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_into(params: &Parameters, type_into: &syn::Type) -> Fragment {$/;"	f
serialize_key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_key<T: ?Sized + Serialize>($/;"	P	implementation:SeHeader
serialize_key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_key<T: ?Sized + Serialize>($/;"	P	implementation:SeRecord
serialize_key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), E>$/;"	f	module:content
serialize_key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_key	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_map($/;"	P	implementation:SeHeader
serialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_map($/;"	P	implementation:SeRecord
serialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, E> {$/;"	f	module:content
serialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, fmt::Error> {$/;"	P	implementation:Formatter
serialize_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error>;$/;"	P	interface:Serializer
serialize_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn serialize_name(&self) -> String {$/;"	P	implementation:Name
serialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_newtype_struct<T: ?Sized + Serialize>($/;"	P	implementation:SeHeader
serialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_newtype_struct<T: ?Sized + Serialize>($/;"	P	implementation:SeRecord
serialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_newtype_struct<T: ?Sized>($/;"	f	module:content
serialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	P	interface:Serializer
serialize_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_newtype_struct($/;"	f
serialize_newtype_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_newtype_variant<T: ?Sized + Serialize>($/;"	P	implementation:SeHeader
serialize_newtype_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_newtype_variant<T: ?Sized + Serialize>($/;"	P	implementation:SeRecord
serialize_newtype_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_newtype_variant<T: ?Sized>($/;"	f	module:content
serialize_newtype_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	implementation:Formatter
serialize_newtype_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	interface:Serializer
serialize_no_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn serialize_no_headers() {$/;"	f	module:tests
serialize_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_none(self) -> Result<Content, E> {$/;"	f	module:content
serialize_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_none(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_renamed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    serialize_renamed: bool,$/;"	m	struct:Name
serialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_seq($/;"	P	implementation:SeHeader
serialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_seq($/;"	P	implementation:SeRecord
serialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, E> {$/;"	f	module:content
serialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, fmt::Error> {$/;"	P	implementation:Formatter
serialize_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error>;$/;"	P	interface:Serializer
serialize_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_some<T: ?Sized + Serialize>($/;"	P	implementation:SeHeader
serialize_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_some<T: ?Sized + Serialize>($/;"	P	implementation:SeRecord
serialize_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Content, E>$/;"	f	module:content
serialize_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
serialize_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_str(self, value: &str) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_str(self, value: &str) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_str(self, value: &str) -> Result<Content, E> {$/;"	f	module:content
serialize_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_struct($/;"	P	implementation:SeHeader
serialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_struct($/;"	P	implementation:SeRecord
serialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_struct($/;"	f	module:content
serialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_struct($/;"	P	implementation:Formatter
serialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_struct($/;"	P	interface:Serializer
serialize_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_struct(params: &Parameters, fields: &[Field], cattrs: &attr::Container) -> Fragment/;"	f
serialize_struct_as_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_struct_as_map($/;"	f
serialize_struct_as_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_struct_as_struct($/;"	f
serialize_struct_tag_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_struct_tag_field(cattrs: &attr::Container, struct_trait: &StructTrait) -> TokenStre/;"	f
serialize_struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_struct_variant($/;"	P	implementation:SeHeader
serialize_struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_struct_variant($/;"	P	implementation:SeRecord
serialize_struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_struct_variant($/;"	f	module:content
serialize_struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Formatter
serialize_struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_struct_variant($/;"	P	interface:Serializer
serialize_struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_struct_variant<'a>($/;"	f
serialize_struct_variant_with_flatten	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_struct_variant_with_flatten<'a>($/;"	f
serialize_struct_visitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_struct_visitor($/;"	f
serialize_tagged_newtype	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^pub fn serialize_tagged_newtype<S, T>($/;"	f
serialize_transparent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_tuple($/;"	P	implementation:SeHeader
serialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_tuple($/;"	P	implementation:SeRecord
serialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn serialize_tuple() {$/;"	f	module:tests
serialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, E> {$/;"	f	module:content
serialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, fmt::Error> {$/;"	P	implementation:Formatter
serialize_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error>;$/;"	P	interface:Serializer
serialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:SeHeader
serialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:SeRecord
serialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_tuple_struct($/;"	f	module:content
serialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Formatter
serialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_tuple_struct($/;"	P	interface:Serializer
serialize_tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_tuple_struct($/;"	f
serialize_tuple_struct_visitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_tuple_struct_visitor($/;"	f
serialize_tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:SeHeader
serialize_tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:SeRecord
serialize_tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_tuple_variant($/;"	f	module:content
serialize_tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Formatter
serialize_tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_tuple_variant($/;"	P	interface:Serializer
serialize_tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_tuple_variant($/;"	f
serialize_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_u16(self, v: u16) -> Result<Content, E> {$/;"	f	module:content
serialize_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_u32(self, v: u32) -> Result<Content, E> {$/;"	f	module:content
serialize_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_u64(self, v: u64) -> Result<Content, E> {$/;"	f	module:content
serialize_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_u8(self, v: u8) -> Result<Content, E> {$/;"	f	module:content
serialize_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeHeader
serialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:SeRecord
serialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_unit(self) -> Result<Content, E> {$/;"	f	module:content
serialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_unit(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_unit_struct($/;"	P	implementation:SeHeader
serialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_unit_struct($/;"	P	implementation:SeRecord
serialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_unit_struct(self, name: &'static str) -> Result<Content, E> {$/;"	f	module:content
serialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_unit_struct(self, name: &'static str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_unit_struct(cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_unit_variant($/;"	P	implementation:SeHeader
serialize_unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_unit_variant($/;"	P	implementation:SeRecord
serialize_unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_unit_variant($/;"	f	module:content
serialize_unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/fmt.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Formatter
serialize_unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_unit_variant($/;"	P	interface:Serializer
serialize_untagged_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_untagged_variant($/;"	f
serialize_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_value<T: ?Sized + Serialize>($/;"	P	implementation:SeHeader
serialize_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_value<T: ?Sized + Serialize>($/;"	P	implementation:SeRecord
serialize_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn serialize_variant($/;"	f
serialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
serialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Variant
serialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    serialize_with: Option<syn::ExprPath>,$/;"	m	struct:Field
serialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    serialize_with: Option<syn::ExprPath>,$/;"	m	struct:Variant
serialize_with_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn serialize_with_headers() {$/;"	f	module:tests
serializer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^mod serializer;$/;"	n
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn set(&mut self, _: ArgSettings) {$/;"	P	implementation:App
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn set(&mut self, s: AS) {$/;"	f
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn set(&mut self, ArgSettings);$/;"	P	interface:AnyArg
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn set(&mut self, _: ArgSettings) {$/;"	f
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn set(mut self, s: ArgSettings) -> Self {$/;"	P	implementation:Arg
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub fn set(&mut self, s: ArgSettings) {$/;"	P	implementation:Base
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn set(&mut self, s: ArgSettings) {$/;"	P	implementation:FlagBuilder
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn set(&mut self, s: ArgSettings) {$/;"	P	implementation:OptBuilder
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn set(&mut self, s: ArgSettings) {$/;"	P	implementation:PosBuilder
set	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn set<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	P	implementation:Attr
set_byte	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn set_byte(&mut self, byte: u64) -> &mut Position {$/;"	P	implementation:Position
set_byte_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn set_byte_headers(&mut self, headers: ByteRecord) {$/;"	P	implementation:Reader
set_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn set_headers(&mut self, headers: StringRecord) {$/;"	P	implementation:Reader
set_headers_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn set_headers_impl($/;"	P	implementation:Reader
set_if_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn set_if_none(&mut self, value: T) {$/;"	P	implementation:Attr
set_len	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub(crate) fn set_len(&mut self, len: usize) {$/;"	P	implementation:ByteRecord
set_line	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn set_line(&mut self, line: u64) -> &mut Position {$/;"	P	implementation:Position
set_opt	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn set_opt<A: ToTokens>(&mut self, obj: A, value: Option<T>) {$/;"	P	implementation:Attr
set_position	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn set_position(&mut self, pos: Option<Position>) {$/;"	P	implementation:ByteRecord
set_position	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn set_position(&mut self, pos: Option<Position>) {$/;"	P	implementation:StringRecord
set_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn set_record(&mut self, record: u64) -> &mut Position {$/;"	P	implementation:Position
set_term_width	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn set_term_width(mut self, width: usize) -> Self {$/;"	P	implementation:App
set_true	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    fn set_true<A: ToTokens>(&mut self, obj: A) {$/;"	P	implementation:BoolAttr
setb	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn setb(&mut self, s: ArgSettings) {$/;"	P	implementation:Arg
setting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:App
settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn settings(mut self, settings: &[AppSettings]) -> Self {$/;"	P	implementation:App
settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^mod settings;$/;"	n
settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    settings: AppFlags,$/;"	m	struct:Parser
settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub settings: ArgFlags,$/;"	m	struct:Base
settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^pub mod settings;$/;"	n
shell	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^mod shell;$/;"	n
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn short<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	P	implementation:Help
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn short(&self) -> Option<char> {$/;"	P	implementation:App
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn short(&self) -> Option<char> {$/;"	f
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn short(&self) -> Option<char>;$/;"	P	interface:AnyArg
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn short<S: AsRef<str>>(mut self, s: S) -> Self {$/;"	P	implementation:Arg
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn short(&self) -> Option<char> {$/;"	P	implementation:FlagBuilder
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn short(&self) -> Option<char> {$/;"	P	implementation:OptBuilder
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn short(&self) -> Option<char> {$/;"	P	implementation:PosBuilder
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^    pub short: Option<char>,$/;"	m	struct:Switched
short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn short(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
short_or_long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn short_or_long(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
shorts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! shorts {$/;"	M
should_show_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^fn should_show_arg(use_long: bool, arg: &ArgWithOrder) -> bool {$/;"	f
should_trim_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn should_trim_fields(&self) -> bool {$/;"	P	implementation:Trim
should_trim_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn should_trim_headers(&self) -> bool {$/;"	P	implementation:Trim
simple_hex_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn simple_hex_seq() {$/;"	f	module:tests
simple_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn simple_seq() {$/;"	f	module:tests
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Indices
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:OsValues
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Values
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:ByteRecordIter
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:StringRecordIter
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:MapAccess
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:SeqAccess
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn size_hint(&self) -> Option<usize> {$/;"	f	module:content
size_hint	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^pub mod size_hint {$/;"	n
skip_deserializing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	P	implementation:Field
skip_deserializing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	P	implementation:Variant
skip_deserializing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    skip_deserializing: bool,$/;"	m	struct:Field
skip_deserializing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    skip_deserializing: bool,$/;"	m	struct:Variant
skip_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStruct
skip_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStructVariant
skip_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    fn skip_field(&self, span: Span) -> Option<TokenStream> {$/;"	P	implementation:StructTrait
skip_serializing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	P	implementation:Field
skip_serializing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	P	implementation:Variant
skip_serializing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    skip_serializing: bool,$/;"	m	struct:Field
skip_serializing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    skip_serializing: bool,$/;"	m	struct:Variant
skip_serializing_if	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn skip_serializing_if(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
skip_serializing_if	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    skip_serializing_if: Option<syn::ExprPath>,$/;"	m	struct:Field
source	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:Error
source	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:FromUtf8Error
source	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:IntoInnerError
source	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/std_error.rs	/^    fn source(&self) -> Option<&(Error + 'static)> {$/;"	P	interface:Error
spanned_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn spanned_tokens(s: &syn::LitStr) -> parse::Result<TokenStream> {$/;"	f
spec_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn spec_vals(&self, a: &ArgWithDisplay) -> String {$/;"	P	implementation:Help
split	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn split(&self, b: u8) -> OsSplit {$/;"	P	implementation:OsStr
split	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn split(&self, b: u8) -> OsSplit;$/;"	P	interface:OsStrExt2
split	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn split(self) -> (A, B) {$/;"	P	implementation:private::B
split	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn split(self) -> (Self::First, Self::Second);$/;"	P	interface:private::Pair
split_at	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn split_at(&self, i: usize) -> (&OsStr, &OsStr) {$/;"	P	implementation:OsStr
split_at	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn split_at(&self, i: usize) -> (&OsStr, &OsStr);$/;"	P	interface:OsStrExt2
split_at_byte	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn split_at_byte(&self, b: u8) -> (&OsStr, &OsStr);$/;"	P	interface:OsStrExt2
split_at_byte	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn split_at_byte(&self, byte: u8) -> (&OsStr, &OsStr) {$/;"	P	implementation:OsStr
split_with_de_lifetime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn split_with_de_lifetime($/;"	f
start	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    start: usize,$/;"	m	struct:UsageParser
starts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^        fn starts(h: &str, n: &OsStr) -> bool {$/;"	f	function:possible_subcommand
starts_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn starts_with(&self, s: &[u8]) -> bool {$/;"	P	implementation:OsStr
starts_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn starts_with(&self, s: &[u8]) -> bool;$/;"	P	interface:OsStrExt2
state	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    state: ReaderState,$/;"	m	struct:Reader
state	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    state: HeaderState,$/;"	m	struct:SeHeader
state	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    state: WriterState,$/;"	m	struct:Writer
std_error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/lib.rs	/^mod std_error;$/;"	n
stop_at	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    fn stop_at<F>(&mut self, f: F)$/;"	P	implementation:UsageParser
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^const TAB: &'static str = "    ";$/;"	v
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^const INTERNAL_ERROR_MSG: &'static str = "Fatal internal error. Please consider filing a bug \\$/;"	v
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^const INVALID_UTF8: &'static str = "unexpected invalid UTF-8 code point";$/;"	v
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/strext.rs	/^impl _StrExt for str {$/;"	c
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn str() {$/;"	f	module:tests
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs", "nanos"];$/;"	v	method:Duration::deserialize
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs_since_epoch", "nanos_since_epoch"];$/;"	v	method:SystemTime::deserialize
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Ok", "Err"];$/;"	v	function:deserialize
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Unbounded", "Included", "Excluded"];$/;"	v	function:deserialize
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    pub const FIELDS: &'static [&'static str] = &["start", "end"];$/;"	v	module:range
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a str {$/;"	c
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^impl<'a> Expected for &'a str {$/;"	c
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for &'a str$/;"	c
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a str$/;"	c
str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^impl Serialize for str {$/;"	c
str_width	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^fn str_width(s: &str) -> usize {$/;"	f
strext	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod strext;$/;"	n
string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/export.rs	/^mod string {$/;"	n
string_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^mod string_record;$/;"	n
string_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    string_record: result::Result<StringRecord, Utf8Error>,$/;"	m	struct:Headers
struct_from_ast	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^fn struct_from_ast<'a>($/;"	f
struct_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers() {$/;"	f	module:tests
struct_headers_inside_nested_tuple_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_nested_tuple_seq() {$/;"	f	module:tests
struct_headers_inside_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_seq() {$/;"	f	module:tests
struct_headers_inside_tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_tuple() {$/;"	f	module:tests
struct_headers_inside_tuple_scalar_after	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_tuple_scalar_after() {$/;"	f	module:tests
struct_headers_inside_tuple_scalar_before	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_tuple_scalar_before() {$/;"	f	module:tests
struct_headers_nested	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_nested() {$/;"	f	module:tests
struct_headers_nested_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_nested_seq() {$/;"	f	module:tests
struct_newtype	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_newtype() {$/;"	f	module:tests
struct_no_headers	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_no_headers() {$/;"	f	module:tests
struct_pattern	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/pretend.rs	/^fn struct_pattern(fields: &[Field]) -> TokenStream {$/;"	f
struct_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_unit() {$/;"	f	module:tests
struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn struct_variant<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn struct_variant<V>($/;"	P	interface:VariantAccess
struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn struct_variant<V>($/;"	f	module:private
struct_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn struct_variant<V>($/;"	f	module:content
style	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub style: Style,$/;"	m	struct:Variant
subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn subcommand(mut self, subcmd: App<'a, 'b>) -> Self {$/;"	P	implementation:App
subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn subcommand(&mut self, sc: SubCommand<'a>) {$/;"	P	implementation:ArgMatcher
subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn subcommand(&self) -> (&str, Option<&ArgMatches<'a>>) {$/;"	P	implementation:ArgMatches
subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub subcommand: Option<Box<SubCommand<'a>>>,$/;"	m	struct:ArgMatches
subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/mod.rs	/^mod subcommand;$/;"	n
subcommand_details	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^    fn subcommand_details(&self) -> String {$/;"	P	implementation:BashGen
subcommand_details	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/zsh.rs	/^fn subcommand_details(p: &Parser) -> String {$/;"	f
subcommand_matches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn subcommand_matches<S: AsRef<str>>(&self, name: S) -> Option<&ArgMatches<'a>> {$/;"	P	implementation:ArgMatches
subcommand_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	P	implementation:ArgMatcher
subcommand_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	P	implementation:ArgMatches
subcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn subcommands<I>(mut self, subcmds: I) -> Self$/;"	P	implementation:App
subcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn subcommands(&self) -> Iter<App> {$/;"	f
subcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub subcommands: Vec<App<'a, 'b>>,$/;"	m	struct:Parser
subcommands_of	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^pub fn subcommands_of(p: &Parser) -> Vec<(String, String)> {$/;"	f
subcommands_of	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/zsh.rs	/^fn subcommands_of(p: &Parser) -> String {$/;"	f
suffix_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/suggestions.rs	/^    fn suffix_enum() {$/;"	f	module:test
suffix_long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/suggestions.rs	/^    fn suffix_long() {$/;"	f	module:test
suggestions	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod suggestions;$/;"	n
switched	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/mod.rs	/^mod switched;$/;"	n
symbol	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^mod symbol;$/;"	n
syn_error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ctxt.rs	/^    pub fn syn_error(&self, err: syn::Error) {$/;"	P	implementation:Ctxt
tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        pub tag: T,$/;"	m	struct:content::TaggedContent
tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    tag: &'static str,$/;"	m	struct:TaggedSerializer
tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn tag(&self) -> &TagType {$/;"	P	implementation:Container
tag	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    tag: TagType,$/;"	m	struct:Container
tag_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        tag_name: &'static str,$/;"	m	struct:content::TaggedContentVisitor
takes_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn takes_value(&self) -> bool {$/;"	P	implementation:App
takes_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn takes_value(&self) -> bool {$/;"	f
takes_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn takes_value(&self) -> bool;$/;"	P	interface:AnyArg
takes_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn takes_value(self, tv: bool) -> Self {$/;"	P	implementation:Arg
takes_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn takes_value(&self) -> bool {$/;"	P	implementation:FlagBuilder
takes_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn takes_value(&self) -> bool {$/;"	P	implementation:OptBuilder
takes_value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn takes_value(&self) -> bool {$/;"	P	implementation:PosBuilder
task_completion_fail_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_completion_fail_test() -> Result<(), Box<dyn Error>> {$/;"	f	module:tests::task_tests
task_completion_successful_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_completion_successful_test() -> Result<(), Box<dyn Error>> {$/;"	f	module:tests::task_tests
task_creation_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_creation_test() -> Result<(), Box<dyn Error>> {$/;"	f	module:tests::task_list_tests
task_list_tests	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    mod task_list_tests {$/;"	n	module:tests
task_print_fail_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_print_fail_test() {$/;"	f	module:tests::task_list_tests
task_print_successful_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_print_successful_test() -> Result<(), Box<dyn Error>> {$/;"	f	module:tests::task_list_tests
task_removal_fail_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_removal_fail_test() {$/;"	f	module:tests::task_list_tests
task_removal_successful_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_removal_successful_test() {$/;"	f	module:tests::task_list_tests
task_rename_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_rename_test() -> Result<(), Box<dyn Error>> {$/;"	f	module:tests::task_tests
task_reprioritize_duplicate_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_reprioritize_duplicate_test() -> Result<(), Box<dyn Error>> {$/;"	f	module:tests::task_tests
task_reprioritize_failure_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_reprioritize_failure_test() -> Result<(), Box<dyn Error>> {$/;"	f	module:tests::task_tests
task_successful_reprioritize_test	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^        fn task_successful_reprioritize_test() -> Result<(), Box<dyn Error>> {$/;"	f	module:tests::task_tests
task_tests	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    mod task_tests {$/;"	n	module:tests
tasks	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^    pub tasks: Vec<Task>,$/;"	m	struct:TaskList
template	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub template: Option<&'b str>,$/;"	m	struct:AppMeta
template	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn template<S: Into<&'b str>>(mut self, s: S) -> Self {$/;"	P	implementation:App
term_size	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^mod term_size {$/;"	n
term_w	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    term_w: usize,$/;"	m	struct:Help
term_w	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub term_w: Option<usize>,$/;"	m	struct:AppMeta
terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub terminator: Option<&'b str>,$/;"	m	struct:Valued
terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn terminator(&mut self, term: Terminator) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn terminator(&mut self, term: Terminator) -> &mut WriterBuilder {$/;"	P	implementation:WriterBuilder
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^mod test {$/;"	n
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^mod test {$/;"	n
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^mod test {$/;"	n
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^mod test {$/;"	n
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^mod test {$/;"	n
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^mod test {$/;"	n
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/settings.rs	/^mod test {$/;"	n
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^mod test {$/;"	n
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/suggestions.rs	/^mod test {$/;"	n
test	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^mod test {$/;"	n
test_debug	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    fn test_debug() {$/;"	f	module:test
test_default_indices	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn test_default_indices() {$/;"	f	module:tests
test_default_indices_with_shorter_lifetime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn test_default_indices_with_shorter_lifetime() {$/;"	f	module:tests
test_default_osvalues	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn test_default_osvalues() {$/;"	f	module:tests
test_default_osvalues_with_shorter_lifetime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn test_default_osvalues_with_shorter_lifetime() {$/;"	f	module:tests
test_default_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn test_default_values() {$/;"	f	module:tests
test_default_values_with_shorter_lifetime	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    fn test_default_values_with_shorter_lifetime() {$/;"	f	module:tests
test_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    fn test_from() {$/;"	f	module:test
test_windows_osstr_starts_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^fn test_windows_osstr_starts_with() {$/;"	f
test_yaml	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    fn test_yaml() {$/;"	f	module:test
tests	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^mod tests {$/;"	n
tests	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^mod tests {$/;"	n
tests	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^mod tests {$/;"	n
tests	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^mod tests {$/;"	n
tests	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^mod tests {$/;"	n
tests	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^mod tests {$/;"	n
tests	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^mod tests {$/;"	n
tests	/home/darrion/Projects/ClearHeadToDo/src/lib.rs	/^mod tests {$/;"	n
tests	/home/darrion/Projects/ClearHeadToDo/src/main.rs	/^mod tests {$/;"	n
this	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    this: syn::Path,$/;"	m	struct:Parameters
this	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    this: syn::Path,$/;"	m	struct:Parameters
to_compile_errors	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^fn to_compile_errors(errors: Vec<syn::Error>) -> proc_macro2::TokenStream {$/;"	f
to_core	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn to_core(self) -> csv_core::QuoteStyle {$/;"	P	implementation:QuoteStyle
to_core	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn to_core(self) -> csv_core::Terminator {$/;"	P	implementation:Terminator
to_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            fn to_str(self) -> String {$/;"	P	implementation:tests::full_buffer_should_not_flush_underlying::MarkWriteAndFlush
to_str_slice	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^            fn to_str_slice(o: &OsString) -> &str {$/;"	f	method:ArgMatches::values_of
to_str_slice	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^        fn to_str_slice(_: &OsString) -> &OsStr {$/;"	f	method:OsValues::default
to_str_slice	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^        fn to_str_slice(_: &OsString) -> &str {$/;"	f	method:Values::default
to_str_slice	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^        fn to_str_slice(o: &OsString) -> &OsStr {$/;"	f	method:ArgMatches::values_of_os
to_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:DeImplGenerics
to_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:DeTypeGenerics
to_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:InPlaceImplGenerics
to_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:InPlaceTypeGenerics
to_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	P	implementation:Expr
to_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	P	implementation:Match
to_tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	P	implementation:Stmts
to_usize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^            fn to_usize(i: &usize) -> usize {$/;"	f	method:ArgMatches::indices_of
to_usize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^        fn to_usize(_: &usize) -> usize {$/;"	f	method:Indices::default
token	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^fn token(b: u8) -> bool {$/;"	f
tokens	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    tokens: TokenStream,$/;"	m	struct:Attr
too_few_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn too_few_values<U>($/;"	P	implementation:Error
too_many_chars	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn too_many_chars() {$/;"	f	module:tests
too_many_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn too_many_values<V, U>(val: V, arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
transparent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	P	implementation:Container
transparent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	P	implementation:Field
transparent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    transparent: bool,$/;"	m	struct:Container
transparent	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    transparent: bool,$/;"	m	struct:Field
trim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn trim(&mut self) {$/;"	P	implementation:ByteRecord
trim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn trim(&mut self, trim: Trim) -> &mut ReaderBuilder {$/;"	P	implementation:ReaderBuilder
trim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    trim: Trim,$/;"	m	struct:ReaderBuilder
trim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    trim: Trim,$/;"	m	struct:ReaderState
trim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn trim(&mut self) {$/;"	P	implementation:StringRecord
trim_back	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_back() {$/;"	f	module:tests
trim_back	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_back() {$/;"	f	module:tests
trim_both	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_both() {$/;"	f	module:tests
trim_both	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_both() {$/;"	f	module:tests
trim_does_not_panic_on_empty_records_1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_does_not_panic_on_empty_records_1() {$/;"	f	module:tests
trim_does_not_panic_on_empty_records_1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_does_not_panic_on_empty_records_1() {$/;"	f	module:tests
trim_does_not_panic_on_empty_records_2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_does_not_panic_on_empty_records_2() {$/;"	f	module:tests
trim_does_not_panic_on_empty_records_2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_does_not_panic_on_empty_records_2() {$/;"	f	module:tests
trim_does_not_panic_on_empty_records_3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_does_not_panic_on_empty_records_3() {$/;"	f	module:tests
trim_does_not_panic_on_empty_records_3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_does_not_panic_on_empty_records_3() {$/;"	f	module:tests
trim_front	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_front() {$/;"	f	module:tests
trim_front	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_front() {$/;"	f	module:tests
trim_left_matches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn trim_left_matches(&self, b: u8) -> &OsStr;$/;"	P	interface:OsStrExt2
trim_left_matches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    fn trim_left_matches(&self, byte: u8) -> &OsStr {$/;"	P	implementation:OsStr
trim_whitespace_only	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_whitespace_only() {$/;"	f	module:tests
trim_whitespace_only	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_whitespace_only() {$/;"	f	module:tests
truncate	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn truncate(&mut self, n: usize) {$/;"	P	implementation:ByteRecord
truncate	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn truncate(&mut self, n: usize) {$/;"	P	implementation:StringRecord
try	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/lib.rs	/^mod try;$/;"	n
try_float	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_float(s: &str) -> Option<f64> {$/;"	f
try_float_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_float_bytes(s: &[u8]) -> Option<f64> {$/;"	f
try_from_argmatches	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^        fn try_from_argmatches<'a>(matches: clap::ArgMatches<'a>) -> Result<Self, clap::Error>;$/;"	P	interface:derive::FromArgMatches
try_negative_integer64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_negative_integer64(s: &str) -> Option<i64> {$/;"	f
try_negative_integer64_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_negative_integer64_bytes(s: &[u8]) -> Option<i64> {$/;"	f
try_parse	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^        fn try_parse() -> Result<Self, clap::Error> {$/;"	P	interface:derive::ClapApp
try_parse_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^        fn try_parse_from<I, T>(argv: I) -> Result<Self, clap::Error>$/;"	P	interface:derive::ClapApp
try_positive_integer64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_positive_integer64(s: &str) -> Option<u64> {$/;"	f
try_positive_integer64_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_positive_integer64_bytes(s: &[u8]) -> Option<u64> {$/;"	f
tuple	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn tuple() {$/;"	f	module:tests
tuple_impls	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_impls	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn tuple_struct() {$/;"	f	module:tests
tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn tuple_variant<V: Visitor<'de>>($/;"	P	implementation:DeRecordWrap
tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn tuple_variant() {$/;"	f	module:tests
tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:VariantAccess
tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn tuple_variant<V>(mut self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
tutorial	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub mod tutorial;$/;"	n
two_empty_records	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn two_empty_records() {$/;"	f	module:tests
two_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn two_fields() {$/;"	f	module:tests
two_fields_too_few	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn two_fields_too_few() {$/;"	f	module:tests
two_fields_too_many	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn two_fields_too_many() {$/;"	f	module:tests
ty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/ast.rs	/^    pub ty: &'a syn::Type,$/;"	m	struct:Field
type_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn type_from(&self) -> Option<&syn::Type> {$/;"	P	implementation:Container
type_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    type_from: Option<syn::Type>,$/;"	m	struct:Container
type_ident	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    type_ident: &'static str,$/;"	m	struct:TaggedSerializer
type_into	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn type_into(&self) -> Option<&syn::Type> {$/;"	P	implementation:Container
type_into	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    type_into: Option<syn::Type>,$/;"	m	struct:Container
type_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
type_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
type_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^    fn type_name(&self) -> String {$/;"	P	implementation:Parameters
type_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^    fn type_name(&self) -> String {$/;"	P	implementation:Parameters
type_of_item	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^fn type_of_item(cont: &Container) -> syn::Type {$/;"	f
type_try_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    pub fn type_try_from(&self) -> Option<&syn::Type> {$/;"	P	implementation:Container
type_try_from	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    type_try_from: Option<syn::Type>,$/;"	m	struct:Container
u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for u32$/;"	c
u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for u32$/;"	c
u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a [u8] {$/;"	c
u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a [u8]$/;"	c
uint_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/from_primitive.rs	/^macro_rules! uint_to {$/;"	M
unequal_records_bad	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn unequal_records_bad() {$/;"	f	module:tests
unequal_records_ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn unequal_records_ok() {$/;"	f	module:tests
unexpected	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn unexpected(&self) -> Unexpected {$/;"	P	implementation:content::Content
unexpected_multiple_usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn unexpected_multiple_usage<U>(arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
ungroup	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/mod.rs	/^pub fn ungroup(mut ty: &Type) -> &Type {$/;"	f
unified_ord	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/switched.rs	/^    pub unified_ord: usize,$/;"	m	struct:Switched
unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn unit() {$/;"	f	module:tests
unit_only	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    pub fn unit_only<T, E>(t: T) -> (T, UnitOnly<E>) {$/;"	f	module:private
unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn unit_variant(self) -> Result<(), Self::Error> {$/;"	P	implementation:DeRecordWrap
unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn unit_variant(self) -> Result<(), Self::Error>;$/;"	P	interface:VariantAccess
unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn unit_variant(mut self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn unit_variant(self) -> Result<(), E> {$/;"	f	module:content
unknown_argument	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn unknown_argument<A, U>(arg: A, did_you_mean: &str, usage: U, color: ColorWhen) -> Sel/;"	P	implementation:Error
unraw	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/dummy.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unraw	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unrecognized_subcommand	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn unrecognized_subcommand<S, N>(subcmd: S, name: N, color: ColorWhen) -> Self$/;"	P	implementation:Error
unset	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn unset(&mut self, s: AS) {$/;"	f
unset	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn unset(mut self, s: ArgSettings) -> Self {$/;"	P	implementation:Arg
unset	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/base.rs	/^    pub fn unset(&mut self, s: ArgSettings) {$/;"	P	implementation:Base
unset_setting	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn unset_setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:App
unset_settings	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn unset_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	P	implementation:App
unsetb	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn unsetb(&mut self, s: ArgSettings) {$/;"	P	implementation:Arg
usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub usage: Option<String>,$/;"	m	struct:AppMeta
usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn usage<S: Into<&'b str>>(mut self, usage: S) -> Self {$/;"	P	implementation:App
usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^mod usage;$/;"	n
usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matcher.rs	/^    pub fn usage(&mut self, usage: String) {$/;"	P	implementation:ArgMatcher
usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn usage(&self) -> &str {$/;"	P	implementation:ArgMatches
usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub usage: Option<String>,$/;"	m	struct:ArgMatches
usage	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/usage_parser.rs	/^    usage: &'a str,$/;"	m	struct:UsageParser
usage_parser	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/lib.rs	/^mod usage_parser;$/;"	n
usage_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub usage_str: Option<&'b str>,$/;"	m	struct:AppMeta
use_delimiter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn use_delimiter(mut self, d: bool) -> Self {$/;"	P	implementation:Arg
use_long	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    use_long: bool,$/;"	m	struct:Help
use_long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    fn use_long_help(&self) -> bool {$/;"	f
use_stderr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn use_stderr(&self) -> bool {$/;"	P	implementation:Error
use_stderr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    pub use_stderr: bool,$/;"	m	struct:ColorizerOption
utf8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^mod utf8;$/;"	n
utf8_clear_ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_clear_ok() {$/;"	f	module:tests
utf8_error	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn utf8_error(&self) -> &Utf8Error {$/;"	P	implementation:FromUtf8Error
utf8_error_1	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_1() {$/;"	f	module:tests
utf8_error_2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_2() {$/;"	f	module:tests
utf8_error_3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_3() {$/;"	f	module:tests
utf8_error_4	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_4() {$/;"	f	module:tests
utf8_error_5	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_5() {$/;"	f	module:tests
utf8_error_6	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_6() {$/;"	f	module:tests
v	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub v: Valued<'a, 'b>,$/;"	m	struct:Arg
v	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    pub v: Valued<'n, 'e>,$/;"	m	struct:OptBuilder
v	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    pub v: Valued<'n, 'e>,$/;"	m	struct:PosBuilder
val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn val<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> Result<String, io::Error> {$/;"	P	implementation:Help
val	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^    val: &'a [u8],$/;"	m	struct:OsSplit
val_delim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	P	implementation:App
val_delim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	f
val_delim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn val_delim(&self) -> Option<char>;$/;"	P	interface:AnyArg
val_delim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	P	implementation:FlagBuilder
val_delim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	P	implementation:OptBuilder
val_delim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	P	implementation:PosBuilder
val_delim	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub val_delim: Option<char>,$/;"	m	struct:Valued
val_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	P	implementation:App
val_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	f
val_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>>;$/;"	P	interface:AnyArg
val_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	P	implementation:FlagBuilder
val_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	P	implementation:OptBuilder
val_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	P	implementation:PosBuilder
val_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub val_names: Option<VecMap<&'b str>>,$/;"	m	struct:Valued
val_terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	P	implementation:App
val_terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	f
val_terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn val_terminator(&self) -> Option<&'e str>;$/;"	P	interface:AnyArg
val_terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	P	implementation:FlagBuilder
val_terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	P	implementation:OptBuilder
val_terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	P	implementation:PosBuilder
valid_up_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn valid_up_to(&self) -> usize {$/;"	P	implementation:Utf8Error
valid_up_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    valid_up_to: usize,$/;"	m	struct:Utf8Error
validate	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    pub fn validate($/;"	P	implementation:Validator
validate	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub(crate) fn validate(&self) -> result::Result<(), Utf8Error> {$/;"	P	implementation:ByteRecord
validate_arg_conflicts	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn validate_arg_conflicts(&self, a: &AnyArg, matcher: &ArgMatcher) -> Option<bool> {$/;"	P	implementation:Validator
validate_arg_num_occurs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn validate_arg_num_occurs<A>($/;"	P	implementation:Validator
validate_arg_num_vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn validate_arg_num_vals<A>($/;"	P	implementation:Validator
validate_arg_requires	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn validate_arg_requires<A>($/;"	P	implementation:Validator
validate_arg_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn validate_arg_values<A>($/;"	P	implementation:Validator
validate_blacklist	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn validate_blacklist(&self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_matched_args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn validate_matched_args(&self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_required	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn validate_required(&mut self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_required_unless	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/validator.rs	/^    fn validate_required_unless(&self, a: &AnyArg, matcher: &ArgMatcher) -> Option<bool> {$/;"	P	implementation:Validator
validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	P	implementation:App
validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^mod validator;$/;"	n
validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>> {$/;"	f
validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>>;$/;"	P	interface:AnyArg
validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn validator<F>(mut self, f: F) -> Self$/;"	P	implementation:Arg
validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	P	implementation:FlagBuilder
validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	P	implementation:OptBuilder
validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	P	implementation:PosBuilder
validator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub validator: Option<Rc<Fn(String) -> Result<(), String>>>,$/;"	m	struct:Valued
validator_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	P	implementation:App
validator_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>> {$/;"	f
validator_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/any_arg.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>>;$/;"	P	interface:AnyArg
validator_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn validator_os<F>(mut self, f: F) -> Self$/;"	P	implementation:Arg
validator_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/flag.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	P	implementation:FlagBuilder
validator_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/option.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	P	implementation:OptBuilder
validator_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/positional.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	P	implementation:PosBuilder
validator_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/valued.rs	/^    pub validator_os: Option<Rc<Fn(&OsStr) -> Result<(), OsString>>>,$/;"	m	struct:Valued
vals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/matched_arg.rs	/^    pub vals: Vec<OsString>,$/;"	m	struct:MatchedArg
vals_for	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/bash.rs	/^    fn vals_for(&self, o: &OptBuilder) -> String {$/;"	P	implementation:BashGen
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            value: i32,$/;"	m	struct:tests::struct_headers_inside_nested_tuple_seq::Bar
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            value: i32,$/;"	m	struct:tests::struct_headers_inside_tuple::Bar
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            value: i32,$/;"	m	struct:tests::struct_headers_nested::Nested
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^pub mod value;$/;"	n
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    value: &'de [u8],$/;"	m	struct:BorrowedBytesDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    value: &'de str,$/;"	m	struct:BorrowedStrDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    value: Cow<'a, str>,$/;"	m	struct:CowStrDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    value: Option<Second<I::Item>>,$/;"	m	struct:MapDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    value: String,$/;"	m	struct:StringDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    value: u32,$/;"	m	struct:U32Deserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::EnumRefDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::MapRefDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::VariantRefDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::EnumDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::MapDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::VariantDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        value: PhantomData<Content<'de>>,$/;"	m	struct:content::ContentVisitor
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        value: PhantomData<TagOrContent<'de>>,$/;"	m	struct:content::TagOrContentVisitor
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        value: PhantomData<TaggedContent<'de, T>>,$/;"	m	struct:content::TaggedContentVisitor
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    value: &'a [u8],$/;"	m	struct:BytesDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    value: Option<T>,$/;"	m	struct:Attr
value_delimiter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn value_delimiter(mut self, d: &str) -> Self {$/;"	P	implementation:Arg
value_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn value_name(mut self, name: &'b str) -> Self {$/;"	P	implementation:Arg
value_names	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn value_names(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:Arg
value_of	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn value_of<S: AsRef<str>>(&self, name: S) -> Option<&str> {$/;"	P	implementation:ArgMatches
value_of_lossy	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn value_of_lossy<S: AsRef<str>>(&'a self, name: S) -> Option<Cow<'a, str>> {$/;"	P	implementation:ArgMatches
value_of_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn value_of_os<S: AsRef<str>>(&self, name: S) -> Option<&OsStr> {$/;"	P	implementation:ArgMatches
value_t	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! value_t {$/;"	M
value_t_or_exit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! value_t_or_exit {$/;"	M
value_terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn value_terminator(mut self, term: &'b str) -> Self {$/;"	P	implementation:Arg
value_validation	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn value_validation(arg: Option<&AnyArg>, err: String, color: ColorWhen) -> Self {$/;"	P	implementation:Error
value_validation_auto	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn value_validation_auto(err: String) -> Self {$/;"	P	implementation:Error
valued	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_builder/mod.rs	/^mod valued;$/;"	n
values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^        pub fn values(&self) -> Values<V> {$/;"	P	implementation:vec_map::VecMap
values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            values: Vec<i32>,$/;"	m	struct:tests::struct_headers_nested_seq::Foo
values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/internals/attr.rs	/^    values: Vec<T>,$/;"	m	struct:VecAttr
values_of	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn values_of<S: AsRef<str>>(&'a self, name: S) -> Option<Values<'a>> {$/;"	P	implementation:ArgMatches
values_of_lossy	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn values_of_lossy<S: AsRef<str>>(&'a self, name: S) -> Option<Vec<String>> {$/;"	P	implementation:ArgMatches
values_of_os	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg_matches.rs	/^    pub fn values_of_os<S: AsRef<str>>(&'a self, name: S) -> Option<OsValues<'a>> {$/;"	P	implementation:ArgMatches
values_t	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! values_t {$/;"	M
values_t_or_exit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! values_t_or_exit {$/;"	M
variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn variant<V>(self) -> Result<(V, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        variant: &'a Content<'de>,$/;"	m	struct:content::EnumRefDeserializer
variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        variant: Content<'de>,$/;"	m	struct:content::EnumDeserializer
variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeStructVariant
variant	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeTupleVariant
variant_ident	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    variant_ident: &'static str,$/;"	m	struct:TaggedSerializer
variant_identifier	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! variant_identifier {$/;"	M
variant_index	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeStructVariant
variant_index	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeTupleVariant
variant_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
variant_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
variant_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/ser.rs	/^    variant_name: &'static str,$/;"	m	struct:TaggedSerializer
variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn variant_seed<V: DeserializeSeed<'de>>($/;"	P	implementation:DeRecordWrap
variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn variant_seed<T>(mut self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), E>$/;"	f	module:content
variant_seed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f	module:content
variants	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/shell.rs	/^    pub fn variants() -> [&'static str; 5] {$/;"	P	implementation:Shell
vec_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/map.rs	/^mod vec_map {$/;"	n
vec_or_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^        macro_rules! vec_or_str {$/;"	M	method:App::from
verify_positionals	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn verify_positionals(&self) -> bool {$/;"	f
version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub version: Option<&'b str>,$/;"	m	struct:AppMeta
version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn version<S: Into<&'b str>>(mut self, ver: S) -> Self {$/;"	P	implementation:App
version_message	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn version_message<S: Into<&'a str>>(mut self, s: S) -> Self {$/;"	P	implementation:App
version_message	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub version_message: Option<&'a str>,$/;"	m	struct:Parser
version_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn version_short<S: AsRef<str>>(mut self, s: S) -> Self {$/;"	P	implementation:App
version_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn version_short(&mut self, s: &str) {$/;"	f
version_short	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    version_short: Option<char>,$/;"	m	struct:Parser
visible_alias	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn visible_alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	P	implementation:App
visible_alias	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn visible_alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	P	implementation:Arg
visible_aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn visible_aliases(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:App
visible_aliases	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn visible_aliases(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:Arg
visit_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_bool<E>(self, x: bool) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	implementation:BoolVisitor
visit_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_borrowed_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'de [u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_borrowed_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_byte_buf	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_bytes<E>(self, bytes: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bytes	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_char	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_content_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn visit_content_map<'de, V, E>($/;"	f	module:content
visit_content_map_ref	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn visit_content_map_ref<'a, 'de, V, E>($/;"	f	module:content
visit_content_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn visit_content_seq<'de, V, E>(content: Vec<Content<'de>>, visitor: V) -> Result<V::Value, /;"	f	module:content
visit_content_seq_ref	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^    fn visit_content_seq_ref<'a, 'de, V, E>($/;"	f	module:content
visit_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:OsStringVisitor
visit_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_enum<V>(self, _visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_enum	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_enum<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_f32<E>(self, v: f32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_f64<E>(self, x: f64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_f64<E>(self, v: f64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^        fn visit_field(&mut self, field: &'ast syn::Field) {$/;"	P	implementation:with_bound::FindTyParams
visit_float_method	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! visit_float_method {$/;"	M
visit_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_i16<E>(self, v: i16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_i32<E>(self, v: i32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_i64<E>(self, x: i64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_i64<E>(self, v: i64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_i8<E>(self, v: i8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_integer_method	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^macro_rules! visit_integer_method {$/;"	M
visit_macro	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^        fn visit_macro(&mut self, _mac: &'ast syn::Macro) {}$/;"	P	implementation:with_bound::FindTyParams
visit_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_map<M>(self, mut map: M) -> Result<Self::Value, M::Error>$/;"	f	module:content
visit_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_map	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_map<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_newtype_struct	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_none<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_none	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_path	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^        fn visit_path(&mut self, path: &'ast syn::Path) {$/;"	P	implementation:with_bound::FindTyParams
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize_in_place
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_seq<A>(self, _: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:ArrayVisitor
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:CStringVisitor
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_seq<A>(self, seq: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_seq<S>(self, _: S) -> Result<(), S::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_seq<S>(self, mut seq: S) -> Result<Self::Value, S::Error>$/;"	f	module:content
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_seq<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_seq	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_seq<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_some	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:IpAddr::deserialize::IpAddrVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:SocketAddr::deserialize::SocketAddrVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagContentOtherFieldVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagOrContentFieldVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_u16<E>(self, v: u16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u16	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_u32<E>(self, v: u32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u32	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_u64<E>(self, x: u64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^                    fn visit_u64<E>(self, value: u64) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_u8<E>(self, v: u8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u8	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/ignored_any.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:PhantomDataVisitor
visit_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:UnitVisitor
visit_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/mod.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_unit<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_unit	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedStructVariant
visitor	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedTupleVariant
void	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.116/src/ser/impossible.rs	/^    void: Void,$/;"	m	struct:Impossible
w	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/macros.rs	/^macro_rules! w {$/;"	M
warning	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    pub fn warning<T>(&self, msg: T) -> Format<T>$/;"	P	implementation:Colorizer
when	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    pub when: ColorWhen,$/;"	m	struct:ColorizerOption
when	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/fmt.rs	/^    when: ColorWhen,$/;"	m	struct:Colorizer
windows_osstr_starts_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/osstringext.rs	/^fn windows_osstr_starts_with(osstr: &OsStr, prefix: &[u8]) -> bool {$/;"	f
with_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^pub fn with_bound($/;"	f
with_capacity	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn with_capacity(capacity: usize) -> Bounds {$/;"	P	implementation:Bounds
with_capacity	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn with_capacity(buffer: usize, fields: usize) -> ByteRecord {$/;"	P	implementation:ByteRecord
with_capacity	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn with_capacity(buffer: usize, fields: usize) -> StringRecord {$/;"	P	implementation:StringRecord
with_defaults	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn with_defaults<S: Into<String>>(n: S) -> Self {$/;"	P	implementation:App
with_description	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn with_description(description: &str, kind: ErrorKind) -> Self {$/;"	P	implementation:Error
with_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header() {$/;"	f	module:tests
with_header_empty	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_empty() {$/;"	f	module:tests
with_header_empty_ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_empty_ok() {$/;"	f	module:tests
with_header_missing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_missing() {$/;"	f	module:tests
with_header_missing_ok	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_missing_ok() {$/;"	f	module:tests
with_header_no_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_no_fields() {$/;"	f	module:tests
with_header_unknown	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_unknown() {$/;"	f	module:tests
with_lifetime_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^pub fn with_lifetime_bound(generics: &syn::Generics, lifetime: &str) -> syn::Generics {$/;"	f
with_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/meta.rs	/^    pub fn with_name(s: String) -> Self {$/;"	P	implementation:AppMeta
with_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn with_name(n: String) -> Self {$/;"	f
with_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/arg.rs	/^    pub fn with_name(n: &'a str) -> Self {$/;"	P	implementation:Arg
with_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/group.rs	/^    pub fn with_name(n: &'a str) -> Self {$/;"	P	implementation:ArgGroup
with_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/subcommand.rs	/^    pub fn with_name<'b>(name: &str) -> App<'a, 'b> {$/;"	P	implementation:SubCommand
with_self_bound	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^pub fn with_self_bound($/;"	f
with_where_predicates	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^pub fn with_where_predicates($/;"	f
with_where_predicates_from_fields	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^pub fn with_where_predicates_from_fields($/;"	f
with_where_predicates_from_variants	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^pub fn with_where_predicates_from_variants($/;"	f
without_defaults	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/bound.rs	/^pub fn without_defaults(generics: &syn::Generics) -> syn::Generics {$/;"	f
without_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn without_header() {$/;"	f	module:tests
wlnerr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! wlnerr($/;"	M
wrap_deserialize_field_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn wrap_deserialize_field_with($/;"	f
wrap_deserialize_variant_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn wrap_deserialize_variant_with($/;"	f
wrap_deserialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/de.rs	/^fn wrap_deserialize_with($/;"	f
wrap_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^fn wrap_help(help: &str, avail_chars: usize) -> String {$/;"	f
wrap_help_last_word	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn wrap_help_last_word() {$/;"	f	module:test
wrap_in_const	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/dummy.rs	/^pub fn wrap_in_const($/;"	f
wrap_serialize_field_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn wrap_serialize_field_with($/;"	f
wrap_serialize_variant_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn wrap_serialize_variant_with($/;"	f
wrap_serialize_with	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.116/src/ser.rs	/^fn wrap_serialize_with($/;"	f
writable	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn writable(&mut self) -> &mut [u8] {$/;"	P	implementation:Buffer
write	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            fn write(&mut self, data: &[u8]) -> io::Result<usize> {$/;"	P	implementation:tests::full_buffer_should_not_flush_underlying::MarkWriteAndFlush
write_all_args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    pub fn write_all_args(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	P	implementation:Help
write_app_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    pub fn write_app_help(w: &'a mut Write, app: &App, use_long: bool) -> ClapResult<()> {$/;"	P	implementation:Help
write_arg	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn write_arg<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	P	implementation:Help
write_args	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn write_args<'b: 'd, 'c: 'd, 'd, I: 'd>(&mut self, args: I) -> io::Result<()>$/;"	P	implementation:Help
write_args_unsorted	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn write_args_unsorted<'b: 'd, 'c: 'd, 'd, I: 'd>(&mut self, args: I) -> io::Result<()>$/;"	P	implementation:Help
write_before_after_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn write_before_after_help(&mut self, h: &str) -> io::Result<()> {$/;"	P	implementation:Help
write_bin_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn write_bin_name(&mut self, parser: &Parser) -> io::Result<()> {$/;"	P	implementation:Help
write_byte_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn write_byte_record(&mut self, record: &ByteRecord) -> Result<()> {$/;"	P	implementation:Writer
write_default_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    pub fn write_default_help(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	P	implementation:Help
write_delimiter	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn write_delimiter(&mut self) -> Result<()> {$/;"	P	implementation:Writer
write_field	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn write_field<T: AsRef<[u8]>>(&mut self, field: T) -> Result<()> {$/;"	P	implementation:Writer
write_field_impl	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn write_field_impl<T: AsRef<[u8]>>(&mut self, field: T) -> Result<()> {$/;"	P	implementation:Writer
write_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    pub fn write_help(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	P	implementation:Help
write_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn write_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn write_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_help_err	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn write_help_err<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn write_long_help<W: Write>(&mut self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_long_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn write_long_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_long_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn write_long_version<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_name	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^        macro_rules! write_name {$/;"	M	method:Help::write_bin_name
write_nspaces	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/macros.rs	/^macro_rules! write_nspaces {$/;"	M
write_parser_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    pub fn write_parser_help(w: &'a mut Write, parser: &Parser, use_long: bool) -> ClapResult<()/;"	P	implementation:Help
write_parser_help_to_stderr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    pub fn write_parser_help_to_stderr(w: &'a mut Write, parser: &Parser) -> ClapResult<()> {$/;"	P	implementation:Help
write_record	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn write_record<I, T>(&mut self, record: I) -> Result<()>$/;"	P	implementation:Writer
write_subcommands	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn write_subcommands(&mut self, parser: &Parser) -> io::Result<()> {$/;"	P	implementation:Help
write_templated_help	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn write_templated_help(&mut self, parser: &Parser, template: &str) -> ClapResult<()> {$/;"	P	implementation:Help
write_terminator	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn write_terminator(&mut self) -> Result<()> {$/;"	P	implementation:Writer
write_terminator_into_buffer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn write_terminator_into_buffer(&mut self) -> Result<()> {$/;"	P	implementation:Writer
write_thing	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^        macro_rules! write_thing {$/;"	M	method:Help::write_default_help
write_to	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn write_to<W: Write>(&self, w: &mut W) -> io::Result<()> {$/;"	P	implementation:Error
write_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    fn write_version(&mut self, parser: &Parser) -> io::Result<()> {$/;"	P	implementation:Help
write_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^    pub fn write_version<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_version	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/parser.rs	/^    pub fn write_version<W: Write>(&self, w: &mut W, use_long: bool) -> io::Result<()> {$/;"	f
writer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/help.rs	/^    writer: &'a mut Write,$/;"	m	struct:Help
writer	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^mod writer;$/;"	n
written	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn written(&mut self, n: usize) {$/;"	P	implementation:Buffer
wrong_number_of_values	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/errors.rs	/^    pub fn wrong_number_of_values<S, U>($/;"	P	implementation:Error
wrote_header	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn wrote_header(&self) -> bool {$/;"	P	implementation:SeHeader
wtr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    wtr: W,$/;"	m	struct:IntoInnerError
wtr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    wtr: &'w mut Writer<W>,$/;"	m	struct:SeHeader
wtr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    wtr: &'w mut Writer<W>,$/;"	m	struct:SeRecord
wtr	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    wtr: Option<W>,$/;"	m	struct:Writer
wtr_as_string	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn wtr_as_string(wtr: Writer<Vec<u8>>) -> String {$/;"	f	module:tests
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: Boolish,$/;"	m	struct:tests::enum_untagged::Row
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: Option<String>,$/;"	m	struct:tests::with_header_empty::Foo
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: Option<String>,$/;"	m	struct:tests::with_header_missing_ok::Foo
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: Option<String>,$/;"	m	struct:tests::with_header_no_fields::Foo
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: String,$/;"	m	struct:tests::with_header::Foo
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: String,$/;"	m	struct:tests::with_header_missing::Foo
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: String,$/;"	m	struct:tests::with_header_unknown::Foo
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: String,$/;"	m	struct:tests::without_header::Foo
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: f64,$/;"	m	struct:tests::enum_label_simple_tagged::Row
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            x: f64,$/;"	m	struct:tests::flatten::Input
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            x: bool,$/;"	m	struct:tests::struct_headers::Foo
x	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            x: bool,$/;"	m	struct:tests::struct_no_headers::Foo
xs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            xs: Vec<i32>,$/;"	m	struct:tests::seq_in_struct::Foo
xs	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            xs: Vec<i32>,$/;"	m	struct:tests::seq_in_struct_tail::Foo
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            y: Boolish,$/;"	m	struct:tests::enum_untagged::Row
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            y: f64,$/;"	m	struct:tests::flatten::Input
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            y: i32,$/;"	m	struct:tests::with_header::Foo
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            y: i32,$/;"	m	struct:tests::with_header_empty::Foo
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            y: i32,$/;"	m	struct:tests::with_header_missing::Foo
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            y: i32,$/;"	m	struct:tests::with_header_missing_ok::Foo
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            y: i32,$/;"	m	struct:tests::with_header_no_fields::Foo
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            y: i32,$/;"	m	struct:tests::with_header_unknown::Foo
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            y: i32,$/;"	m	struct:tests::without_header::Foo
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            y: i32,$/;"	m	struct:tests::struct_headers::Foo
y	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            y: i32,$/;"	m	struct:tests::struct_no_headers::Foo
yaml_opt_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/macros.rs	/^macro_rules! yaml_opt_str {$/;"	M
yaml_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/mod.rs	/^        macro_rules! yaml_str {$/;"	M	method:App::from
yaml_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/macros.rs	/^macro_rules! yaml_str {$/;"	M
yaml_to_bool	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/macros.rs	/^macro_rules! yaml_to_bool {$/;"	M
yaml_to_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/macros.rs	/^macro_rules! yaml_to_str {$/;"	M
yaml_to_u64	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/macros.rs	/^macro_rules! yaml_to_u64 {$/;"	M
yaml_to_usize	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/macros.rs	/^macro_rules! yaml_to_usize {$/;"	M
yaml_tuple2	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/macros.rs	/^macro_rules! yaml_tuple2 {$/;"	M
yaml_tuple3	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/macros.rs	/^macro_rules! yaml_tuple3 {$/;"	M
yaml_vec_or_str	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/args/macros.rs	/^macro_rules! yaml_vec_or_str {$/;"	M
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            z: Boolish,$/;"	m	struct:tests::enum_untagged::Row
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            z: f64,$/;"	m	struct:tests::with_header::Foo
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            z: f64,$/;"	m	struct:tests::with_header_empty::Foo
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            z: f64,$/;"	m	struct:tests::with_header_missing::Foo
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            z: f64,$/;"	m	struct:tests::with_header_missing_ok::Foo
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            z: f64,$/;"	m	struct:tests::with_header_no_fields::Foo
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            z: f64,$/;"	m	struct:tests::with_header_unknown::Foo
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^            z: f64,$/;"	m	struct:tests::without_header::Foo
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            z: String,$/;"	m	struct:tests::struct_headers::Foo
z	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            z: String,$/;"	m	struct:tests::struct_no_headers::Foo
zeroed	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/app/settings.rs	/^    pub fn zeroed() -> Self {$/;"	P	implementation:AppFlags
zsh	/home/darrion/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.3/src/completions/mod.rs	/^mod zsh;$/;"	n
