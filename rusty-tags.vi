!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ALIAS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const ALIAS: Symbol = Symbol("alias");$/;"	c
ArrayInPlaceVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct ArrayInPlaceVisitor<'a, A: 'a>(&'a mut A);$/;"	s
ArrayVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct ArrayVisitor<A> {$/;"	s
Attr	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^struct Attr<'c, T> {$/;"	s
BORROW	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const BORROW: Symbol = Symbol("borrow");$/;"	c
BOUND	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const BOUND: Symbol = Symbol("bound");$/;"	c
Bar	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Bar {};$/;"	s
Bar	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Bar {$/;"	s
Baz	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Baz(bool);$/;"	s
BoolAttr	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^struct BoolAttr<'c>(Attr<'c, ()>);$/;"	s
BoolVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct BoolVisitor;$/;"	s
Boolish	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        enum Boolish {$/;"	g
BorrowedBytesDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct BorrowedBytesDeserializer<'de, E> {$/;"	s
BorrowedLifetimes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^enum BorrowedLifetimes {$/;"	g
BorrowedLifetimes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    struct BorrowedLifetimes(Punctuated<syn::Lifetime, Token![+]>);$/;"	s
BorrowedStrDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
BoundVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        struct BoundVisitor<T>(PhantomData<Bound<T>>);$/;"	s
Bounds	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^struct Bounds {$/;"	s
Buffer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^struct Buffer {$/;"	s
ByteRecord	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^pub struct ByteRecord(Box<ByteRecordInner>);$/;"	s
ByteRecordInner	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^struct ByteRecordInner {$/;"	s
ByteRecordIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^pub struct ByteRecordIter<'r> {$/;"	s
ByteRecordsIntoIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct ByteRecordsIntoIter<R> {$/;"	s
ByteRecordsIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct ByteRecordsIter<'r, R: 'r> {$/;"	s
BytesDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub struct BytesDeserializer<'a, E> {$/;"	s
BytesVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct BytesVisitor;$/;"	s
CONTENT	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const CONTENT: Symbol = Symbol("content");$/;"	c
CRATE	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const CRATE: Symbol = Symbol("crate");$/;"	c
CStringVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct CStringVisitor;$/;"	s
CharVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct CharVisitor;$/;"	s
Container	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^pub struct Container<'a> {$/;"	s
Container	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^pub struct Container {$/;"	s
Content	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub enum Content<'de> {$/;"	g
Content	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub enum Content {$/;"	g
ContentDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct ContentDeserializer<'de, E> {$/;"	s
ContentRefDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct ContentRefDeserializer<'a, 'de: 'a, E> {$/;"	s
ContentSerializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct ContentSerializer<E> {$/;"	s
ContentVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct ContentVisitor<'de> {$/;"	s
CowBytesVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct CowBytesVisitor;$/;"	s
CowStrDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct CowStrDeserializer<'a, E> {$/;"	s
CowStrVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct CowStrVisitor;$/;"	s
Ctxt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ctxt.rs	/^pub struct Ctxt {$/;"	s
DEFAULT	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const DEFAULT: Symbol = Symbol("default");$/;"	c
DENY_UNKNOWN_FIELDS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const DENY_UNKNOWN_FIELDS: Symbol = Symbol("deny_unknown_fields");$/;"	c
DESERIALIZE	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const DESERIALIZE: Symbol = Symbol("deserialize");$/;"	c
DESERIALIZE_WITH	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const DESERIALIZE_WITH: Symbol = Symbol("deserialize_with");$/;"	c
Data	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^pub enum Data<'a> {$/;"	g
DeByteRecord	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^struct DeByteRecord<'r> {$/;"	s
DeImplGenerics	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^struct DeImplGenerics<'a>(&'a Parameters);$/;"	s
DeRecord	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^trait DeRecord<'r> {$/;"	t
DeRecordWrap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^struct DeRecordWrap<T>(T);$/;"	s
DeStringRecord	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^struct DeStringRecord<'r> {$/;"	s
DeTypeGenerics	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^struct DeTypeGenerics<'a>(&'a Parameters);$/;"	s
Default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^pub enum Default {$/;"	g
Derive	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/mod.rs	/^pub enum Derive {$/;"	g
Deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait Deserialize<'de>: Sized {$/;"	t
Deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^        trait Deserialize<'de>: Sized {$/;"	t
DeserializeError	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^pub struct DeserializeError {$/;"	s
DeserializeErrorKind	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^pub enum DeserializeErrorKind {$/;"	g
DeserializeOwned	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait DeserializeOwned: for<'de> Deserialize<'de> {}$/;"	t
DeserializeRecordsIntoIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct DeserializeRecordsIntoIter<R, D> {$/;"	s
DeserializeRecordsIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct DeserializeRecordsIter<'r, R: 'r, D> {$/;"	s
DeserializeSeed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait DeserializeSeed<'de>: Sized {$/;"	t
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait Deserializer<'de>: Sized {$/;"	t
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^            type Deserializer = $name<E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Deserializer = CowStrDeserializer<'a, E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Deserializer = MapDeserializer<'de, <Self as IntoIterator>::IntoIter, E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Deserializer = NeverDeserializer<E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Deserializer = SeqDeserializer<<Self as IntoIterator>::IntoIter, E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Deserializer = StringDeserializer<E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Deserializer = U32Deserializer<E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Deserializer = UnitDeserializer<E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Deserializer = Self;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    type Deserializer = <u32 as IntoDeserializer<'de, E>>::Deserializer;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	T
Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	T
DurationVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s
Encode	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^pub struct Encode {$/;"	s
EnumAccess	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait EnumAccess<'de>: Sized {$/;"	t
EnumDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct EnumDeserializer<'de, E>$/;"	s
EnumRefDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct EnumRefDeserializer<'a, 'de: 'a, E>$/;"	s
EnumVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        struct EnumVisitor;$/;"	s
Err	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/case.rs	/^    type Err = ();$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    type Error = DeserializeError;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub struct Error(Box<ErrorKind>);$/;"	s
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type Error = Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^        pub trait Error: Sized $(+ $($supertrait)::+)* {$/;"	t
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    type Error = A::Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    type Error: Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^            type Error = E;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        type Error = A::Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        type Error = E;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Error = A::Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Error = E;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct Error {$/;"	s
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Error = E;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    type Error = E;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type Error = E;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type Error = M::Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type Error = M::Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type Error = S::Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^pub struct Error;$/;"	s
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    type Error = fmt::Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^    type Error = Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^        pub trait Error: Sized $(+ $($supertrait)::+)* {$/;"	t
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    type Error: Error;$/;"	T
Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/std_error.rs	/^pub trait Error: Debug + Display {$/;"	t
ErrorImpl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^type ErrorImpl = ();$/;"	T
ErrorImpl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^type ErrorImpl = Box<str>;$/;"	T
ErrorKind	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub enum ErrorKind {$/;"	g
Expected	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait Expected {$/;"	t
ExpectedInMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^struct ExpectedInMap(usize);$/;"	s
ExpectedInSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^struct ExpectedInSeq(usize);$/;"	s
Expr	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/fragment.rs	/^pub struct Expr(pub Fragment);$/;"	s
FIELDS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs", "nanos"];$/;"	c
FIELDS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs_since_epoch", "nanos_since_epoch"];$/;"	c
FIELDS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    pub const FIELDS: &'static [&'static str] = &["start", "end"];$/;"	c
FIELDS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            const FIELDS: &'static [&'static str] = &[ #(#field_names),* ];$/;"	c
FIELDS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            const FIELDS: &'static [&'static str] = &[ #(#names),* ];$/;"	c
FIELDS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        const FIELDS: &'static [&'static str] = &[#tag, #content];$/;"	c
FIELD_IDENTIFIER	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const FIELD_IDENTIFIER: Symbol = Symbol("field_identifier");$/;"	c
FLATTEN	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const FLATTEN: Symbol = Symbol("flatten");$/;"	c
FROM	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const FROM: Symbol = Symbol("from");$/;"	c
Field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        enum Field {$/;"	g
Field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    enum Field {$/;"	g
Field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^pub struct Field<'a> {$/;"	s
Field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^pub struct Field {$/;"	s
FieldVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s
FieldVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            struct FieldVisitor;$/;"	s
FindTyParams	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^    struct FindTyParams<'ast> {$/;"	s
First	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        type First = A;$/;"	T
First	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        type First;$/;"	T
First	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub type First<T> = <T as Pair>::First;$/;"	T
FlatInternallyTaggedAccess	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub struct FlatInternallyTaggedAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapAccess	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub struct FlatMapAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub struct FlatMapDeserializer<'a, 'de: 'a, E>($/;"	s
FlatMapSerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^pub struct FlatMapSerializeMap<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^pub struct FlatMapSerializeStruct<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStructVariantAsMapValue	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^pub struct FlatMapSerializeStructVariantAsMapValue<'a, M: 'a> {$/;"	s
FlatMapSerializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^pub struct FlatMapSerializer<'a, M: 'a>(pub &'a mut M);$/;"	s
FlatStructAccess	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub struct FlatStructAccess<'a, 'de: 'a, E> {$/;"	s
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo {$/;"	s
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo(i32, bool);$/;"	s
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo;$/;"	s
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Foo<'a, 'c> {$/;"	s
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^            struct Foo {$/;"	s
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        enum Foo {$/;"	g
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo {$/;"	s
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo(bool, i32, String);$/;"	s
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo(f64);$/;"	s
Foo	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Foo;$/;"	s
Fragment	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/fragment.rs	/^pub enum Fragment {$/;"	g
FromPrimitive	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^pub trait FromPrimitive: Sized {$/;"	t
FromUtf8Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub struct FromUtf8Error {$/;"	s
GETTER	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const GETTER: Symbol = Symbol("getter");$/;"	c
HeaderState	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^enum HeaderState {$/;"	g
HeaderState	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^enum HeaderState {$/;"	g
Headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^struct Headers {$/;"	s
INTO	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const INTO: Symbol = Symbol("into");$/;"	c
Identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^pub enum Identifier {$/;"	g
IdentifierDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub trait IdentifierDeserializer<'de, E: Error> {$/;"	t
IgnoredAny	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^pub struct IgnoredAny;$/;"	s
Impossible	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^pub struct Impossible<Ok, Error> {$/;"	s
InPlaceImplGenerics	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^struct InPlaceImplGenerics<'a>(&'a Parameters);$/;"	s
InPlaceSeed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub struct InPlaceSeed<'a, T: 'a>(pub &'a mut T);$/;"	s
InPlaceTypeGenerics	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^struct InPlaceTypeGenerics<'a>(&'a Parameters);$/;"	s
Input	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Input {$/;"	s
InternallyTaggedUnitVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct InternallyTaggedUnitVisitor<'a> {$/;"	s
IntoDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait IntoDeserializer<'de, E: Error = value::Error> {$/;"	t
IntoInnerError	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub struct IntoInnerError<W> {$/;"	s
IntoIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    type IntoIter = ByteRecordIter<'r>;$/;"	T
IntoIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    type IntoIter = StringRecordIter<'a>;$/;"	T
IpAddrVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    struct IpAddrVisitor;$/;"	s
IpAddrVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            struct IpAddrVisitor;$/;"	s
Item	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    type Item = &'r [u8];$/;"	T
Item	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    type Item = Result<ByteRecord>;$/;"	T
Item	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    type Item = Result<D>;$/;"	T
Item	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    type Item = Result<StringRecord>;$/;"	T
Item	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    type Item = &'a str;$/;"	T
Item	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    type Item = &'r str;$/;"	T
KindVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                struct KindVisitor;$/;"	s
Label	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        enum Label {$/;"	g
MAX_LEN	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^            const MAX_LEN: usize = 15;$/;"	c
MAX_LEN	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^            const MAX_LEN: usize = 21;$/;"	c
MAX_LEN	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^            const MAX_LEN: usize = 39;$/;"	c
MAX_LEN	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^            const MAX_LEN: usize = 47;$/;"	c
MAX_ONE_B	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^const MAX_ONE_B: u32 = 0x80;$/;"	c
MAX_THREE_B	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^const MAX_THREE_B: u32 = 0x10000;$/;"	c
MAX_TWO_B	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^const MAX_TWO_B: u32 = 0x800;$/;"	c
MapAccess	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait MapAccess<'de> {$/;"	t
MapAccessDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct MapAccessDeserializer<A> {$/;"	s
MapAsEnum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub struct MapAsEnum<A> {$/;"	s
MapDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct MapDeserializer<'de, I, E>$/;"	s
MapDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct MapDeserializer<'de, E>$/;"	s
MapRefDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct MapRefDeserializer<'a, 'de: 'a, E>$/;"	s
MapVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                struct MapVisitor<K, V $(, $typaram)*> {$/;"	s
MarkWriteAndFlush	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^        struct MarkWriteAndFlush(Vec<u8>);$/;"	s
Match	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/fragment.rs	/^pub struct Match(pub Fragment);$/;"	s
MissingFieldDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct MissingFieldDeserializer<E>(&'static str, PhantomData<E>);$/;"	s
Name	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^pub struct Name {$/;"	s
Nested	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        struct Nested {$/;"	s
NeverDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct NeverDeserializer<E> {$/;"	s
OTHER	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const OTHER: Symbol = Symbol("other");$/;"	c
Ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type Ok = ();$/;"	T
Ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type Ok = Content;$/;"	T
Ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type Ok = M::Ok;$/;"	T
Ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type Ok = ();$/;"	T
Ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type Ok = S::Ok;$/;"	T
Ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    type Ok = ();$/;"	T
Ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^    type Ok = Ok;$/;"	T
Ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    type Ok;$/;"	T
OneOf	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^struct OneOf {$/;"	s
OptionVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct OptionVisitor<T> {$/;"	s
OsStringVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct OsStringVisitor;$/;"	s
Output	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    type Output = [u8];$/;"	T
Output	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    type Output = str;$/;"	T
Pair	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub trait Pair {$/;"	t
PairDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^struct PairDeserializer<A, B, E>(A, B, PhantomData<E>);$/;"	s
PairVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^struct PairVisitor<A, B, E>(Option<A>, Option<B>, PhantomData<E>);$/;"	s
Parameters	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^struct Parameters {$/;"	s
Parameters	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^struct Parameters {$/;"	s
PathBufVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct PathBufVisitor;$/;"	s
PathVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct PathVisitor;$/;"	s
PhantomDataVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct PhantomDataVisitor<T: ?Sized> {$/;"	s
Position	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^pub struct Position {$/;"	s
PriEnum	/home/dab/ClearHeadToDo/src/lib.rs	/^pub enum PriEnum {$/;"	g
PrimitiveVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                struct PrimitiveVisitor;$/;"	s
PrimitiveVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            struct PrimitiveVisitor;$/;"	s
Properties	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Properties {$/;"	s
QuoteStyle	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub enum QuoteStyle {$/;"	g
REMOTE	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const REMOTE: Symbol = Symbol("remote");$/;"	c
RENAME	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const RENAME: Symbol = Symbol("rename");$/;"	c
RENAME_ALL	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const RENAME_ALL: Symbol = Symbol("rename_all");$/;"	c
RangeVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    pub struct RangeVisitor<Idx> {$/;"	s
Reader	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct Reader<R> {$/;"	s
ReaderBuilder	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct ReaderBuilder {$/;"	s
ReaderState	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^struct ReaderState {$/;"	s
Record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/cookbook.rs	/^struct Record {$/;"	s
Record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^struct Record {$/;"	s
Record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^struct Record {$/;"	s
Record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^struct Record<'a> {$/;"	s
Record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^type Record = (String, String, Option<u64>, f64, f64);$/;"	T
Record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^type Record = HashMap<String, String>;$/;"	T
RenameAllRules	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^pub struct RenameAllRules {$/;"	s
RenameRule	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/case.rs	/^pub enum RenameRule {$/;"	g
Result	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	T
Result	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^enum Result<T, E> {$/;"	g
ResultVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        struct ResultVisitor<T, E>(PhantomData<Result<T, E>>);$/;"	s
Row	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        struct Row {$/;"	s
Row	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            struct Row {$/;"	s
Row	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^        struct Row {$/;"	s
SERDE	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const SERDE: Symbol = Symbol("serde");$/;"	c
SERIALIZE	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const SERIALIZE: Symbol = Symbol("serialize");$/;"	c
SERIALIZE_WITH	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const SERIALIZE_WITH: Symbol = Symbol("serialize_with");$/;"	c
SKIP	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const SKIP: Symbol = Symbol("skip");$/;"	c
SKIP_DESERIALIZING	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const SKIP_DESERIALIZING: Symbol = Symbol("skip_deserializing");$/;"	c
SKIP_SERIALIZING	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const SKIP_SERIALIZING: Symbol = Symbol("skip_serializing");$/;"	c
SKIP_SERIALIZING_IF	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const SKIP_SERIALIZING_IF: Symbol = Symbol("skip_serializing_if");$/;"	c
SeHeader	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^struct SeHeader<'w, W: 'w + io::Write> {$/;"	s
SeRecord	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^struct SeRecord<'w, W: 'w + io::Write> {$/;"	s
Second	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        type Second = B;$/;"	T
Second	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        type Second;$/;"	T
Second	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub type Second<T> = <T as Pair>::Second;$/;"	T
SeedStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    struct SeedStructVariant<V> {$/;"	s
SeedTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    struct SeedTupleVariant<V> {$/;"	s
SeqAccess	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait SeqAccess<'de> {$/;"	t
SeqAccessDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct SeqAccessDeserializer<A> {$/;"	s
SeqDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct SeqDeserializer<I, E> {$/;"	s
SeqDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct SeqDeserializer<'de, E>$/;"	s
SeqInPlaceVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                struct SeqInPlaceVisitor<'a, T: 'a $(, $typaram: 'a)*>(&'a mut $ty<T $(, $typaram)*>);$/;"	s
SeqRefDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct SeqRefDeserializer<'a, 'de: 'a, E>$/;"	s
SeqVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                struct SeqVisitor<T $(, $typaram)*> {$/;"	s
SerAndDe	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^type SerAndDe<T> = (Option<T>, Option<T>);$/;"	T
Serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^        trait Serialize {$/;"	t
Serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^pub trait Serialize {$/;"	t
SerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeMap = Self;$/;"	T
SerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^        type SerializeMap = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type SerializeMap = SerializeMap<E>;$/;"	T
SerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct SerializeMap<E> {$/;"	s
SerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeMap = FlatMapSerializeMap<'a, M>;$/;"	T
SerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeMap = S::SerializeMap;$/;"	T
SerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    type SerializeMap = Impossible<(), fmt::Error>;$/;"	T
SerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeMap	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^pub trait SerializeMap {$/;"	t
SerializeSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeSeq = Self;$/;"	T
SerializeSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^        type SerializeSeq = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type SerializeSeq = SerializeSeq<E>;$/;"	T
SerializeSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct SerializeSeq<E> {$/;"	s
SerializeSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeSeq = Impossible<S::Ok, S::Error>;$/;"	T
SerializeSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeSeq = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    type SerializeSeq = Impossible<(), fmt::Error>;$/;"	T
SerializeSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeSeq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^pub trait SerializeSeq {$/;"	t
SerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeStruct = Self;$/;"	T
SerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^        type SerializeStruct = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type SerializeStruct = SerializeStruct<E>;$/;"	T
SerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct SerializeStruct<E> {$/;"	s
SerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeStruct = FlatMapSerializeStruct<'a, M>;$/;"	T
SerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeStruct = S::SerializeStruct;$/;"	T
SerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    type SerializeStruct = Impossible<(), fmt::Error>;$/;"	T
SerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^pub trait SerializeStruct {$/;"	t
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeStructVariant = Self;$/;"	T
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^        type SerializeStructVariant = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type SerializeStructVariant = SerializeStructVariant<E>;$/;"	T
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct SerializeStructVariant<E> {$/;"	s
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeStructVariant = FlatMapSerializeStructVariantAsMapValue<'a, M>;$/;"	T
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeStructVariant = Impossible<S::Ok, S::Error>;$/;"	T
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeStructVariant = SerializeStructVariantAsMapValue<S::SerializeMap>;$/;"	T
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    type SerializeStructVariant = Impossible<(), fmt::Error>;$/;"	T
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeStructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^pub trait SerializeStructVariant {$/;"	t
SerializeStructVariantAsMapValue	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct SerializeStructVariantAsMapValue<M> {$/;"	s
SerializeTuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeTuple = Self;$/;"	T
SerializeTuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^        type SerializeTuple = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type SerializeTuple = SerializeTuple<E>;$/;"	T
SerializeTuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct SerializeTuple<E> {$/;"	s
SerializeTuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeTuple = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeTuple = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    type SerializeTuple = Impossible<(), fmt::Error>;$/;"	T
SerializeTuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^pub trait SerializeTuple {$/;"	t
SerializeTupleStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeTupleStruct = Self;$/;"	T
SerializeTupleStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^        type SerializeTupleStruct = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTupleStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type SerializeTupleStruct = SerializeTupleStruct<E>;$/;"	T
SerializeTupleStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct SerializeTupleStruct<E> {$/;"	s
SerializeTupleStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTupleStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTupleStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    type SerializeTupleStruct = Impossible<(), fmt::Error>;$/;"	T
SerializeTupleStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTupleStruct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^pub trait SerializeTupleStruct {$/;"	t
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    type SerializeTupleVariant = Self;$/;"	T
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^        type SerializeTupleVariant = $crate::ser::Impossible<Self::Ok, Self::Error>;$/;"	T
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        type SerializeTupleVariant = SerializeTupleVariant<E>;$/;"	T
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct SerializeTupleVariant<E> {$/;"	s
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<S::Ok, S::Error>;$/;"	T
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<Self::Ok, M::Error>;$/;"	T
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariantAsMapValue<S::SerializeMap>;$/;"	T
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    type SerializeTupleVariant = Impossible<(), fmt::Error>;$/;"	T
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	T
SerializeTupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^pub trait SerializeTupleVariant {$/;"	t
SerializeTupleVariantAsMapValue	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    pub struct SerializeTupleVariantAsMapValue<M> {$/;"	s
Serializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^pub trait Serializer: Sized {$/;"	t
SocketAddrVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    struct SocketAddrVisitor;$/;"	s
SocketAddrVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            struct SocketAddrVisitor;$/;"	s
Stmts	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/fragment.rs	/^pub struct Stmts(pub Fragment);$/;"	s
StrDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct StrVisitor;$/;"	s
StringDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct StringDeserializer<E> {$/;"	s
StringInPlaceVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct StringInPlaceVisitor<'a>(&'a mut String);$/;"	s
StringRecord	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^pub struct StringRecord(ByteRecord);$/;"	s
StringRecordIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^pub struct StringRecordIter<'r>(ByteRecordIter<'r>);$/;"	s
StringRecordsIntoIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct StringRecordsIntoIter<R> {$/;"	s
StringRecordsIter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^pub struct StringRecordsIter<'r, R: 'r> {$/;"	s
StringVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct StringVisitor;$/;"	s
StructTrait	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^enum StructTrait {$/;"	g
StructVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^enum StructVariant<'a> {$/;"	g
Style	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^pub enum Style {$/;"	g
Symbol	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub struct Symbol(&'static str);$/;"	s
TAG	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const TAG: Symbol = Symbol("tag");$/;"	c
TAG_CONT	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^const TAG_CONT: u8 = 0b1000_0000;$/;"	c
TAG_FOUR_B	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^const TAG_FOUR_B: u8 = 0b1111_0000;$/;"	c
TAG_THREE_B	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^const TAG_THREE_B: u8 = 0b1110_0000;$/;"	c
TAG_TWO_B	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^const TAG_TWO_B: u8 = 0b1100_0000;$/;"	c
TRANSPARENT	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const TRANSPARENT: Symbol = Symbol("transparent");$/;"	c
TRY_FROM	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const TRY_FROM: Symbol = Symbol("try_from");$/;"	c
TagContentOtherField	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub enum TagContentOtherField {$/;"	g
TagContentOtherFieldVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct TagContentOtherFieldVisitor {$/;"	s
TagOrContent	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub enum TagOrContent<'de> {$/;"	g
TagOrContentField	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub enum TagOrContentField {$/;"	g
TagOrContentFieldVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct TagOrContentFieldVisitor {$/;"	s
TagOrContentVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct TagOrContentVisitor<'de> {$/;"	s
TagType	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^pub enum TagType {$/;"	g
TaggedContent	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct TaggedContent<'de, T> {$/;"	s
TaggedContentVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct TaggedContentVisitor<'de, T> {$/;"	s
TaggedSerializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^struct TaggedSerializer<S> {$/;"	s
Task	/home/dab/ClearHeadToDo/src/lib.rs	/^pub struct Task {$/;"	s
TaskList	/home/dab/ClearHeadToDo/src/lib.rs	/^pub struct TaskList<'a> {$/;"	s
Terminator	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub enum Terminator {$/;"	g
Trim	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub enum Trim {$/;"	g
TupleInPlaceVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    struct TupleInPlaceVisitor<'a, $($name: 'a,)+>(&'a mut ($($name,)+));$/;"	s
TupleTrait	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^enum TupleTrait {$/;"	g
TupleVariant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^enum TupleVariant {$/;"	g
TupleVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    struct TupleVisitor<$($name,)+> {$/;"	s
U32Deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct U32Deserializer<E> {$/;"	s
UNTAGGED	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const UNTAGGED: Symbol = Symbol("untagged");$/;"	c
Unexpected	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub enum Unexpected<'a> {$/;"	g
UnitDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^pub struct UnitDeserializer<E> {$/;"	s
UnitOnly	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub struct UnitOnly<E> {$/;"	s
UnitVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^struct UnitVisitor;$/;"	s
Unsupported	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^enum Unsupported {$/;"	g
Untagged	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^enum Untagged {$/;"	g
UntaggedUnitVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct UntaggedUnitVisitor<'a> {$/;"	s
Utf8Error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub struct Utf8Error {$/;"	s
VARIANTS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Ok", "Err"];$/;"	c
VARIANTS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Unbounded", "Included", "Excluded"];$/;"	c
VARIANTS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            const VARIANTS: &'static [&'static str] = &[ #(#names),* ];$/;"	c
VARIANTS	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            const VARIANTS: &'static [&'static str] = &[ #(#variant_names),* ];$/;"	c
VARIANT_IDENTIFIER	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const VARIANT_IDENTIFIER: Symbol = Symbol("variant_identifier");$/;"	c
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    type Value = IgnoredAny;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                        type Value = $ty;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                        type Value = ($($name,)+);$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                        type Value = ();$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    type Value = $name_kind;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    type Value = $ty;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    type Value = $ty<K, V $(, $typaram)*>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    type Value = $ty<T $(, $typaram)*>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    type Value = ();$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    type Value = Field;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                type Value = ();$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                type Value = Field;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                type Value = [T; $len];$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                type Value = i128;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                type Value = net::IpAddr;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                type Value = net::SocketAddr;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                type Value = u128;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            type Value = $name;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            type Value = ();$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            type Value = Bound<T>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            type Value = Duration;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            type Value = Result<T, E>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            type Value = Vec<T>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        type Value = (Idx, Idx);$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = &'a Path;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = &'a [u8];$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = &'a str;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = ();$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = CString;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = Option<T>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = OsString;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = PathBuf;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = PhantomData<T>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = String;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = [T; 0];$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = bool;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    type Value = char;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    type Value = T;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    type Value;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        type Value = V::Value;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Value = ();$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Value = Content<'de>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Value = Cow<'a, [u8]>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Value = Cow<'a, str>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Value = TagContentOtherField;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Value = TagOrContent<'de>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Value = TagOrContentField;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Value = TaggedContent<'de, T>;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    type Value = ();$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^                type Value = #this #ty_generics;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            type Value = #this #ty_generics;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            type Value = #this;$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            type Value = ();$/;"	T
Value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            type Value = __Field #lifetime;$/;"	T
Variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    type Variant = Self;$/;"	T
Variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    type Variant: VariantAccess<'de, Error = Self::Error>;$/;"	T
Variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Variant = private::MapAsEnum<A>;$/;"	T
Variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    type Variant = private::UnitOnly<E>;$/;"	T
Variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Variant = VariantDeserializer<'de, Self::Error>;$/;"	T
Variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        type Variant = VariantRefDeserializer<'a, 'de, Self::Error>;$/;"	T
Variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^pub struct Variant<'a> {$/;"	s
Variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^pub struct Variant {$/;"	s
VariantAccess	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait VariantAccess<'de>: Sized {$/;"	t
VariantDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub struct VariantDeserializer<'de, E>$/;"	s
VariantRefDeserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    struct VariantRefDeserializer<'a, 'de: 'a, E>$/;"	s
VecAttr	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^struct VecAttr<'c, T> {$/;"	s
VecInPlaceVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        struct VecInPlaceVisitor<'a, T: 'a>(&'a mut Vec<T>);$/;"	s
VecVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        struct VecVisitor<T> {$/;"	s
Visitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^pub trait Visitor<'de>: Sized {$/;"	t
Void	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^enum Void {}$/;"	g
WITH	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^pub const WITH: Symbol = Symbol("with");$/;"	c
Wat	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        enum Wat {$/;"	g
Writer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^pub struct Writer<W: io::Write> {$/;"	s
WriterBuilder	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^pub struct WriterBuilder {$/;"	s
WriterState	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^struct WriterState {$/;"	s
__AdjacentlyTagged	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^        struct __AdjacentlyTagged #wrapper_generics #where_clause {$/;"	s
__DeserializeWith	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        struct __DeserializeWith #de_impl_generics #where_clause {$/;"	s
__EnumFlatten	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^                struct __EnumFlatten #wrapper_generics #where_clause {$/;"	s
__Field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        enum __Field #lifetime {$/;"	g
__FieldVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        struct __FieldVisitor #de_impl_generics #where_clause {$/;"	s
__FieldVisitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        struct __FieldVisitor;$/;"	s
__Seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        struct __Seed #de_impl_generics #where_clause {$/;"	s
__SerializeWith	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^        struct __SerializeWith #wrapper_impl_generics #where_clause {$/;"	s
__Visitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        struct __Visitor #de_impl_generics #where_clause {$/;"	s
__Visitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        struct __Visitor #in_place_impl_generics #where_clause {$/;"	s
__Visitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        struct __Visitor;$/;"	s
__private_deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^macro_rules! __private_deserialize {$/;"	d
__private_serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^macro_rules! __private_serialize {$/;"	d
__private_visit_untagged_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn __private_visit_untagged_option<D>(self, deserializer: D) -> Result<Self::Value, ()>$/;"	f
__private_visit_untagged_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn __private_visit_untagged_option<D>(self, _: D) -> Result<Self::Value, ()>$/;"	f
__serialize_unimplemented	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^macro_rules! __serialize_unimplemented {$/;"	d
__serialize_unimplemented_helper	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_helper {$/;"	d
__serialize_unimplemented_method	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_method {$/;"	d
add	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn add(&mut self, pos: usize) {$/;"	f
add_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn add_record(&mut self, record: &ByteRecord) -> Result<()> {$/;"	f
adjacent_fixed_arrays	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn adjacent_fixed_arrays() {$/;"	f
aliases	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	f
all_fields	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^    pub fn all_fields(&'a self) -> Box<Iterator<Item = &'a Field<'a>> + 'a> {$/;"	f
allow_transparent	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn allow_transparent(field: &Field, derive: Derive) -> bool {$/;"	f
apply_to_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/case.rs	/^    pub fn apply_to_field(&self, field: &str) -> String {$/;"	f
apply_to_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/case.rs	/^    pub fn apply_to_variant(&self, variant: &str) -> String {$/;"	f
array_impls	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! array_impls {$/;"	d
array_impls	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^macro_rules! array_impls {$/;"	d
as_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn as_byte_record(&self) -> &ByteRecord {$/;"	f
as_ref	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/fragment.rs	/^    fn as_ref(&self) -> &TokenStream {$/;"	f
as_slice	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	f
as_slice	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn as_slice(&self) -> &str {$/;"	f
as_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        pub fn as_str(&self) -> Option<&str> {$/;"	f
ascii	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn ascii(&mut self) -> &mut ReaderBuilder {$/;"	f
at_most_one	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn at_most_one(mut self) -> Result<Option<T>, ()> {$/;"	f
atomic_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! atomic_impl {$/;"	d
atomic_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^macro_rules! atomic_impl {$/;"	d
b	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn b(s: &str) -> &[u8] {$/;"	f
b	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn b<'a, T: AsRef<[u8]> + ?Sized>(bytes: &'a T) -> &'a [u8] {$/;"	f
b	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn b(s: &str) -> &[u8] {$/;"	f
bad_hex_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn bad_hex_seq() {$/;"	f
bad_type	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> S::Error {$/;"	f
bad_type	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn bad_type(what: Unsupported) -> M::Error {$/;"	f
bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn bool() {$/;"	f
borrow_cow_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub fn borrow_cow_bytes<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrow_cow_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub fn borrow_cow_str<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrowable_lifetimes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn borrowable_lifetimes($/;"	f
borrowed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn borrowed() {$/;"	f
borrowed_lifetimes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn borrowed_lifetimes(cont: &Container) -> BorrowedLifetimes {$/;"	f
borrowed_lifetimes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn borrowed_lifetimes(&self) -> &BTreeSet<syn::Lifetime> {$/;"	f
borrowed_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn borrowed_map() {$/;"	f
borrowed_map_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn borrowed_map_bytes() {$/;"	f
box_forwarded_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! box_forwarded_impl {$/;"	d
buffer_capacity	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn buffer_capacity(&mut self, capacity: usize) -> &mut ReaderBuilder {$/;"	f
buffer_capacity	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn buffer_capacity(&mut self, capacity: usize) -> &mut WriterBuilder {$/;"	f
build_generics	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn build_generics(cont: &Container, borrowed: &BorrowedLifetimes) -> syn::Generics {$/;"	f
build_generics	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn build_generics(cont: &Container) -> syn::Generics {$/;"	f
byte	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn byte(&self) -> u64 {$/;"	f
byte_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn byte_headers(&mut self) -> Result<&ByteRecord> {$/;"	f
byte_records	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn byte_records(&mut self) -> ByteRecordsIter<R> {$/;"	f
bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn bytes() {$/;"	f
bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn bytes() {$/;"	f
cautious	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub fn cautious(hint: Option<usize>) -> usize {$/;"	f
change_priority	/home/dab/ClearHeadToDo/src/lib.rs	/^    pub fn change_priority(&mut self, new_priority: &str) {$/;"	f
char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn char() {$/;"	f
check	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^pub fn check(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ctxt.rs	/^    pub fn check(self) -> Result<(), Vec<syn::Error>> {$/;"	f
check_adjacent_tag_conflict	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn check_adjacent_tag_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_field_count	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn check_field_count(&mut self) -> Result<()> {$/;"	f
check_flatten	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn check_flatten(cx: &Ctxt, cont: &Container) {$/;"	f
check_flatten_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn check_flatten_field(cx: &Ctxt, style: Style, field: &Field) {$/;"	f
check_from_and_try_from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn check_from_and_try_from(cx: &Ctxt, cont: &mut Container) {$/;"	f
check_getter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn check_getter(cx: &Ctxt, cont: &Container) {$/;"	f
check_identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn check_identifier(cx: &Ctxt, cont: &Container) {$/;"	f
check_internal_tag_field_name_conflict	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn check_internal_tag_field_name_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_transparent	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn check_transparent(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check_variant_skip_attrs	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn check_variant_skip_attrs(cx: &Ctxt, cont: &Container) {$/;"	f
clear	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn clear(&mut self) {$/;"	f
clear	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn clear(&mut self) {$/;"	f
clone	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^            fn clone(&self) -> Self {$/;"	f
clone	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	f
collect_lifetimes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn collect_lifetimes(ty: &syn::Type, out: &mut BTreeSet<syn::Lifetime>) {$/;"	f
collect_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn collect_map<K, V, I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	f
collect_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn collect_seq<I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn collect_str<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> fmt::Result$/;"	f
collect_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
comment	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn comment(&mut self, comment: Option<u8>) -> &mut ReaderBuilder {$/;"	f
constrain	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^pub fn constrain<T: ?Sized>(t: &T) -> &T {$/;"	f
content	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^mod content {$/;"	m
content	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^mod content {$/;"	m
core	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/lib.rs	/^    mod core {$/;"	m
count	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn count(self) -> usize {$/;"	f
count	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn count(self) -> usize {$/;"	f
create_task	/home/dab/ClearHeadToDo/src/lib.rs	/^    pub fn create_task(&mut self) {$/;"	f
custom	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn custom<T: fmt::Display>(msg: T) -> DeserializeError {$/;"	f
custom	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn custom<T: fmt::Display>(msg: T) -> Error {$/;"	f
custom	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^            fn custom<T>(msg: T) -> Self$/;"	f
custom	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn custom<T>(msg: T) -> Self$/;"	f
custom	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn custom<T>(_: T) -> Self$/;"	f
custom	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn custom<T: Display>(_msg: T) -> Self {$/;"	f
custom	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^            fn custom<T>(msg: T) -> Self$/;"	f
custom_serde_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn custom_serde_path(&self) -> Option<&syn::Path> {$/;"	f
de	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn de<D: DeserializeOwned>(fields: &[&str]) -> Result<D, Error> {$/;"	f
de_bound	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	f
de_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn de_headers<D: DeserializeOwned>($/;"	f
de_lifetime	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^    fn de_lifetime(&self) -> syn::Lifetime {$/;"	f
de_lifetime_def	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^    fn de_lifetime_def(&self) -> Option<syn::LifetimeDef> {$/;"	f
decide_identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn decide_identifier($/;"	f
decide_tag	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn decide_tag($/;"	f
declare_error_trait	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^macro_rules! declare_error_trait {$/;"	d
declare_error_trait	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^macro_rules! declare_error_trait {$/;"	d
default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn default() -> Bounds {$/;"	f
default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn default() -> ByteRecord {$/;"	f
default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn default() -> QuoteStyle {$/;"	f
default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn default() -> Terminator {$/;"	f
default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn default() -> Trim {$/;"	f
default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn default() -> ReaderBuilder {$/;"	f
default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn default() -> StringRecord {$/;"	f
default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn default() -> WriterBuilder {$/;"	f
default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	f
delimiter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn delimiter(&mut self, delimiter: u8) -> &mut ReaderBuilder {$/;"	f
delimiter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn delimiter(&mut self, delimiter: u8) -> &mut WriterBuilder {$/;"	f
deny_unknown_fields	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn deny_unknown_fields(&self) -> bool {$/;"	f
deref_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^macro_rules! deref_impl {$/;"	d
derive_deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/lib.rs	/^pub fn derive_deserialize(input: TokenStream) -> TokenStream {$/;"	f
derive_serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/lib.rs	/^pub fn derive_serialize(input: TokenStream) -> TokenStream {$/;"	f
description	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn description(&self) -> &str {$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn deserialize<'de, D: Deserialize<'de>>($/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn deserialize<D>(&mut self) -> DeserializeRecordsIter<R, D>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn deserialize<'de, D: Deserialize<'de>>($/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn deserialize<D>(deserializer: D) -> Result<IgnoredAny, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<T, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^                fn deserialize<__D>(__deserializer: __D) -> #serde::export::Result<Self, __D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^                fn deserialize<__D>(self, __deserializer: __D) -> _serde::export::Result<Self::Value, __D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn deserialize<__D>(__deserializer: __D) -> _serde::export::Result<Self, __D::Error>$/;"	f
deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn deserialize<__D>(self, __deserializer: __D) -> _serde::export::Result<Self::Value, __D::Error>$/;"	f
deserialize_adjacently_tagged_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_adjacently_tagged_enum($/;"	f
deserialize_aliases	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn deserialize_aliases(&self) -> Vec<String> {$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_any<V: Visitor<'de>>($/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^            fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_body	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_bool<V: Visitor<'de>>($/;"	f
deserialize_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_buf	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_byte_buf<V: Visitor<'de>>($/;"	f
deserialize_byte_buf	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_buf	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^pub fn deserialize_byte_record<'de, D: Deserialize<'de>>($/;"	f
deserialize_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_bytes<V: Visitor<'de>>($/;"	f
deserialize_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_char<V: Visitor<'de>>($/;"	f
deserialize_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_custom_identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_custom_identifier($/;"	f
deserialize_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_enum<V: Visitor<'de>>($/;"	f
deserialize_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! deserialize_enum {$/;"	d
deserialize_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_enum($/;"	f
deserialize_externally_tagged_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_externally_tagged_enum($/;"	f
deserialize_externally_tagged_newtype_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_externally_tagged_newtype_variant($/;"	f
deserialize_externally_tagged_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_externally_tagged_variant($/;"	f
deserialize_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_f32<V: Visitor<'de>>($/;"	f
deserialize_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_f64<V: Visitor<'de>>($/;"	f
deserialize_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_from(type_from: &syn::Type) -> Fragment {$/;"	f
deserialize_generated_identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_generated_identifier($/;"	f
deserialize_i128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^        fn deserialize_i128<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_identifier<V: Visitor<'de>>($/;"	f
deserialize_identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_identifier($/;"	f
deserialize_ignored_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_ignored_any<V: Visitor<'de>>($/;"	f
deserialize_ignored_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_ignored_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        fn deserialize_in_place<__D>(__deserializer: __D, __place: &mut Self) -> _serde::export::Result<(), __D::Error>$/;"	f
deserialize_in_place_body	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_in_place_body(_cont: &Container, _params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_in_place_body	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_in_place_body(cont: &Container, params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_int	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^macro_rules! deserialize_int {$/;"	d
deserialize_integer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_integer<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_internally_tagged_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_internally_tagged_enum($/;"	f
deserialize_internally_tagged_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_internally_tagged_variant($/;"	f
deserialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_map<V: Visitor<'de>>($/;"	f
deserialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_map($/;"	f
deserialize_map_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_map_in_place($/;"	f
deserialize_name	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn deserialize_name(&self) -> String {$/;"	f
deserialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_newtype_struct<V: Visitor<'de>>($/;"	f
deserialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_newtype_struct<V>($/;"	f
deserialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_newtype_struct($/;"	f
deserialize_newtype_struct_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_newtype_struct_in_place(params: &Parameters, field: &Field) -> TokenStream {$/;"	f
deserialize_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_option<V: Visitor<'de>>($/;"	f
deserialize_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f
deserialize_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_other	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn deserialize_other<V>() -> Result<V, E> {$/;"	f
deserialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_seq<V: Visitor<'de>>($/;"	f
deserialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn deserialize_seq<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_seq($/;"	f
deserialize_seq_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_seq_in_place($/;"	f
deserialize_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_str<V: Visitor<'de>>($/;"	f
deserialize_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_string<V: Visitor<'de>>($/;"	f
deserialize_string	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_string_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^pub fn deserialize_string_record<'de, D: Deserialize<'de>>($/;"	f
deserialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_struct<V: Visitor<'de>>($/;"	f
deserialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_struct($/;"	f
deserialize_struct_as_map_visitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_struct_as_map_visitor($/;"	f
deserialize_struct_as_struct_in_place_visitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_struct_as_struct_in_place_visitor($/;"	f
deserialize_struct_as_struct_visitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_struct_as_struct_visitor($/;"	f
deserialize_struct_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_struct_in_place($/;"	f
deserialize_transparent	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_try_from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_try_from(type_try_from: &syn::Type) -> Fragment {$/;"	f
deserialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_tuple<V: Visitor<'de>>($/;"	f
deserialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_tuple($/;"	f
deserialize_tuple_in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_tuple_in_place($/;"	f
deserialize_tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_tuple_struct<V: Visitor<'de>>($/;"	f
deserialize_tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_tuple_struct<V>($/;"	f
deserialize_tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_tuple_struct<V>($/;"	f
deserialize_u128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^        fn deserialize_u128<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_unit<V: Visitor<'de>>($/;"	f
deserialize_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn deserialize_unit_struct<V: Visitor<'de>>($/;"	f
deserialize_unit_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn deserialize_unit_struct<V>($/;"	f
deserialize_unit_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn deserialize_unit_struct<V>($/;"	f
deserialize_unit_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_unit_struct(params: &Parameters, cattrs: &attr::Container) -> Fragment {$/;"	f
deserialize_untagged_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_untagged_enum($/;"	f
deserialize_untagged_newtype_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_untagged_newtype_variant($/;"	f
deserialize_untagged_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn deserialize_untagged_variant($/;"	f
deserialize_with	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	f
double_quote	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn double_quote(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	f
double_quote	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn double_quote(&mut self, yes: bool) -> &mut WriterBuilder {$/;"	f
drop	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ctxt.rs	/^    fn drop(&mut self) {$/;"	f
duplicate_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^            fn duplicate_field(field: &'static str) -> Self {$/;"	f
effective_style	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
effective_style	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
empty_field_1	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_field_1() {$/;"	f
empty_field_2	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_field_2() {$/;"	f
empty_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_record() {$/;"	f
empty_surround_1	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_surround_1() {$/;"	f
empty_surround_2	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn empty_surround_2() {$/;"	f
encode	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/utf8.rs	/^pub fn encode(c: char) -> Encode {$/;"	f
end	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn end(&self) -> usize {$/;"	f
end	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error> {$/;"	f
end	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub fn end(self) -> Result<(), E> {$/;"	f
end	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn end(mut self) -> Result<M::Ok, M::Error> {$/;"	f
end	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn end(self) -> Result<Content, E> {$/;"	f
end	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn end(self) -> Result<(), Self::Error> {$/;"	f
end	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^    fn end(self) -> Result<Ok, Error> {$/;"	f
end	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	f
ends	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn ends(&self) -> &[usize] {$/;"	f
enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        struct enum identifier ignored_any$/;"	s
enum_from_ast	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^fn enum_from_ast<'a>($/;"	f
enum_label_simple_tagged	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn enum_label_simple_tagged() {$/;"	f
enum_newtypes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn enum_newtypes() {$/;"	f
enum_struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn enum_struct_variant() {$/;"	f
enum_units	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn enum_units() {$/;"	f
enum_untagged	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn enum_untagged() {$/;"	f
eq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq(&self, other: &ByteRecord) -> bool {$/;"	f
eq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq(&self, other: &Vec<T>) -> bool {$/;"	f
eq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq(&self, other: &[T]) -> bool {$/;"	f
eq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq(&self, other: &StringRecord) -> bool {$/;"	f
eq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq(&self, other: &Vec<T>) -> bool {$/;"	f
eq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq(&self, other: &[T]) -> bool {$/;"	f
eq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^    fn eq(&self, word: &Symbol) -> bool {$/;"	f
eq_field_boundaries	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq_field_boundaries() {$/;"	f
eq_field_boundaries	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq_field_boundaries() {$/;"	f
eq_record_len	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn eq_record_len() {$/;"	f
eq_record_len	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn eq_record_len() {$/;"	f
error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn error(&self, kind: DeserializeErrorKind) -> DeserializeError {$/;"	f
error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn error(&self, kind: DeserializeErrorKind) -> DeserializeError;$/;"	f
error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn error(&self) -> &io::Error {$/;"	f
error_container_inside_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^fn error_container_inside_struct<T: fmt::Display>(name: T) -> Error {$/;"	f
error_scalar_outside_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^fn error_scalar_outside_struct<T: fmt::Display>(name: T) -> Error {$/;"	f
error_spanned_by	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ctxt.rs	/^    pub fn error_spanned_by<A: ToTokens, T: Display>(&self, obj: A, msg: T) {$/;"	f
escape	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn escape(&mut self, escape: Option<u8>) -> &mut ReaderBuilder {$/;"	f
escape	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn escape(&mut self, escape: u8) -> &mut WriterBuilder {$/;"	f
example	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/cookbook.rs	/^fn example() -> Result<(), Box<dyn Error>> {$/;"	f
example	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^fn example() -> Result<(), Box<dyn Error>> {$/;"	f
expand	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn expand(&mut self) {$/;"	f
expand_derive_deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^pub fn expand_derive_deserialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error>> {$/;"	f
expand_derive_serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^pub fn expand_derive_serialize(input: &syn::DeriveInput) -> Result<TokenStream, Vec<syn::Error>> {$/;"	f
expect	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^    fn expect(self, msg: &str) -> T {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn expecting(&self, __formatter: &mut _serde::export::Formatter) -> _serde::export::fmt::Result {$/;"	f
expecting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        fn expecting(&self, __formatter: &mut _serde::export::Formatter) -> _serde::export::fmt::Result {$/;"	f
expr_is_missing	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn expr_is_missing(field: &Field, cattrs: &attr::Container) -> Fragment {$/;"	f
extend	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {$/;"	f
extend	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {$/;"	f
field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    pub fn field(&self) -> Option<u64> {$/;"	f
field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn field(&self) -> usize {$/;"	f
field_i	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn field_i(i: usize) -> Ident {$/;"	f
fields_from_ast	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^fn fields_from_ast<'a>($/;"	f
flatten	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn flatten() {$/;"	f
flatten	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn flatten(&self) -> bool {$/;"	f
flexible	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn flexible(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	f
flexible	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn flexible(&mut self, yes: bool) -> &mut WriterBuilder {$/;"	f
float	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn float() {$/;"	f
float_nan	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn float_nan() {$/;"	f
flush	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn flush(&mut self) -> io::Result<()> {$/;"	f
flush_buf	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn flush_buf(&mut self) -> io::Result<()> {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/symbol.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt_primitives	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^macro_rules! fmt_primitives {$/;"	d
forward_to_deserialize_any	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/macros.rs	/^macro_rules! forward_to_deserialize_any {$/;"	d
forward_to_deserialize_any_helper	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/macros.rs	/^macro_rules! forward_to_deserialize_any_helper {$/;"	d
forward_to_deserialize_any_method	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/macros.rs	/^macro_rules! forward_to_deserialize_any_method {$/;"	d
forward_to_deserialize_other	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^macro_rules! forward_to_deserialize_other {$/;"	d
forwarded_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! forwarded_impl {$/;"	d
from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn from(record: StringRecord) -> ByteRecord {$/;"	f
from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn from(xs: &'a [T]) -> ByteRecord {$/;"	f
from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn from(xs: Vec<T>) -> ByteRecord {$/;"	f
from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn from(err: Error) -> io::Error {$/;"	f
from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn from(err: io::Error) -> Error {$/;"	f
from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn from(xs: &'a [T]) -> StringRecord {$/;"	f
from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn from(xs: Vec<T>) -> StringRecord {$/;"	f
from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn from(self) -> Self::Deserializer {$/;"	f
from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn from(self) -> Self::Deserializer;$/;"	f
from_ast	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^    pub fn from_ast($/;"	f
from_ast	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn from_ast($/;"	f
from_ast	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, item: &syn::DeriveInput) -> Self {$/;"	f
from_ast	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, variant: &syn::Variant) -> Self {$/;"	f
from_attrs	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn from_attrs($/;"	f
from_bounds	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    pub fn from_bounds<I>(iter: &I) -> Option<usize>$/;"	f
from_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn from_byte_record($/;"	f
from_byte_record_lossy	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn from_byte_record_lossy(record: ByteRecord) -> StringRecord {$/;"	f
from_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^            fn from_i16(n: i16) -> Option<Self> {$/;"	f
from_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^        fn from_i16(n: i16) -> Option<Self> {$/;"	f
from_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^    fn from_i16(n: i16) -> Option<Self>;$/;"	f
from_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^            fn from_i32(n: i32) -> Option<Self> {$/;"	f
from_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^        fn from_i32(n: i32) -> Option<Self> {$/;"	f
from_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^    fn from_i32(n: i32) -> Option<Self>;$/;"	f
from_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^            fn from_i64(n: i64) -> Option<Self> {$/;"	f
from_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^        fn from_i64(n: i64) -> Option<Self> {$/;"	f
from_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^    fn from_i64(n: i64) -> Option<Self>;$/;"	f
from_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^            fn from_i8(n: i8) -> Option<Self> {$/;"	f
from_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^        fn from_i8(n: i8) -> Option<Self> {$/;"	f
from_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^    fn from_i8(n: i8) -> Option<Self>;$/;"	f
from_iter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> ByteRecord {$/;"	f
from_iter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> StringRecord {$/;"	f
from_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn from_path<P: AsRef<Path>>(&self, path: P) -> Result<Reader<File>> {$/;"	f
from_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn from_path<P: AsRef<Path>>(path: P) -> Result<Reader<File>> {$/;"	f
from_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn from_path<P: AsRef<Path>>(&self, path: P) -> Result<Writer<File>> {$/;"	f
from_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn from_path<P: AsRef<Path>>(path: P) -> Result<Writer<File>> {$/;"	f
from_reader	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn from_reader(rdr: R) -> Reader<R> {$/;"	f
from_reader	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn from_reader<R: io::Read>(&self, rdr: R) -> Reader<R> {$/;"	f
from_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/case.rs	/^    fn from_str(rename_all_str: &str) -> Result<Self, Self::Err> {$/;"	f
from_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^            fn from_u16(n: u16) -> Option<Self> {$/;"	f
from_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^        fn from_u16(n: u16) -> Option<Self> {$/;"	f
from_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^    fn from_u16(n: u16) -> Option<Self>;$/;"	f
from_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^            fn from_u32(n: u32) -> Option<Self> {$/;"	f
from_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^        fn from_u32(n: u32) -> Option<Self> {$/;"	f
from_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^    fn from_u32(n: u32) -> Option<Self>;$/;"	f
from_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^            fn from_u64(n: u64) -> Option<Self> {$/;"	f
from_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^        fn from_u64(n: u64) -> Option<Self> {$/;"	f
from_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^    fn from_u64(n: u64) -> Option<Self>;$/;"	f
from_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^            fn from_u8(n: u8) -> Option<Self> {$/;"	f
from_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^        fn from_u8(n: u8) -> Option<Self> {$/;"	f
from_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^    fn from_u8(n: u8) -> Option<Self>;$/;"	f
from_utf8_lossy	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> &str {$/;"	f
from_utf8_lossy	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> Cow<str> {$/;"	f
from_writer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn from_writer(wtr: W) -> Writer<W> {$/;"	f
from_writer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn from_writer<W: io::Write>(&self, wtr: W) -> Writer<W> {$/;"	f
full_buffer_should_not_flush_underlying	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn full_buffer_should_not_flush_underlying() {$/;"	f
get	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn get(&self, i: usize) -> Option<Range<usize>> {$/;"	f
get	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn get(&self, i: usize) -> Option<&[u8]> {$/;"	f
get	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn get(&self, i: usize) -> Option<&str> {$/;"	f
get	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn get(&self) -> bool {$/;"	f
get	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn get(self) -> Option<T> {$/;"	f
get	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn get(self) -> Vec<T> {$/;"	f
get_first_arg	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^fn get_first_arg() -> Result<OsString, Box<dyn Error>> {$/;"	f
get_lit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn get_lit_str<'a>(cx: &Ctxt, attr_name: Symbol, lit: &'a syn::Lit) -> Result<&'a syn::LitStr, ()> {$/;"	f
get_lit_str2	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn get_lit_str2<'a>($/;"	f
get_member	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn get_member(params: &Parameters, field: &Field, member: &Member) -> TokenStream {$/;"	f
get_multiple_renames	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn get_multiple_renames<'a>($/;"	f
get_mut	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn get_mut(&mut self) -> &mut R {$/;"	f
get_ref	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn get_ref(&self) -> &R {$/;"	f
get_renames	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn get_renames<'a>($/;"	f
get_ser_and_de	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn get_ser_and_de<'a, 'b, T, F>($/;"	f
get_serde_meta_items	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^pub fn get_serde_meta_items(cx: &Ctxt, attr: &syn::Attribute) -> Result<Vec<syn::NestedMeta>, ()> {$/;"	f
get_where_predicates	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn get_where_predicates($/;"	f
get_with_tokens	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn get_with_tokens(self) -> Option<(TokenStream, T)> {$/;"	f
getter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn getter(&self) -> Option<&syn::ExprPath> {$/;"	f
handle_container	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn handle_container<T: fmt::Display>($/;"	f
handle_scalar	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn handle_scalar<T: fmt::Display>($/;"	f
has_flatten	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn has_flatten(&self) -> bool {$/;"	f
has_getter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^    pub fn has_getter(&self) -> bool {$/;"	f
has_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn has_headers(&self) -> bool {$/;"	f
has_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn has_headers(&self) -> bool;$/;"	f
has_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn has_headers(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	f
has_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn has_headers(&self) -> bool {$/;"	f
has_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn has_headers(&mut self, yes: bool) -> &mut WriterBuilder {$/;"	f
headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn headers(&mut self) -> Result<&StringRecord> {$/;"	f
headers_on_empty_data	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn headers_on_empty_data() {$/;"	f
helper	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn helper(bounds: (usize, Option<usize>)) -> Option<usize> {$/;"	f
identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn identifier(&self) -> Identifier {$/;"	f
impl_copy_clone	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^macro_rules! impl_copy_clone {$/;"	d
impl_deserialize_num	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! impl_deserialize_num {$/;"	d
impl_from_primitive_for_float	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_float {$/;"	d
impl_from_primitive_for_int	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_int {$/;"	d
impl_from_primitive_for_uint	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_uint {$/;"	d
in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^    fn in_place(self) -> InPlaceImplGenerics<'a> {$/;"	f
in_place	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^    fn in_place(self) -> InPlaceTypeGenerics<'a> {$/;"	f
index	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn index(&self, i: usize) -> &[u8] {$/;"	f
index	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn index(&self, i: usize) -> &str {$/;"	f
infer_deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn infer_deserialize<'de, V: Visitor<'de>>($/;"	f
insert	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn insert<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	f
int_to_int	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^macro_rules! int_to_int {$/;"	d
int_to_uint	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^macro_rules! int_to_uint {$/;"	d
integer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn integer() {$/;"	f
integer_i128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        fn integer_i128() {$/;"	f
integer_u128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        fn integer_u128() {$/;"	f
into_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn into_byte_record(self) -> ByteRecord {$/;"	f
into_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn into_byte_record(self) -> ByteRecord {$/;"	f
into_byte_records	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_byte_records(self) -> ByteRecordsIntoIter<R> {$/;"	f
into_deserialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_deserialize<D>(self) -> DeserializeRecordsIntoIter<R, D>$/;"	f
into_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn into_deserializer(self) -> Self::Deserializer;$/;"	f
into_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^            fn into_deserializer(self) -> $name<E> {$/;"	f
into_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn into_deserializer(self) -> CowStrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn into_deserializer(self) -> StrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn into_deserializer(self) -> StringDeserializer<E> {$/;"	f
into_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn into_deserializer(self) -> U32Deserializer<E> {$/;"	f
into_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn into_deserializer(self) -> UnitDeserializer<E> {$/;"	f
into_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn into_deserializer(self) -> Self {$/;"	f
into_inner	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_inner	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_inner(self) -> R {$/;"	f
into_inner	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn into_inner($/;"	f
into_iter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn into_iter(self) -> ByteRecordIter<'r> {$/;"	f
into_iter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn into_iter(self) -> StringRecordIter<'a> {$/;"	f
into_kind	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn into_kind(self) -> ErrorKind {$/;"	f
into_reader	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_reader(self) -> Reader<R> {$/;"	f
into_records	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn into_records(self) -> StringRecordsIntoIter<R> {$/;"	f
invalid_length	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^            fn invalid_length(len: usize, exp: &Expected) -> Self {$/;"	f
invalid_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^pub fn invalid_option<'de, D, T>(de: D) -> result::Result<Option<T>, D::Error>$/;"	f
invalid_type	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^            fn invalid_type(unexp: Unexpected, exp: &Expected) -> Self {$/;"	f
invalid_type	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn invalid_type(self, exp: &Expected) -> E {$/;"	f
invalid_value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^            fn invalid_value(unexp: Unexpected, exp: &Expected) -> Self {$/;"	f
is	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^type is now a custom struct that we defined instead of a type alias, and as a$/;"	T
is	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^type is the minimally acceptable thing we can do here. Namely, while it allows$/;"	T
is_cow	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn is_cow(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_done	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_empty	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_human_readable	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	f
is_human_readable	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	f
is_implicitly_borrowed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn is_implicitly_borrowed(ty: &syn::Type) -> bool {$/;"	f
is_implicitly_borrowed_reference	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn is_implicitly_borrowed_reference(ty: &syn::Type) -> bool {$/;"	f
is_io_error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn is_io_error(&self) -> bool {$/;"	f
is_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn is_none(&self) -> bool {$/;"	f
is_option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn is_option(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_packed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn is_packed(&self) -> bool {$/;"	f
is_primitive_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn is_primitive_path(path: &syn::Path, primitive: &str) -> bool {$/;"	f
is_primitive_type	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn is_primitive_type(ty: &syn::Type, primitive: &str) -> bool {$/;"	f
is_reference	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn is_reference(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_slice_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn is_slice_u8(ty: &syn::Type) -> bool {$/;"	f
is_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn is_some(self) -> bool {$/;"	f
is_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn is_str(ty: &syn::Type) -> bool {$/;"	f
iter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn iter() {$/;"	f
iter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn iter(&self) -> ByteRecordIter {$/;"	f
iter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn iter(&self) -> StringRecordIter {$/;"	f
iter_forward_and_reverse	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn iter_forward_and_reverse() {$/;"	f
iter_reverse	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn iter_reverse() {$/;"	f
iterator_len_hint	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^fn iterator_len_hint<I>(iter: &I) -> Option<usize>$/;"	f
kind	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    pub fn kind(&self) -> &DeserializeErrorKind {$/;"	f
kind	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn kind(&self) -> &ErrorKind {$/;"	f
len	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn len(&self) -> usize {$/;"	f
lib	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/lib.rs	/^mod lib {$/;"	m
line	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn line(&self) -> u64 {$/;"	f
load_csv	/home/dab/ClearHeadToDo/src/lib.rs	/^    pub fn load_csv(&mut self) -> Result<(), Box<dyn Error>> {$/;"	f
load_from_csv_fail_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn load_from_csv_fail_test(){$/;"	f
load_from_csv_sucessful_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn load_from_csv_sucessful_test(){$/;"	f
load_tasks	/home/dab/ClearHeadToDo/src/lib.rs	/^    pub fn load_tasks(&mut self) -> Result<(), Box<dyn Error>> {$/;"	f
load_to_csv_fail_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn load_to_csv_fail_test(){$/;"	f
load_to_csv_successful_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn load_to_csv_successful_test(){$/;"	f
main	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/cookbook.rs	/^fn main() {$/;"	f
main	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^fn main() {$/;"	f
main	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^fn main() {$/;"	f
main	/home/dab/ClearHeadToDo/src/main.rs	/^fn main() {$/;"	f
map_as_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub fn map_as_enum<A>(map: A) -> MapAsEnum<A> {$/;"	f
map_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn map_headers() {$/;"	f
map_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! map_impl {$/;"	d
map_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^macro_rules! map_impl {$/;"	d
map_no_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn map_no_headers() {$/;"	f
mark_complete	/home/dab/ClearHeadToDo/src/lib.rs	/^    pub fn mark_complete(&mut self) {$/;"	f
mark_has_flatten	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn mark_has_flatten(&mut self) {$/;"	f
mark_transparent	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn mark_transparent(&mut self) {$/;"	f
member_message	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/check.rs	/^fn member_message(member: &Member) -> String {$/;"	f
missing_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^            fn missing_field(field: &'static str) -> Self {$/;"	f
missing_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>$/;"	f
mixed_hex_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn mixed_hex_seq() {$/;"	f
mut_if	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn mut_if(is_mut: bool) -> Option<TokenStream> {$/;"	f
name	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	f
needs_deserialize_bound	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn needs_deserialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
needs_serialize_bound	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn needs_serialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn new() -> ByteRecord {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn new() -> Position {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(builder: &ReaderBuilder, rdr: R) -> Reader<R> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(mut rdr: Reader<R>) -> DeserializeRecordsIntoIter<R, D> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: &'r mut Reader<R>) -> ByteRecordsIter<'r, R> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: &'r mut Reader<R>) -> DeserializeRecordsIter<'r, R, D> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: &'r mut Reader<R>) -> StringRecordsIter<'r, R> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: Reader<R>) -> ByteRecordsIntoIter<R> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn new(rdr: Reader<R>) -> StringRecordsIntoIter<R> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn new() -> ReaderBuilder {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn new(wtr: &'w mut Writer<W>) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn new() -> StringRecord {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn new(builder: &WriterBuilder, wtr: W) -> Writer<W> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn new() -> WriterBuilder {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn new() -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub fn new(iter: I) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub fn new(map: A) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub fn new(seq: A) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub fn new(value: &'de [u8]) -> BorrowedBytesDeserializer<'de, E> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub fn new(value: &'de str) -> BorrowedStrDeserializer<'de, E> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn new() -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn new(map: &'a [(Content<'de>, Content<'de>)]) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn new(map: Vec<(Content<'de>, Content<'de>)>) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn new(name: &'static str) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn new(slice: &'a [Content<'de>]) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn new(vec: Vec<Content<'de>>) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        pub fn new(content: &'a Content<'de>) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        pub fn new(content: Content<'de>) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        pub fn new(name: &'static str) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        pub fn new(variant: Content<'de>, value: Option<Content<'de>>) -> EnumDeserializer<'de, E> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn new($/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        pub fn new() -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn new(map: &'a mut M, name: &'static str) -> FlatMapSerializeStructVariantAsMapValue<'a, M> {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^    fn new(cont: &Container) -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ctxt.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^    fn new(cont: &Container) -> Self {$/;"	f
new_utf8_error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^pub fn new_utf8_error(field: usize, valid_up_to: usize) -> Utf8Error {$/;"	f
newpos	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn newpos(byte: u64, line: u64, record: u64) -> Position {$/;"	f
newtype_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn newtype_variant<T>(self) -> Result<T, Self::Error>$/;"	f
newtype_variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn newtype_variant_seed<U: DeserializeSeed<'de>>($/;"	f
newtype_variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn newtype_variant_seed<T>(mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f
newtype_variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>$/;"	f
next	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn next(&mut self) -> Option<&'r [u8]> {$/;"	f
next	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn next(&mut self) -> Option<Result<ByteRecord>> {$/;"	f
next	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn next(&mut self) -> Option<Result<D>> {$/;"	f
next	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn next(&mut self) -> Option<Result<StringRecord>> {$/;"	f
next	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn next(&mut self) -> Option<&'r str> {$/;"	f
next_back	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn next_back(&mut self) -> Option<&'r [u8]> {$/;"	f
next_back	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn next_back(&mut self) -> Option<&'r str> {$/;"	f
next_element	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	f
next_element_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_element_seed<U: DeserializeSeed<'de>>($/;"	f
next_element_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn next_element_seed<V>(&mut self, seed: V) -> Result<Option<V::Value>, Self::Error>$/;"	f
next_element_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_entry	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	f
next_entry_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	f
next_entry_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn next_entry_seed<TK, TV>($/;"	f
next_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field(&mut self) -> Result<&'r str, DeserializeError> {$/;"	f
next_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field(&mut self) -> Result<&'r str, DeserializeError>;$/;"	f
next_field_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field_bytes(&mut self) -> Result<&'r [u8], DeserializeError> {$/;"	f
next_field_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_field_bytes(&mut self) -> Result<&'r [u8], DeserializeError>;$/;"	f
next_header	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header(&mut self) -> Result<Option<&'r str>, DeserializeError> {$/;"	f
next_header	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header(&mut self) -> Result<Option<&'r str>, DeserializeError>;$/;"	f
next_header_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_header_bytes($/;"	f
next_key	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	f
next_key_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_key_seed<K: DeserializeSeed<'de>>($/;"	f
next_key_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	f
next_key_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_pair	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn next_pair(&mut self) -> Option<(First<I::Item>, Second<I::Item>)> {$/;"	f
next_value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	f
next_value_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn next_value_seed<K: DeserializeSeed<'de>>($/;"	f
next_value_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	f
next_value_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
nfa	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn nfa(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	f
no_chars	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn no_chars() {$/;"	f
no_fields	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn no_fields() {$/;"	f
no_headers_on_empty_data	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn no_headers_on_empty_data() {$/;"	f
no_headers_on_empty_data_after_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn no_headers_on_empty_data_after_headers() {$/;"	f
none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	f
nonzero_integers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! nonzero_integers {$/;"	d
nonzero_integers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^macro_rules! nonzero_integers {$/;"	d
nop_reserve	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^fn nop_reserve<T>(_seq: T, _n: usize) {}$/;"	f
one_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn one_byte_record() {$/;"	f
one_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn one_char() {$/;"	f
one_empty_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn one_empty_record() {$/;"	f
one_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn one_field() {$/;"	f
one_field_128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^        fn one_field_128() {$/;"	f
one_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn one_record() {$/;"	f
one_string_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn one_string_record() {$/;"	f
option	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn option() {$/;"	f
option_empty_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn option_empty_field() {$/;"	f
option_invalid_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn option_invalid_field() {$/;"	f
other	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn other(&self) -> bool {$/;"	f
parse	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^        fn parse(input: ParseStream) -> parse::Result<Self> {$/;"	f
parse_input	/home/dab/ClearHeadToDo/src/main.rs	/^pub fn parse_input(inp: &str, index: usize, arg: &str, list: &mut TaskList) -> Result<(), String> {$/;"	f
parse_ip_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! parse_ip_impl {$/;"	d
parse_lit_into_expr_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn parse_lit_into_expr_path($/;"	f
parse_lit_into_lifetimes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn parse_lit_into_lifetimes($/;"	f
parse_lit_into_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn parse_lit_into_path(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Path, ()> {$/;"	f
parse_lit_into_ty	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn parse_lit_into_ty(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Type, ()> {$/;"	f
parse_lit_into_where	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn parse_lit_into_where($/;"	f
parse_lit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn parse_lit_str<T>(s: &syn::LitStr) -> parse::Result<T>$/;"	f
parse_priority	/home/dab/ClearHeadToDo/src/lib.rs	/^pub fn parse_priority(expr: &str) -> Result<PriEnum, String> {$/;"	f
parse_socket_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! parse_socket_impl {$/;"	d
partially_invalid_utf8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn partially_invalid_utf8() {$/;"	f
peek_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn peek_field(&mut self) -> Option<&'r [u8]> {$/;"	f
peek_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn peek_field(&mut self) -> Option<&'r [u8]>;$/;"	f
place_lifetime	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn place_lifetime() -> syn::LifetimeDef {$/;"	f
position	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn position(&self) -> Option<&Position> {$/;"	f
position	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn position(&self) -> Option<&Position> {$/;"	f
position	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn position(&self) -> &Position {$/;"	f
position	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn position(&self) -> Option<&Position> {$/;"	f
positions_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn positions_headers() {$/;"	f
positions_no_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn positions_no_headers() {$/;"	f
precondition	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_no_de_lifetime	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn precondition_no_de_lifetime(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_sized	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn precondition_sized(cx: &Ctxt, cont: &Container) {$/;"	f
prepare_enum_variant_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn prepare_enum_variant_enum($/;"	f
pretend_fields_used	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/pretend.rs	/^fn pretend_fields_used(cont: &Container) -> TokenStream {$/;"	f
pretend_used	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/pretend.rs	/^pub fn pretend_used(cont: &Container) -> TokenStream {$/;"	f
pretend_variants_used	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/pretend.rs	/^fn pretend_variants_used(cont: &Container) -> TokenStream {$/;"	f
primitive_deserializer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^macro_rules! primitive_deserializer {$/;"	d
primitive_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^macro_rules! primitive_impl {$/;"	d
print_task_list	/home/dab/ClearHeadToDo/src/lib.rs	/^    pub fn print_task_list(&self, mut writer: impl std::io::Write)->$/;"	f
private	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^mod private {$/;"	m
push_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn push_field(&mut self, field: &[u8]) {$/;"	f
push_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn push_field(&mut self, field: &str) {$/;"	f
quote	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn quote(&mut self, quote: u8) -> &mut ReaderBuilder {$/;"	f
quote	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn quote(&mut self, quote: u8) -> &mut WriterBuilder {$/;"	f
quote_block	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/fragment.rs	/^macro_rules! quote_block {$/;"	d
quote_expr	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/fragment.rs	/^macro_rules! quote_expr {$/;"	d
quote_style	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn quote_style(&mut self, style: QuoteStyle) -> &mut WriterBuilder {$/;"	f
quoting	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn quoting(&mut self, yes: bool) -> &mut ReaderBuilder {$/;"	f
range	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn range(&self, i: usize) -> Option<Range<usize>> {$/;"	f
range	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn range(&self, i: usize) -> Option<Range<usize>> {$/;"	f
range	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^mod range {$/;"	m
raw_one_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_one_byte_record() {$/;"	f
raw_one_empty_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_one_empty_record() {$/;"	f
raw_two_empty_records	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_two_empty_records() {$/;"	f
raw_unequal_records_bad	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_unequal_records_bad() {$/;"	f
raw_unequal_records_ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn raw_unequal_records_ok() {$/;"	f
read_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_byte_record() {$/;"	f
read_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn read_byte_record($/;"	f
read_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^fn read_byte_record(&mut self, record: &mut ByteRecord) -> csv::Result<bool>;$/;"	f
read_byte_record_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_byte_record_impl($/;"	f
read_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn read_record(&mut self, record: &mut StringRecord) -> Result<bool> {$/;"	f
read_record_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_headers() {$/;"	f
read_record_headers_invalid_utf8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_headers_invalid_utf8() {$/;"	f
read_record_no_headers_after	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_no_headers_after() {$/;"	f
read_record_no_headers_before	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_no_headers_before() {$/;"	f
read_record_unequal_continue	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_unequal_continue() {$/;"	f
read_record_unequal_fails	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_unequal_fails() {$/;"	f
read_record_unequal_ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_record_unequal_ok() {$/;"	f
read_trimed_header_invalid_utf8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_trimed_header_invalid_utf8() {$/;"	f
read_trimmed_header	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_trimmed_header() {$/;"	f
read_trimmed_records	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_trimmed_records() {$/;"	f
read_trimmed_records_and_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn read_trimmed_records_and_headers() {$/;"	f
readable	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn readable(&self) -> &[u8] {$/;"	f
reader	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader(&self) -> &Reader<R> {$/;"	f
reader_mut	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn reader_mut(&mut self) -> &mut Reader<R> {$/;"	f
record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn record(&self) -> u64 {$/;"	f
record_1	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn record_1() {$/;"	f
record_2	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn record_2() {$/;"	f
records	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn records(&mut self) -> StringRecordsIter<R> {$/;"	f
remote	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn remote(&self) -> Option<&syn::Path> {$/;"	f
remove_task	/home/dab/ClearHeadToDo/src/lib.rs	/^    pub fn remove_task(&mut self, index: usize, mut writer: impl std::io::Write) -> $/;"	f
rename_all_rules	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	f
rename_by_rules	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	f
rename_fields	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/case.rs	/^fn rename_fields() {$/;"	f
rename_task	/home/dab/ClearHeadToDo/src/lib.rs	/^    pub fn rename_task(&mut self, new_task_name: String) {$/;"	f
rename_variants	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/case.rs	/^fn rename_variants() {$/;"	f
replacement	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/try.rs	/^pub fn replacement() -> TokenStream {$/;"	f
requires_default	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn requires_default(field: &attr::Field, _variant: Option<&attr::Variant>) -> bool {$/;"	f
respan_token_stream	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn respan_token_stream(stream: TokenStream, span: Span) -> TokenStream {$/;"	f
respan_token_tree	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn respan_token_tree(mut token: TokenTree, span: Span) -> TokenTree {$/;"	f
run	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^fn run() -> Result<(), Box<dyn Error>> {$/;"	f
run	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^fn run() -> Result<u64, Box<dyn Error>> {$/;"	f
run	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^fn run(mut data: &[u8]) -> Option<u64> {$/;"	f
s	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn s(b: &[u8]) -> &str {$/;"	f
seek	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn seek() {$/;"	f
seek	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn seek(&mut self, pos: Position) -> Result<()> {$/;"	f
seek_headers_after	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn seek_headers_after() {$/;"	f
seek_headers_before_after	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn seek_headers_before_after() {$/;"	f
seek_headers_no_actual_seek	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn seek_headers_no_actual_seek() {$/;"	f
seek_raw	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn seek_raw($/;"	f
seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn seq() {$/;"	f
seq_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! seq_impl {$/;"	d
seq_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^macro_rules! seq_impl {$/;"	d
seq_in_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn seq_in_struct() {$/;"	f
seq_in_struct_tail	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn seq_in_struct_tail() {$/;"	f
ser_bound	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	f
serde_if_integer128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/integer128.rs	/^macro_rules! serde_if_integer128 {$/;"	d
serde_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn serde_path(&self) -> Cow<syn::Path> {$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize<S: Serialize>(s: S) -> String {$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^pub fn serialize<S: Serialize, W: io::Write>($/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn serialize<S: Serialize>(&mut self, record: S) -> Result<()> {$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/macros.rs	/^            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^                fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^    fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^                    fn serialize<__S>(&self, __serializer: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^                fn serialize<__S>(&self, __serializer: __S) -> #serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^            fn serialize<__S>(&self, __s: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^            fn serialize<__S>(&self, __serializer: __S) -> _serde::export::Result<__S::Ok, __S::Error>$/;"	f
serialize	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error> $/;"	f
serialize_adjacently_tagged_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_adjacently_tagged_variant($/;"	f
serialize_body	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_bool(self, v: bool) -> Result<Content, E> {$/;"	f
serialize_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_bytes(self, value: &[u8]) -> Result<Content, E> {$/;"	f
serialize_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_bytes(self, _v: &[u8]) -> fmt::Result {$/;"	f
serialize_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_char(self, v: char) -> Result<Content, E> {$/;"	f
serialize_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_display_bounded_length	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^macro_rules! serialize_display_bounded_length {$/;"	d
serialize_element	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_element<T: ?Sized + Serialize>($/;"	f
serialize_element	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_element	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_element	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_element	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^    fn serialize_element(&self, span: Span) -> TokenStream {$/;"	f
serialize_entry	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_entry<K: ?Sized, V: ?Sized>(&mut self, key: &K, value: &V) -> Result<(), E>$/;"	f
serialize_entry	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_entry	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_enum(params: &Parameters, variants: &[Variant], cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_err	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_err<S: Serialize>(s: S) -> Error {$/;"	f
serialize_externally_tagged_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_externally_tagged_variant($/;"	f
serialize_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_f32(self, v: f32) -> Result<Content, E> {$/;"	f
serialize_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_f64(self, v: f64) -> Result<Content, E> {$/;"	f
serialize_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_field<T: ?Sized + Serialize>($/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), E>$/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), M::Error>$/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^    fn serialize_field(&self, span: Span) -> TokenStream {$/;"	f
serialize_header	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_header<S: Serialize>(s: S) -> (bool, String) {$/;"	f
serialize_header	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^pub fn serialize_header<S: Serialize, W: io::Write>($/;"	f
serialize_header_err	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_header_err<S: Serialize>(s: S) -> Error {$/;"	f
serialize_i128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        fn serialize_i128(self, v: i128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^        fn serialize_i128(self, v: i128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_i16(self, v: i16) -> Result<Content, E> {$/;"	f
serialize_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_i32(self, v: i32) -> Result<Content, E> {$/;"	f
serialize_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_i64(self, v: i64) -> Result<Content, E> {$/;"	f
serialize_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_i8(self, v: i8) -> Result<Content, E> {$/;"	f
serialize_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_internally_tagged_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_internally_tagged_variant($/;"	f
serialize_into	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_into(params: &Parameters, type_into: &syn::Type) -> Fragment {$/;"	f
serialize_key	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_key<T: ?Sized + Serialize>($/;"	f
serialize_key	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), E>$/;"	f
serialize_key	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_key	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_map($/;"	f
serialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, E> {$/;"	f
serialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, fmt::Error> {$/;"	f
serialize_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error>;$/;"	f
serialize_name	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn serialize_name(&self) -> String {$/;"	f
serialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_newtype_struct<T: ?Sized + Serialize>($/;"	f
serialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, value: &T) -> fmt::Result$/;"	f
serialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_newtype_struct($/;"	f
serialize_newtype_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_newtype_variant<T: ?Sized + Serialize>($/;"	f
serialize_newtype_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_no_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn serialize_no_headers() {$/;"	f
serialize_no_headers_128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^        fn serialize_no_headers_128() {$/;"	f
serialize_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_none(self) -> Result<Content, E> {$/;"	f
serialize_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_none(self) -> fmt::Result {$/;"	f
serialize_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_seq($/;"	f
serialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, E> {$/;"	f
serialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, fmt::Error> {$/;"	f
serialize_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error>;$/;"	f
serialize_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_some<T: ?Sized + Serialize>($/;"	f
serialize_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Content, E>$/;"	f
serialize_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> fmt::Result$/;"	f
serialize_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_str(self, value: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_str(self, value: &str) -> Result<Content, E> {$/;"	f
serialize_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_struct($/;"	f
serialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_struct(params: &Parameters, fields: &[Field], cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_struct_as_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_struct_as_map($/;"	f
serialize_struct_as_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_struct_as_struct($/;"	f
serialize_struct_tag_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_struct_tag_field(cattrs: &attr::Container, struct_trait: &StructTrait) -> TokenStream {$/;"	f
serialize_struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_struct_variant<'a>($/;"	f
serialize_struct_variant_with_flatten	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_struct_variant_with_flatten<'a>($/;"	f
serialize_struct_visitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_struct_visitor($/;"	f
serialize_tagged_newtype	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^pub fn serialize_tagged_newtype<S, T>($/;"	f
serialize_transparent	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_tuple($/;"	f
serialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn serialize_tuple() {$/;"	f
serialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, E> {$/;"	f
serialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, fmt::Error> {$/;"	f
serialize_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error>;$/;"	f
serialize_tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_tuple_struct($/;"	f
serialize_tuple_struct_visitor	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_tuple_struct_visitor($/;"	f
serialize_tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_tuple_variant($/;"	f
serialize_u128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        fn serialize_u128(self, v: u128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^        fn serialize_u128(self, v: u128) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_u16(self, v: u16) -> Result<Content, E> {$/;"	f
serialize_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_u32(self, v: u32) -> Result<Content, E> {$/;"	f
serialize_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_u64(self, v: u64) -> Result<Content, E> {$/;"	f
serialize_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_u8(self, v: u8) -> Result<Content, E> {$/;"	f
serialize_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_unit(self) -> Result<Content, E> {$/;"	f
serialize_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_unit(self) -> fmt::Result {$/;"	f
serialize_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_unit_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_unit_struct($/;"	f
serialize_unit_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_unit_struct(self, name: &'static str) -> Result<Content, E> {$/;"	f
serialize_unit_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_unit_struct(self, name: &'static str) -> Result<Self::Ok, Self::Error>;$/;"	f
serialize_unit_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_unit_struct(cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/fmt.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_unit_variant($/;"	f
serialize_untagged_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_untagged_variant($/;"	f
serialize_value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn serialize_value<T: ?Sized + Serialize>($/;"	f
serialize_value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^        fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f
serialize_value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impossible.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_value	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn serialize_variant($/;"	f
serialize_with	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	f
serialize_with_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn serialize_with_headers() {$/;"	f
set	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn set<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	f
set_byte	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn set_byte(&mut self, byte: u64) -> &mut Position {$/;"	f
set_byte_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn set_byte_headers(&mut self, headers: ByteRecord) {$/;"	f
set_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn set_headers(&mut self, headers: StringRecord) {$/;"	f
set_headers_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    fn set_headers_impl($/;"	f
set_if_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn set_if_none(&mut self, value: T) {$/;"	f
set_line	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn set_line(&mut self, line: u64) -> &mut Position {$/;"	f
set_opt	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn set_opt<A: ToTokens>(&mut self, obj: A, value: Option<T>) {$/;"	f
set_position	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn set_position(&mut self, pos: Option<Position>) {$/;"	f
set_position	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn set_position(&mut self, pos: Option<Position>) {$/;"	f
set_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn set_record(&mut self, record: u64) -> &mut Position {$/;"	f
set_true	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    fn set_true<A: ToTokens>(&mut self, obj: A) {$/;"	f
should_trim_fields	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn should_trim_fields(&self) -> bool {$/;"	f
should_trim_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn should_trim_headers(&self) -> bool {$/;"	f
simple_hex_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn simple_hex_seq() {$/;"	f
simple_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn simple_seq() {$/;"	f
size_hint	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^pub mod size_hint {$/;"	m
skip_deserializing	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	f
skip_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	f
skip_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^    fn skip_field(&self, span: Span) -> Option<TokenStream> {$/;"	f
skip_serializing	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	f
skip_serializing_if	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn skip_serializing_if(&self) -> Option<&syn::ExprPath> {$/;"	f
source	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	f
source	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/std_error.rs	/^    fn source(&self) -> Option<&(Error + 'static)> {$/;"	f
spanned_tokens	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn spanned_tokens(s: &syn::LitStr) -> parse::Result<TokenStream> {$/;"	f
split	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn split(self) -> (A, B) {$/;"	f
split	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn split(self) -> (Self::First, Self::Second);$/;"	f
split_with_de_lifetime	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn split_with_de_lifetime($/;"	f
str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn str() {$/;"	f
string	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/export.rs	/^mod string {$/;"	m
struct_from_ast	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ast.rs	/^fn struct_from_ast<'a>($/;"	f
struct_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers() {$/;"	f
struct_headers_inside_nested_tuple_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_nested_tuple_seq() {$/;"	f
struct_headers_inside_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_seq() {$/;"	f
struct_headers_inside_tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_tuple() {$/;"	f
struct_headers_inside_tuple_scalar_after	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_tuple_scalar_after() {$/;"	f
struct_headers_inside_tuple_scalar_before	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_inside_tuple_scalar_before() {$/;"	f
struct_headers_nested	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_nested() {$/;"	f
struct_headers_nested_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_headers_nested_seq() {$/;"	f
struct_newtype	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_newtype() {$/;"	f
struct_no_headers	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_no_headers() {$/;"	f
struct_no_headers_128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^        fn struct_no_headers_128() {$/;"	f
struct_pattern	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/pretend.rs	/^fn struct_pattern(fields: &[Field]) -> TokenStream {$/;"	f
struct_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn struct_unit() {$/;"	f
struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn struct_variant<V: Visitor<'de>>($/;"	f
struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn struct_variant<V>($/;"	f
struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn struct_variant<V>($/;"	f
struct_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn struct_variant<V>($/;"	f
syn_error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/ctxt.rs	/^    pub fn syn_error(&self, err: syn::Error) {$/;"	f
tag	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn tag(&self) -> &TagType {$/;"	f
task_completion_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn task_completion_test() {$/;"	f
task_creation_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn task_creation_test() {$/;"	f
task_print_fail_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn task_print_fail_test(){$/;"	f
task_print_full_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn task_print_full_test(){$/;"	f
task_removal_fail_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn task_removal_fail_test(){$/;"	f
task_rename_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn task_rename_test() {$/;"	f
task_reprioritize_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn task_reprioritize_test() {$/;"	f
task_successful_removal_test	/home/dab/ClearHeadToDo/src/lib.rs	/^    fn task_successful_removal_test() {$/;"	f
terminator	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn terminator(&mut self, term: Terminator) -> &mut ReaderBuilder {$/;"	f
terminator	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn terminator(&mut self, term: Terminator) -> &mut WriterBuilder {$/;"	f
tests	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^mod tests {$/;"	m
tests	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^mod tests {$/;"	m
tests	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^mod tests {$/;"	m
tests	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^mod tests {$/;"	m
tests	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^mod tests {$/;"	m
tests	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^mod tests {$/;"	m
tests	/home/dab/ClearHeadToDo/src/lib.rs	/^mod tests {$/;"	m
to_compile_errors	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/lib.rs	/^fn to_compile_errors(errors: Vec<syn::Error>) -> proc_macro2::TokenStream {$/;"	f
to_core	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn to_core(self) -> csv_core::QuoteStyle {$/;"	f
to_core	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/lib.rs	/^    fn to_core(self) -> csv_core::Terminator {$/;"	f
to_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            fn to_str(self) -> String {$/;"	f
to_tokens	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	f
to_tokens	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	f
too_many_chars	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn too_many_chars() {$/;"	f
transparent	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	f
trim	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn trim(&mut self) {$/;"	f
trim	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/reader.rs	/^    pub fn trim(&mut self, trim: Trim) -> &mut ReaderBuilder {$/;"	f
trim	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn trim(&mut self) {$/;"	f
trim_back	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_back() {$/;"	f
trim_back	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_back() {$/;"	f
trim_both	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_both() {$/;"	f
trim_both	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_both() {$/;"	f
trim_does_not_panic_on_empty_records_1	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_does_not_panic_on_empty_records_1() {$/;"	f
trim_does_not_panic_on_empty_records_1	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_does_not_panic_on_empty_records_1() {$/;"	f
trim_does_not_panic_on_empty_records_2	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_does_not_panic_on_empty_records_2() {$/;"	f
trim_does_not_panic_on_empty_records_2	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_does_not_panic_on_empty_records_2() {$/;"	f
trim_does_not_panic_on_empty_records_3	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_does_not_panic_on_empty_records_3() {$/;"	f
trim_does_not_panic_on_empty_records_3	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_does_not_panic_on_empty_records_3() {$/;"	f
trim_front	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_front() {$/;"	f
trim_front	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_front() {$/;"	f
trim_whitespace_only	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn trim_whitespace_only() {$/;"	f
trim_whitespace_only	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    fn trim_whitespace_only() {$/;"	f
truncate	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn truncate(&mut self, n: usize) {$/;"	f
truncate	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn truncate(&mut self, n: usize) {$/;"	f
try	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/try.rs	/^        macro_rules! try {$/;"	d
try_float	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_float(s: &str) -> Option<f64> {$/;"	f
try_float_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_float_bytes(s: &[u8]) -> Option<f64> {$/;"	f
try_negative_integer128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn try_negative_integer128(s: &str) -> Option<i128> {$/;"	f
try_negative_integer128_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn try_negative_integer128_bytes(s: &[u8]) -> Option<i128> {$/;"	f
try_negative_integer64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_negative_integer64(s: &str) -> Option<i64> {$/;"	f
try_negative_integer64_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_negative_integer64_bytes(s: &[u8]) -> Option<i64> {$/;"	f
try_positive_integer128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn try_positive_integer128(s: &str) -> Option<u128> {$/;"	f
try_positive_integer128_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn try_positive_integer128_bytes(s: &[u8]) -> Option<u128> {$/;"	f
try_positive_integer64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_positive_integer64(s: &str) -> Option<u64> {$/;"	f
try_positive_integer64_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^fn try_positive_integer64_bytes(s: &[u8]) -> Option<u64> {$/;"	f
tuple	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn tuple() {$/;"	f
tuple_impls	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! tuple_impls {$/;"	d
tuple_impls	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/ser/impls.rs	/^macro_rules! tuple_impls {$/;"	d
tuple_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn tuple_struct() {$/;"	f
tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn tuple_variant<V: Visitor<'de>>($/;"	f
tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn tuple_variant() {$/;"	f
tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn tuple_variant<V>(mut self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
tuple_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
two_empty_records	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn two_empty_records() {$/;"	f
two_fields	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn two_fields() {$/;"	f
two_fields_too_few	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn two_fields_too_few() {$/;"	f
two_fields_too_many	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn two_fields_too_many() {$/;"	f
type_from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn type_from(&self) -> Option<&syn::Type> {$/;"	f
type_into	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn type_into(&self) -> Option<&syn::Type> {$/;"	f
type_name	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^    fn type_name(&self) -> String {$/;"	f
type_name	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^    fn type_name(&self) -> String {$/;"	f
type_of_item	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^fn type_of_item(cont: &Container) -> syn::Type {$/;"	f
type_try_from	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^    pub fn type_try_from(&self) -> Option<&syn::Type> {$/;"	f
uint_to	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/from_primitive.rs	/^macro_rules! uint_to {$/;"	d
unequal_records_bad	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn unequal_records_bad() {$/;"	f
unequal_records_ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn unequal_records_ok() {$/;"	f
unexpected	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn unexpected(&self) -> Unexpected {$/;"	f
ungroup	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/mod.rs	/^pub fn ungroup(mut ty: &Type) -> &Type {$/;"	f
unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn unit() {$/;"	f
unit_only	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    pub fn unit_only<T, E>(t: T) -> (T, UnitOnly<E>) {$/;"	f
unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f
unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn unit_variant(self) -> Result<(), Self::Error>;$/;"	f
unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn unit_variant(mut self) -> Result<(), Self::Error> {$/;"	f
unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^        fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f
unit_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn unit_variant(self) -> Result<(), E> {$/;"	f
unknown_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^            fn unknown_field(field: &str, expected: &'static [&'static str]) -> Self {$/;"	f
unknown_variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^            fn unknown_variant(variant: &str, expected: &'static [&'static str]) -> Self {$/;"	f
unraw	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/dummy.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unraw	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/internals/attr.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
utf8_clear_ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_clear_ok() {$/;"	f
utf8_error	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn utf8_error(&self) -> &Utf8Error {$/;"	f
utf8_error_1	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_1() {$/;"	f
utf8_error_2	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_2() {$/;"	f
utf8_error_3	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_3() {$/;"	f
utf8_error_4	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_4() {$/;"	f
utf8_error_5	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_5() {$/;"	f
utf8_error_6	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn utf8_error_6() {$/;"	f
valid_up_to	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/error.rs	/^    pub fn valid_up_to(&self) -> usize {$/;"	f
variant	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn variant<V>(self) -> Result<(V, Self::Variant), Self::Error>$/;"	f
variant_identifier	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! variant_identifier {$/;"	d
variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn variant_seed<V: DeserializeSeed<'de>>($/;"	f
variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn variant_seed<T>(mut self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/value.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), E>$/;"	f
variant_seed	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f
visit_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_bool<E>(self, x: bool) -> Result<Self::Value, E> {$/;"	f
visit_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	f
visit_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	f
visit_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	f
visit_bool	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_bool<__E>(self, __value: bool) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_borrowed_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'de [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	f
visit_borrowed_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	f
visit_borrowed_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_borrowed_bytes<__E>(self, __value: &'de [u8]) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_borrowed_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	f
visit_borrowed_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	f
visit_borrowed_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_borrowed_str<__E>(self, __value: &'de str) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_byte_buf	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_byte_buf	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	f
visit_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_bytes<E>(self, bytes: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	f
visit_bytes	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        fn visit_bytes<__E>(self, __value: &[u8]) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	f
visit_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	f
visit_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	f
visit_char	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_char<__E>(self, __value: char) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_content_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn visit_content_map<'de, V, E>($/;"	f
visit_content_map_ref	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn visit_content_map_ref<'a, 'de, V, E>($/;"	f
visit_content_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn visit_content_seq<'de, V, E>(content: Vec<Content<'de>>, visitor: V) -> Result<V::Value, E>$/;"	f
visit_content_seq_ref	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^    fn visit_content_seq_ref<'a, 'de, V, E>($/;"	f
visit_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f
visit_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_enum<V>(self, _visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_enum<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_enum	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_enum<__A>(self, __data: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_f32<E>(self, v: f32) -> Result<Self::Value, E>$/;"	f
visit_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	f
visit_f32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_f32<__E>(self, __value: f32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_f64<E>(self, x: f64) -> Result<Self::Value, E> {$/;"	f
visit_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_f64<E>(self, v: f64) -> Result<Self::Value, E>$/;"	f
visit_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	f
visit_f64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_f64<__E>(self, __value: f64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^        fn visit_field(&mut self, field: &'ast syn::Field) {$/;"	f
visit_float_method	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! visit_float_method {$/;"	d
visit_i128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                fn visit_i128<E>(self, v: i128) -> Result<Self::Value, E>$/;"	f
visit_i128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^        fn visit_i128<E>(self, v: i128) -> Result<Self::Value, E>$/;"	f
visit_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_i16<E>(self, v: i16) -> Result<Self::Value, E>$/;"	f
visit_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	f
visit_i16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_i16<__E>(self, __value: i16) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_i32<E>(self, v: i32) -> Result<Self::Value, E>$/;"	f
visit_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	f
visit_i32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_i32<__E>(self, __value: i32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_i64<E>(self, x: i64) -> Result<Self::Value, E> {$/;"	f
visit_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_i64<E>(self, v: i64) -> Result<Self::Value, E>$/;"	f
visit_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	f
visit_i64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_i64<__E>(self, __value: i64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_i8<E>(self, v: i8) -> Result<Self::Value, E>$/;"	f
visit_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	f
visit_i8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_i8<__E>(self, __value: i8) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_integer_method	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^macro_rules! visit_integer_method {$/;"	d
visit_macro	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^        fn visit_macro(&mut self, _mac: &'ast syn::Macro) {}$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    fn visit_map<A>(self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_map<M>(self, mut map: M) -> Result<Self::Value, M::Error>$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_map<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_map	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_map<__A>(self, mut __map: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_newtype_struct	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        fn visit_newtype_struct<__E>(self, __e: __E) -> _serde::export::Result<Self::Value, __E::Error>$/;"	f
visit_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E> {$/;"	f
visit_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_none<E>(self) -> Result<(), E>$/;"	f
visit_none	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	f
visit_path	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^        fn visit_path(&mut self, path: &'ast syn::Path) {$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    fn visit_seq<A>(mut self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    fn visit_seq<A>(self, mut $access: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_seq<A>(self, _: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_seq<A>(self, seq: A) -> Result<Self::Value, A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_seq<S>(self, _: S) -> Result<(), S::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_seq<S>(self, mut seq: S) -> Result<Self::Value, S::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_seq<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_seq<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_seq<__A>(self, #visitor_var: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_seq<__A>(self, mut __seq: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_seq	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        fn visit_seq<__A>(self, #visitor_var: __A) -> _serde::export::Result<Self::Value, __A::Error>$/;"	f
visit_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                        fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	f
visit_str	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^        fn visit_str<__E>(self, __value: &str) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_string	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
visit_string	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	f
visit_u128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                fn visit_u128<E>(self, v: u128) -> Result<Self::Value, E>$/;"	f
visit_u128	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^        fn visit_u128<E>(self, v: u128) -> Result<Self::Value, E>$/;"	f
visit_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_u16<E>(self, v: u16) -> Result<Self::Value, E>$/;"	f
visit_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	f
visit_u16	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_u16<__E>(self, __value: u16) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^                    fn visit_u32<E>(self, value: u32) -> Result<Self::Value, E>$/;"	f
visit_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_u32<E>(self, v: u32) -> Result<Self::Value, E>$/;"	f
visit_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	f
visit_u32	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_u32<__E>(self, __value: u32) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_u64<E>(self, x: u64) -> Result<Self::Value, E> {$/;"	f
visit_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	f
visit_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	f
visit_u64	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_u64<__E>(self, __value: u64) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_u8<E>(self, v: u8) -> Result<Self::Value, E>$/;"	f
visit_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	f
visit_u8	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_u8<__E>(self, __value: u8) -> _serde::export::Result<Self::Value, __E>$/;"	f
visit_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/ignored_any.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E> {$/;"	f
visit_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/de/mod.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_unit<E>(self) -> Result<(), E>$/;"	f
visit_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.115/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	f
visit_unit	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^            fn visit_unit<__E>(self) -> _serde::export::Result<Self::Value, __E>$/;"	f
with_bound	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^pub fn with_bound($/;"	f
with_capacity	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    fn with_capacity(capacity: usize) -> Bounds {$/;"	f
with_capacity	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/byte_record.rs	/^    pub fn with_capacity(buffer: usize, fields: usize) -> ByteRecord {$/;"	f
with_capacity	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/string_record.rs	/^    pub fn with_capacity(buffer: usize, fields: usize) -> StringRecord {$/;"	f
with_header	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header() {$/;"	f
with_header_empty	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_empty() {$/;"	f
with_header_empty_ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_empty_ok() {$/;"	f
with_header_missing	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_missing() {$/;"	f
with_header_missing_ok	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_missing_ok() {$/;"	f
with_header_no_fields	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_no_fields() {$/;"	f
with_header_unknown	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn with_header_unknown() {$/;"	f
with_lifetime_bound	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^pub fn with_lifetime_bound(generics: &syn::Generics, lifetime: &str) -> syn::Generics {$/;"	f
with_self_bound	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^pub fn with_self_bound($/;"	f
with_where_predicates	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^pub fn with_where_predicates($/;"	f
with_where_predicates_from_fields	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^pub fn with_where_predicates_from_fields($/;"	f
with_where_predicates_from_variants	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^pub fn with_where_predicates_from_variants($/;"	f
without_defaults	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/bound.rs	/^pub fn without_defaults(generics: &syn::Generics) -> syn::Generics {$/;"	f
without_header	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/deserializer.rs	/^    fn without_header() {$/;"	f
wrap_deserialize_field_with	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn wrap_deserialize_field_with($/;"	f
wrap_deserialize_variant_with	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn wrap_deserialize_variant_with($/;"	f
wrap_deserialize_with	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/de.rs	/^fn wrap_deserialize_with($/;"	f
wrap_in_const	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/dummy.rs	/^pub fn wrap_in_const($/;"	f
wrap_serialize_field_with	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn wrap_serialize_field_with($/;"	f
wrap_serialize_variant_with	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn wrap_serialize_variant_with($/;"	f
wrap_serialize_with	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.115/src/ser.rs	/^fn wrap_serialize_with($/;"	f
writable	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn writable(&mut self) -> &mut [u8] {$/;"	f
write	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^            fn write(&mut self, data: &[u8]) -> io::Result<usize> {$/;"	f
write_byte_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn write_byte_record(&mut self, record: &ByteRecord) -> Result<()> {$/;"	f
write_delimiter	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn write_delimiter(&mut self) -> Result<()> {$/;"	f
write_field	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn write_field<T: AsRef<[u8]>>(&mut self, field: T) -> Result<()> {$/;"	f
write_field_impl	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn write_field_impl<T: AsRef<[u8]>>(&mut self, field: T) -> Result<()> {$/;"	f
write_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/tutorial.rs	/^pub fn write_record<I, T>(&mut self, record: I) -> csv::Result<()>$/;"	f
write_record	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    pub fn write_record<I, T>(&mut self, record: I) -> Result<()>$/;"	f
write_terminator	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn write_terminator(&mut self) -> Result<()> {$/;"	f
write_terminator_into_buffer	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn write_terminator_into_buffer(&mut self) -> Result<()> {$/;"	f
written	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn written(&mut self, n: usize) {$/;"	f
wrote_header	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/serializer.rs	/^    fn wrote_header(&self) -> bool {$/;"	f
wtr_as_string	/home/dab/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.1.3/src/writer.rs	/^    fn wtr_as_string(wtr: Writer<Vec<u8>>) -> String {$/;"	f
